{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment amateur  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.1 \par
}}amateur}
{\comment Generated byDoxgyen. }
{\creatim \yr2010\mo5\dy10\hr14\min45\sec25}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.1\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Reference documentation for AMATEUR\par \pard\plain 
{\tc \v Reference documentation for AMATEUR}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Pascal S. P. Steger \par Department of Physics \par Institute of Astronomy \par ETH Zurich \par Switzerland \par {\f2 psteger@phys.ethz.ch} \parOliver J. Hahn \par Department of Physics \par Institute of Astronomy \par ETH Zurich \par Switzerland \par {\f2 ohahn@phys.ethz.ch} \par \par}{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Getting started
\par}
{\tc\tcl2 \v Getting started}
{\b AMATEUR}  is a collection of tools to analyze snapshots from cosmological simulations performed with GADGET-2. It uses AHFstep from AMIGA to isolate halos and subhalos, {\b Halo} to extract properties for custom halos out of only one particle type, and stores all output in HDF5 or plain text files.\par}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Compilation
\par}
{\tc\tcl2 \v Compilation}
{\b AMATEUR}  needs following non-standard packages to be installed on the system:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GSL}  - the {\i GNU scientific library} . This open-source package can be obtained at {\f2 http://www.gnu.org/software/gsl.}\par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HDF5}  - the {\i Hierarchical Data Format} . This library has been developed by NCSA and can be obtained at {\f2 http://hdf.ncsa.uiuc.edu/HDF5} .\par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FFTW}  - the {\i Fastest Fourier Transform in the West} . This open-source package can be obtained at {\f2 http://www.fftw.org.}\par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMIGA}  - the halo finder developed by A. Knebe.\par}
The provided makefile is compatible with GNU-make, i.e. typing {\b make}  should build the executable {\b amateur} . If your site does not have GNU-make, get it, or write your own Makefile.\par}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Running the code
\par}
{\tc\tcl2 \v Running the code}
{\b AMATEUR}  is invoked using the following syntax\par
{\b  ./amateur ID -\{xamszht\}}  or {\b  ./amateur ID } \par
where ID describes a snapshot given in Global and xamszt invoke the different commands\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b x}  - Extract snapshot data into a HDF5 file\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b a}  - Analyze the given snapshot using AHFstep from AMIGA\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b o}  - wrap AHF output files for use in MATLAB\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b m}  - Run MergerTree\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b s}  - Match subhalos with their hosthalo.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b z}  - Analyze the given snapshot using {\b Halo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b t}  - Compute the tidal field of the mass distribution\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b h}  - Run HaloTracker from AMIGA. This is a planned feature and not implemented yet.\par}
If only the snapshot ID is given as input parameter to {\b amateur} , it will run through the commands in the order listed above. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Makefile of AMATEUR{\tc \v Makefile of AMATEUR}\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All compilation options are covered in the Makefile.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b all}  (or none) - compiles all different parts\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b part.o}  - compiles the corresponding part\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run\{xaomszht\}}  - compiles amateur and runs it for a small snapshot\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b batch}  - compiles amateur and runs through all high-resolution snapshots\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b doc}  - generates the documentation\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tags}  - generates tags for use in Emacs\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clean}  - removes all *.o in preparation for a future distribution\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tidy}  - remove all except sourcecode\par}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Modifications
\par}
{\tc\tcl2 \v Modifications}
Whenever the Makefile is modified, all source code files are recompiled the next time {\b make}  is invoked.\par}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation
\par}
{\tc\tcl2 \v Documentation}
The documentation for AMATEUR can be (re)generated by issuing\par
{\b  make doc } \par
doxygen output is then available in ./doc. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AResults} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b array< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Array3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Body} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b list< T >::const_iterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HaloProperties::Cosm} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cosmology} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CrossProductWrongDimension} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Wrong dimension (n!=3) in cross product computatoin This exception is called whenever a vector has a wrong dimension when it should be used in a cross product computation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Distance} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HaloProperties::Distance} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Eigensystem3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ErrNoHalosFound} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: No halo distribution computed or found This exception is called if operations are attempted on the halo distribution, but no such halo distribution has been calculated (through FindHalos()) or loaded (not yet available) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fitdata} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fitdata_fix} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GreensFunction< nOrder >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Halo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HaloProperties} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HDFException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HResults} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b list< T >::iterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b kDTreeNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b list< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Matrix33} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MaxProgenitorsExceed} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Maximum number of halo progenitors exceeded This exception is called if a progenitor halo is added to a given halo but that halo already possesses the maximum allowed number of progenitor haloes (standard 25). This happens for memory reasons and means you have to increase the number of allowed progenitors })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OctTreeNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Output} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PoissonSolver< nstencil >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PseudoBody} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ScalarField} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Simulation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vector3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AHFrun.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call AHFstep from AMIGA })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AHFrun.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file with all publicly known functions from {\b AHFrun.cpp} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amateur.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main program, calls all subroutines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AnalyzeSnap.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analyzes a given snapshot with {\b Halo}, for all particle types })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AnalyzeSnap.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b AnalyzeSnap.cpp} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AOutput.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewrite ahf_out_halos for MATLAB input })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AOutput.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wrapper for AHF output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AResults.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of AHF results storage class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AResults.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage class for AHF output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Array3.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threedimensional array })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Array3.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threedimensional array (x,y,z) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cosmology.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cosmology.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Distance.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Distance.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Eigensystem3.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Eigensystem3.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Exceptions.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the possible Exceptions that can be thrown })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExtractSnap.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads out a Gadget2 snapshot file and stores the values in HDF5 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExtractSnap.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b ExtractSnap.cpp} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Global.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of all system-wide properties that all parts of the program should know })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Global.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b Global.cpp} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GreensFunction.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementations (non-templated) for Greensfunction })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GreensFunction.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Green's function G })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Halo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Halo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HaloProperties.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementations of the {\b HaloProperties} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HaloProperties.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class definition with all publicly known functions from {\b HaloProperties} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HaloTrackerRun.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of -h, EXPERIMENTAL! })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HaloTrackerRun.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b HaloTrackerRun.cpp} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HDFIO.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Templated C++ HDF5 frontend })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HDFIO_new.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Some templated C++ HDF5 front-end functions, for new HDF5 versions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HResults.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All routines for {\b HResults.h} contains all different routines for storing and writing results from {\b Halo} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HResults.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage class for amateur::Halo output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Matrix33.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Matrix33} implementations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Matrix33.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b Matrix33.cpp} presents a 3x3 Matrix })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MergerTreeRun.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewrite of MergerTree of AMIGA, implements -m of amateur })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MergerTreeRun.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b MergerTreeRun.cpp} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MySTL.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Customized STL functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NFWFit.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fit of a Navarro-Frenk-White potential })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OctTree.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build trees as new class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Output.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All output routines provides routines for accessing and writing AHF output as well as calculated {\b Halo} outputs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Output.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Filling output classes with values and writing them to files })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PoissonSolver.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PoissonSolver.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to solve the Poisson problem for rho })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PoissonSolver_new.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to solve the Poisson problem for rho The _new suffix means that the new fftw3.h is used })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ReadGadget.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sample input file from Gadget2, modified for use with AMATEUR })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ReadGadget.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b ReadGadget.c} and template instantiations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ScalarField.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phi })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ScalarField.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phi })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Simulation.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Simulation.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Stencil.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class for stencils used for TidalField })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SubhaloMatch.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides a wrapper to convert mtree_idx files generated by an autocorrelation run of AMIGA to give the host halo })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SubhaloMatch.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b SubhaloMatch.cpp} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TidalField.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements -t option: Computation of the tidal field })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TidalField.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class declarations for invocation of amateur .. -t })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vector3.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Vector3} implementations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vector3.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b Vector3.cpp} A three-dimensional vector (a,b,c) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AResults Class Reference\par \pard\plain 
{\tc\tcl2 \v AResults}
{\xe \v AResults}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
{
{\f2 #include <AResults.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AResults} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AResults} (unsigned npart, unsigned nvpart, float Xc, float Yc, float Zc, float VXc, float VYc, float VZc, float Mvir, float Rvir, float Vmax, float Rmax, float sigV, float lambda, float Jx, float Jy, float Jz, float a, float Eax, float Eay, float Eaz, float b, float Ebx, float Eby, float Ebz, float c, float Ecx, float Ecy, float Ecz, float ovdens, float Redge, int nbins, float Ekin, float Epot, float mbp_offset, float com_offset, float r2, float lambdaE)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~AResults} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 34 of file AResults.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AResults\:AResults}
{\xe \v AResults\:AResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AResults::AResults ()}
}\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file AResults.cpp.}\par
}
{\xe \v AResults\:AResults}
{\xe \v AResults\:AResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AResults::AResults (unsigned {\i npart},   unsigned {\i nvpart},   float {\i Xc},   float {\i Yc},   float {\i Zc},   float {\i VXc},   float {\i VYc},   float {\i VZc},   float {\i Mvir},   float {\i Rvir},   float {\i Vmax},   float {\i Rmax},   float {\i sigV},   float {\i lambda},   float {\i Jx},   float {\i Jy},   float {\i Jz},   float {\i a},   float {\i Eax},   float {\i Eay},   float {\i Eaz},   float {\i b},   float {\i Ebx},   float {\i Eby},   float {\i Ebz},   float {\i c},   float {\i Ecx},   float {\i Ecy},   float {\i Ecz},   float {\i ovdens},   float {\i Redge},   int {\i nbins},   float {\i Ekin},   float {\i Epot},   float {\i mbp_offset},   float {\i com_offset},   float {\i r2},   float {\i lambdaE})}
}\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file AResults.cpp.}\par
}
{\xe \v ~AResults\:AResults}
{\xe \v AResults\:~AResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AResults::~AResults ()}
}\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file AResults.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v toString\:AResults}
{\xe \v AResults\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string AResults::toString ()}
}\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file AResults.cpp.}\par
{
References Eigensystem3::toString(), and Vector3::toString().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b AResults.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b AResults.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
array< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v array}
{\xe \v array}
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
{
{\f2 #include <MySTL.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b array} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b array} ({\b Identifier} aSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b array} ({\b array}< T > &aArray)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~array} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b array} (T *dataptr, {\b Identifier} size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reserve} ({\b Identifier} aSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resize} ({\b Identifier} aSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b push_back} (T Elem)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b operator[]} ({\b Identifier} i) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Identifier} {\b size} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b find} (T elem) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T * {\b data_ptr} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T * {\b m_Data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Identifier} {\b m_Size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Identifier} {\b m_Backinsert}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GadgetSnapshot}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T> class array< T >\par
}

\par
{
Definition at line 18 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v array\:array}
{\xe \v array\:array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b array}< T >::{\b array} (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file MySTL.h.}\par
}
{\xe \v array\:array}
{\xe \v array\:array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b array}< T >::{\b array} ({\b Identifier} {\i aSize}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file MySTL.h.}\par
{
References array< T >::m_Backinsert, array< T >::m_Data, and array< T >::m_Size.}\par
}
{\xe \v array\:array}
{\xe \v array\:array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b array}< T >::{\b array} ({\b array}< T > & {\i aArray}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file MySTL.h.}\par
{
References array< T >::m_Backinsert, array< T >::m_Data, and array< T >::m_Size.}\par
}
{\xe \v ~array\:array}
{\xe \v array\:~array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b array}< T >::~{\b array} (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file MySTL.h.}\par
{
References array< T >::m_Data.}\par
}
{\xe \v array\:array}
{\xe \v array\:array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b array}< T >::{\b array} (T * {\i dataptr},   {\b Identifier} {\i size}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file MySTL.h.}\par
{
References array< T >::m_Data, and array< T >::m_Size.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clear\:array}
{\xe \v array\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> void {\b array}< T >::clear (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file MySTL.h.}\par
{
References array< T >::m_Data, and array< T >::m_Size.}\par
}
{\xe \v data_ptr\:array}
{\xe \v array\:data_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> T* {\b array}< T >::data_ptr (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file MySTL.h.}\par
{
References array< T >::m_Data.}\par
}
{\xe \v find\:array}
{\xe \v array\:find}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> bool {\b array}< T >::find (T {\i elem}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file MySTL.h.}\par
{
References array< T >::m_Data, and array< T >::m_Size.}\par
}
{\xe \v operator[]\:array}
{\xe \v array\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> T& {\b array}< T >::operator[] ({\b Identifier} {\i i}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file MySTL.h.}\par
{
References array< T >::m_Data.}\par
}
{\xe \v push_back\:array}
{\xe \v array\:push_back}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> void {\b array}< T >::push_back (T {\i Elem}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file MySTL.h.}\par
{
References array< T >::m_Backinsert, and array< T >::m_Data.}\par
}
{\xe \v reserve\:array}
{\xe \v array\:reserve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> void {\b array}< T >::reserve ({\b Identifier} {\i aSize}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file MySTL.h.}\par
{
References array< T >::m_Data, and array< T >::m_Size.}\par
}
{\xe \v resize\:array}
{\xe \v array\:resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> void {\b array}< T >::resize ({\b Identifier} {\i aSize}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file MySTL.h.}\par
{
References array< T >::m_Data, and array< T >::m_Size.}\par
}
{\xe \v size\:array}
{\xe \v array\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b Identifier} {\b array}< T >::size (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file MySTL.h.}\par
{
References array< T >::m_Size.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v GadgetSnapshot\:array}
{\xe \v array\:GadgetSnapshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> friend class GadgetSnapshot{\f2  [friend]}}
}\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v m_Backinsert\:array}
{\xe \v array\:m_Backinsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b Identifier} {\b array}< T >::{\b m_Backinsert}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file MySTL.h.}\par
{
Referenced by array< T >::array(), and array< T >::push_back().}\par
}
{\xe \v m_Data\:array}
{\xe \v array\:m_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> T* {\b array}< T >::{\b m_Data}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 21 of file MySTL.h.}\par
{
Referenced by array< T >::array(), array< T >::clear(), array< T >::data_ptr(), array< T >::find(), array< T >::operator[](), array< T >::push_back(), array< T >::reserve(), array< T >::resize(), and array< T >::~array().}\par
}
{\xe \v m_Size\:array}
{\xe \v array\:m_Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> {\b Identifier} {\b array}< T >::{\b m_Size}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file MySTL.h.}\par
{
Referenced by array< T >::array(), array< T >::clear(), array< T >::find(), array< T >::reserve(), array< T >::resize(), and array< T >::size().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b MySTL.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Array3 Class Reference\par \pard\plain 
{\tc\tcl2 \v Array3}
{\xe \v Array3}
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\par
{
{\f2 #include <Array3.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Array3} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Array3} (float *dataptr, int nx, int ny, int nz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Array3} (int nx, int ny, int nz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Array3} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Array3} * {\b operator=} ({\b Array3} *a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNx} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNy} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNz} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b getData} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getRealContainer} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getValue} (int ix, int iy, int iz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValue} (int ix, int iy, int iz, float val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addValue} (int ix, int iy, int iz, float val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_size} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b recreate} (int nx, int ny, int nz)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b data_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nx_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ny_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nz_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b RealContainer_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 31 of file Array3.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Array3\:Array3}
{\xe \v Array3\:Array3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Array3::Array3 (void)}
}\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file Array3.cpp.}\par
{
References data_, nx_, ny_, nz_, and RealContainer_.}\par
}
{\xe \v Array3\:Array3}
{\xe \v Array3\:Array3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Array3::Array3 (float * {\i dataptr},   int {\i nx},   int {\i ny},   int {\i nz})}
}\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file Array3.cpp.}\par
{
References data_, nx_, ny_, nz_, and RealContainer_.}\par
}
{\xe \v Array3\:Array3}
{\xe \v Array3\:Array3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Array3::Array3 (int {\i nx},   int {\i ny},   int {\i nz})}
}\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file Array3.cpp.}\par
{
References data_, nx_, ny_, nz_, and RealContainer_.}\par
}
{\xe \v ~Array3\:Array3}
{\xe \v Array3\:~Array3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Array3::~Array3 ()}
}\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Array3.cpp.}\par
{
References data_, and RealContainer_.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addValue\:Array3}
{\xe \v Array3\:addValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Array3::addValue (int {\i ix},   int {\i iy},   int {\i iz},   float {\i val})}
}\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file Array3.cpp.}\par
{
References data_, ny_, and nz_.}\par
{
Referenced by ScalarField::put_CIC().}\par
}
{\xe \v get_size\:Array3}
{\xe \v Array3\:get_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Array3::get_size (void)}
}\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file Array3.cpp.}\par
{
References nx_, ny_, and nz_.}\par
}
{\xe \v getData\:Array3}
{\xe \v Array3\:getData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* Array3::getData (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file Array3.h.}\par
{
References data_.}\par
{
Referenced by operator=().}\par
}
{\xe \v getNx\:Array3}
{\xe \v Array3\:getNx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Array3::getNx (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file Array3.h.}\par
{
References nx_.}\par
{
Referenced by operator=().}\par
}
{\xe \v getNy\:Array3}
{\xe \v Array3\:getNy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Array3::getNy (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file Array3.h.}\par
{
References ny_.}\par
{
Referenced by operator=().}\par
}
{\xe \v getNz\:Array3}
{\xe \v Array3\:getNz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Array3::getNz (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file Array3.h.}\par
{
References nz_.}\par
{
Referenced by operator=().}\par
}
{\xe \v getRealContainer\:Array3}
{\xe \v Array3\:getRealContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Array3::getRealContainer (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file Array3.h.}\par
{
References RealContainer_.}\par
{
Referenced by operator=().}\par
}
{\xe \v getValue\:Array3}
{\xe \v Array3\:getValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Array3::getValue (int {\i ix},   int {\i iy},   int {\i iz})}
}\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file Array3.cpp.}\par
{
References data_, ny_, and nz_.}\par
{
Referenced by ScalarField::getValue(), and main().}\par
}
{\xe \v operator=\:Array3}
{\xe \v Array3\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Array3} * Array3::operator= ({\b Array3} * {\i a})}
}\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Array3.cpp.}\par
{
References data_, getData(), getNx(), getNy(), getNz(), getRealContainer(), nx_, ny_, nz_, and RealContainer_.}\par
}
{\xe \v recreate\:Array3}
{\xe \v Array3\:recreate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Array3::recreate (int {\i nx},   int {\i ny},   int {\i nz})}
}\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file Array3.cpp.}\par
{
References data_, nx_, ny_, nz_, and RealContainer_.}\par
{
Referenced by ScalarField::recreate().}\par
}
{\xe \v setValue\:Array3}
{\xe \v Array3\:setValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Array3::setValue (int {\i ix},   int {\i iy},   int {\i iz},   float {\i val})}
}\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Array3.cpp.}\par
{
References data_, ny_, and nz_.}\par
{
Referenced by main(), ScalarField::put_CIC(), ScalarField::setValue(), and ScalarField::test().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v data_\:Array3}
{\xe \v Array3\:data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* {\b Array3::data_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file Array3.h.}\par
{
Referenced by addValue(), Array3(), getData(), getValue(), operator=(), recreate(), setValue(), and ~Array3().}\par
}
{\xe \v nx_\:Array3}
{\xe \v Array3\:nx_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Array3::nx_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Array3.h.}\par
{
Referenced by Array3(), get_size(), getNx(), operator=(), and recreate().}\par
}
{\xe \v ny_\:Array3}
{\xe \v Array3\:ny_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Array3::ny_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Array3.h.}\par
{
Referenced by addValue(), Array3(), get_size(), getNy(), getValue(), operator=(), recreate(), and setValue().}\par
}
{\xe \v nz_\:Array3}
{\xe \v Array3\:nz_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Array3::nz_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Array3.h.}\par
{
Referenced by addValue(), Array3(), get_size(), getNz(), getValue(), operator=(), recreate(), and setValue().}\par
}
{\xe \v RealContainer_\:Array3}
{\xe \v Array3\:RealContainer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Array3::RealContainer_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file Array3.h.}\par
{
Referenced by Array3(), getRealContainer(), operator=(), recreate(), and ~Array3().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Array3.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Array3.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Body Class Reference\par \pard\plain 
{\tc\tcl2 \v Body}
{\xe \v Body}
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\par
{
{\f2 #include <OctTree.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Body} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Body} (const std::vector< {\b Body} > &Bodies)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Body} (const {\b Body} &b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Body} ({\b real} mass_, {\b real} x_, {\b real} y_, {\b real} z_)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getx} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b gety} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getz} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getmass} (void) const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b mass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b z}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 76 of file OctTree.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Body\:Body}
{\xe \v Body\:Body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Body::Body (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file OctTree.h.}\par
}
{\xe \v Body\:Body}
{\xe \v Body\:Body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Body::Body (const std::vector< {\b Body} > & {\i Bodies}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file OctTree.h.}\par
{
References mass, x, y, and z.}\par
}
{\xe \v Body\:Body}
{\xe \v Body\:Body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Body::Body (const {\b Body} & {\i b}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file OctTree.h.}\par
}
{\xe \v Body\:Body}
{\xe \v Body\:Body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Body::Body ({\b real} {\i mass_},   {\b real} {\i x_},   {\b real} {\i y_},   {\b real} {\i z_}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file OctTree.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getmass\:Body}
{\xe \v Body\:getmass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Body::getmass (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file OctTree.h.}\par
{
References mass.}\par
}
{\xe \v getx\:Body}
{\xe \v Body\:getx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Body::getx (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file OctTree.h.}\par
{
References x.}\par
}
{\xe \v gety\:Body}
{\xe \v Body\:gety}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Body::gety (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file OctTree.h.}\par
{
References y.}\par
}
{\xe \v getz\:Body}
{\xe \v Body\:getz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Body::getz (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file OctTree.h.}\par
{
References z.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v mass\:Body}
{\xe \v Body\:mass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b Body::mass}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file OctTree.h.}\par
{
Referenced by Body(), and getmass().}\par
}
{\xe \v x\:Body}
{\xe \v Body\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b Body::x}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file OctTree.h.}\par
{
Referenced by Body(), and getx().}\par
}
{\xe \v y\:Body}
{\xe \v Body\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b Body::y}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file OctTree.h.}\par
{
Referenced by Body(), and gety().}\par
}
{\xe \v z\:Body}
{\xe \v Body\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b Body::z}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file OctTree.h.}\par
{
Referenced by Body(), and getz().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b OctTree.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
list< T >::const_iterator Class Reference\par \pard\plain 
{\tc\tcl2 \v list::const_iterator}
{\xe \v list::const_iterator}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\par
{
{\f2 #include <MySTL.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b value_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T & {\b reference}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T * {\b pointer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} (const Node *x=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} (const {\b const_iterator} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} (const {\b iterator} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} & {\b operator=} (const {\b const_iterator} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} & {\b operator=} (const {\b iterator} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} & {\b operator++} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b operator++} (int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b reference} {\b operator*} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pointer} {\b operator->} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b const_iterator} &x) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator!=} (const {\b const_iterator} &x) const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b list}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b iterator}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T> class list< T >::const_iterator\par
}

\par
{
Definition at line 151 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Typedef Documentation\par
\pard\plain 
{\xe \v pointer\:list::const_iterator}
{\xe \v list::const_iterator\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef T* {\b list}< T >::{\b const_iterator::pointer}}
}\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 160 of file MySTL.h.}\par
}
{\xe \v reference\:list::const_iterator}
{\xe \v list::const_iterator\:reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef T& {\b list}< T >::{\b const_iterator::reference}}
}\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file MySTL.h.}\par
}
{\xe \v value_type\:list::const_iterator}
{\xe \v list::const_iterator\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef T {\b list}< T >::{\b const_iterator::value_type}}
}\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 158 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v const_iterator\:list::const_iterator}
{\xe \v list::const_iterator\:const_iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::const_iterator::const_iterator (const Node * {\i x} = {\f2 0}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 161 of file MySTL.h.}\par
}
{\xe \v const_iterator\:list::const_iterator}
{\xe \v list::const_iterator\:const_iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::const_iterator::const_iterator (const {\b const_iterator} & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 162 of file MySTL.h.}\par
}
{\xe \v const_iterator\:list::const_iterator}
{\xe \v list::const_iterator\:const_iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::const_iterator::const_iterator (const {\b iterator} & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 163 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v operator!=\:list::const_iterator}
{\xe \v list::const_iterator\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> bool {\b list}< T >::const_iterator::operator!= (const {\b const_iterator} & {\i x}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 186 of file MySTL.h.}\par
}
{\xe \v operator*\:list::const_iterator}
{\xe \v list::const_iterator\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b reference} {\b list}< T >::const_iterator::operator* () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file MySTL.h.}\par
}
{\xe \v operator++\:list::const_iterator}
{\xe \v list::const_iterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b const_iterator} {\b list}< T >::const_iterator::operator++ (int){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 176 of file MySTL.h.}\par
}
{\xe \v operator++\:list::const_iterator}
{\xe \v list::const_iterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b const_iterator}& {\b list}< T >::const_iterator::operator++ (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file MySTL.h.}\par
}
{\xe \v operator->\:list::const_iterator}
{\xe \v list::const_iterator\:operator->}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b pointer} {\b list}< T >::const_iterator::operator-> () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 181 of file MySTL.h.}\par
}
{\xe \v operator=\:list::const_iterator}
{\xe \v list::const_iterator\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b const_iterator}& {\b list}< T >::const_iterator::operator= (const {\b iterator} & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 168 of file MySTL.h.}\par
}
{\xe \v operator=\:list::const_iterator}
{\xe \v list::const_iterator\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b const_iterator}& {\b list}< T >::const_iterator::operator= (const {\b const_iterator} & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 164 of file MySTL.h.}\par
}
{\xe \v operator==\:list::const_iterator}
{\xe \v list::const_iterator\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> bool {\b list}< T >::const_iterator::operator== (const {\b const_iterator} & {\i x}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 182 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v iterator\:list::const_iterator}
{\xe \v list::const_iterator\:iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> friend class {\b iterator}{\f2  [friend]}}
}\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 157 of file MySTL.h.}\par
}
{\xe \v list\:list::const_iterator}
{\xe \v list::const_iterator\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> friend class {\b list}{\f2  [friend]}}
}\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b MySTL.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HaloProperties::Cosm Struct Reference\par \pard\plain 
{\tc\tcl2 \v HaloProperties::Cosm}
{\xe \v HaloProperties::Cosm}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\par
{
{\f2 #include <HaloProperties.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b OmegaM0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b OmegaL0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b H0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b G}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b asnap}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 58 of file HaloProperties.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v asnap\:HaloProperties::Cosm}
{\xe \v HaloProperties::Cosm\:asnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::Cosm::asnap}}
}\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file HaloProperties.h.}\par
{
Referenced by HaloProperties::ComputeAngularMomentum(), HaloProperties::ComputeDensityProfile(), HaloProperties::ComputeKineticEnergy(), HaloProperties::ComputeKineticEnergyNoHubble(), HaloProperties::ComputeKineticEnergyNoHubbleExc(), HaloProperties::ComputeLambdaPrime(), HaloProperties::ComputePoormanConcentration(), HaloProperties::ComputePotentialDirect(), HaloProperties::ComputePotentialDirectExc(), HaloProperties::ComputePotentialTree(), HaloProperties::ComputePotentialTreeExc(), HaloProperties::ComputeVirialProperties(), HaloProperties::ComputeVirialProperties200(), and HaloProperties::HaloProperties().}\par
}
{\xe \v G\:HaloProperties::Cosm}
{\xe \v HaloProperties::Cosm\:G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::Cosm::G}}
}\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file HaloProperties.h.}\par
{
Referenced by HaloProperties::ComputeLambdaPrime(), HaloProperties::ComputePotentialDirect(), HaloProperties::ComputePotentialDirectExc(), HaloProperties::ComputePotentialTree(), HaloProperties::ComputePotentialTreeExc(), HaloProperties::ComputeVirialProperties(), HaloProperties::ComputeVirialProperties200(), HaloProperties::HaloProperties(), and HaloProperties::SetCosmology().}\par
}
{\xe \v H0\:HaloProperties::Cosm}
{\xe \v HaloProperties::Cosm\:H0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::Cosm::H0}}
}\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file HaloProperties.h.}\par
{
Referenced by HaloProperties::ComputeKineticEnergy(), HaloProperties::HaloProperties(), and HaloProperties::SetCosmology().}\par
}
{\xe \v OmegaL0\:HaloProperties::Cosm}
{\xe \v HaloProperties::Cosm\:OmegaL0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::Cosm::OmegaL0}}
}\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file HaloProperties.h.}\par
{
Referenced by HaloProperties::ComputeKineticEnergy(), HaloProperties::ComputeVirialProperties200(), HaloProperties::HaloProperties(), and HaloProperties::SetCosmology().}\par
}
{\xe \v OmegaM0\:HaloProperties::Cosm}
{\xe \v HaloProperties::Cosm\:OmegaM0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::Cosm::OmegaM0}}
}\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file HaloProperties.h.}\par
{
Referenced by HaloProperties::ComputeKineticEnergy(), HaloProperties::ComputeVirialProperties200(), HaloProperties::HaloProperties(), and HaloProperties::SetCosmology().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HaloProperties.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cosmology Class Reference\par \pard\plain 
{\tc\tcl2 \v Cosmology}
{\xe \v Cosmology}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
{
{\f2 #include <Cosmology.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cosmology} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cosmology} ({\b real} H0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cosmology} ({\b real} OmegaM, {\b real} OmegaR, {\b real} OmegaL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cosmology} ({\b real} H0, {\b real} OmegaM, {\b real} OmegaR, {\b real} OmegaL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setH0} ({\b real} H0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getH0} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setG} ({\b real} G)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getG} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTarkinOmega} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOmegaL} ({\b real} OmegaL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaL} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOmegaM} ({\b real} OmegaM)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOmegaR} ({\b real} OmegaR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaR} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaK} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 11 of file Cosmology.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Cosmology\:Cosmology}
{\xe \v Cosmology\:Cosmology}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Cosmology::Cosmology ()}
}\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file Cosmology.cpp.}\par
}
{\xe \v Cosmology\:Cosmology}
{\xe \v Cosmology\:Cosmology}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Cosmology::Cosmology ({\b real} {\i H0})}
}\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 10 of file Cosmology.cpp.}\par
}
{\xe \v Cosmology\:Cosmology}
{\xe \v Cosmology\:Cosmology}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Cosmology::Cosmology ({\b real} {\i OmegaM},   {\b real} {\i OmegaR},   {\b real} {\i OmegaL})}
}\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 16 of file Cosmology.cpp.}\par
}
{\xe \v Cosmology\:Cosmology}
{\xe \v Cosmology\:Cosmology}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Cosmology::Cosmology ({\b real} {\i H0},   {\b real} {\i OmegaM},   {\b real} {\i OmegaR},   {\b real} {\i OmegaL})}
}\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file Cosmology.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getG\:Cosmology}
{\xe \v Cosmology\:getG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Cosmology::getG ()}
}\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file Cosmology.cpp.}\par
{
Referenced by Simulation::getG().}\par
}
{\xe \v getH0\:Cosmology}
{\xe \v Cosmology\:getH0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Cosmology::getH0 ()}
}\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file Cosmology.cpp.}\par
{
Referenced by Simulation::getH0().}\par
}
{\xe \v getOmegaK\:Cosmology}
{\xe \v Cosmology\:getOmegaK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Cosmology::getOmegaK ()}
}\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file Cosmology.cpp.}\par
{
Referenced by Simulation::getOmegaK().}\par
}
{\xe \v getOmegaL\:Cosmology}
{\xe \v Cosmology\:getOmegaL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Cosmology::getOmegaL ()}
}\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file Cosmology.cpp.}\par
{
Referenced by Simulation::getOmegaL().}\par
}
{\xe \v getOmegaM\:Cosmology}
{\xe \v Cosmology\:getOmegaM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Cosmology::getOmegaM ()}
}\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file Cosmology.cpp.}\par
{
Referenced by Simulation::getOmegaM().}\par
}
{\xe \v getOmegaR\:Cosmology}
{\xe \v Cosmology\:getOmegaR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Cosmology::getOmegaR ()}
}\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file Cosmology.cpp.}\par
{
Referenced by Simulation::getOmegaR().}\par
}
{\xe \v setG\:Cosmology}
{\xe \v Cosmology\:setG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cosmology::setG ({\b real} {\i G})}
}\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file Cosmology.cpp.}\par
}
{\xe \v setH0\:Cosmology}
{\xe \v Cosmology\:setH0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cosmology::setH0 ({\b real} {\i H0})}
}\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Cosmology.cpp.}\par
}
{\xe \v setOmegaL\:Cosmology}
{\xe \v Cosmology\:setOmegaL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cosmology::setOmegaL ({\b real} {\i OmegaL})}
}\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file Cosmology.cpp.}\par
}
{\xe \v setOmegaM\:Cosmology}
{\xe \v Cosmology\:setOmegaM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cosmology::setOmegaM ({\b real} {\i OmegaM})}
}\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file Cosmology.cpp.}\par
}
{\xe \v setOmegaR\:Cosmology}
{\xe \v Cosmology\:setOmegaR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cosmology::setOmegaR ({\b real} {\i OmegaR})}
}\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file Cosmology.cpp.}\par
}
{\xe \v setTarkinOmega\:Cosmology}
{\xe \v Cosmology\:setTarkinOmega}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cosmology::setTarkinOmega ()}
}\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file Cosmology.cpp.}\par
{
Referenced by Simulation::setTarkinOmega().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Cosmology.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Cosmology.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CrossProductWrongDimension Class Reference\par \pard\plain 
{\tc\tcl2 \v CrossProductWrongDimension}
{\xe \v CrossProductWrongDimension}
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Wrong dimension (n!=3) in cross product computatoin This exception is called whenever a vector has a wrong dimension when it should be used in a cross product computation. }}\par
{
{\f2 #include <Exceptions.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CrossProductWrongDimension} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Wrong dimension (n!=3) in cross product computatoin This exception is called whenever a vector has a wrong dimension when it should be used in a cross product computation. \par
}{
Definition at line 60 of file Exceptions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CrossProductWrongDimension\:CrossProductWrongDimension}
{\xe \v CrossProductWrongDimension\:CrossProductWrongDimension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CrossProductWrongDimension::CrossProductWrongDimension (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file Exceptions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Exceptions.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Distance Class Reference\par \pard\plain 
{\tc\tcl2 \v Distance}
{\xe \v Distance}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
{
{\f2 #include <Distance.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Distance} ({\b real} r, unsigned i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Distance} (const {\b Distance} &d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<} (const {\b Distance} &d) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getr} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b geti} (void) const \par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 6 of file Distance.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Distance\:Distance}
{\xe \v Distance\:Distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Distance::Distance ({\b real} {\i r},   unsigned {\i i})}
}\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file Distance.cpp.}\par
}
{\xe \v Distance\:Distance}
{\xe \v Distance\:Distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Distance::Distance (const {\b Distance} & {\i d})}
}\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 9 of file Distance.cpp.}\par
{
References geti(), and getr().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v geti\:Distance}
{\xe \v Distance\:geti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned Distance::geti (void) const}
}\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file Distance.cpp.}\par
{
Referenced by Distance().}\par
}
{\xe \v getr\:Distance}
{\xe \v Distance\:getr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Distance::getr (void) const}
}\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file Distance.cpp.}\par
{
Referenced by Distance(), and operator<().}\par
}
{\xe \v operator<\:Distance}
{\xe \v Distance\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Distance::operator< (const {\b Distance} & {\i d}) const}
}\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file Distance.cpp.}\par
{
References getr().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Distance.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Distance.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HaloProperties::Distance Class Reference\par \pard\plain 
{\tc\tcl2 \v HaloProperties::Distance}
{\xe \v HaloProperties::Distance}
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\par
{
{\f2 #include <HaloProperties.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Distance} ({\b real} r, unsigned i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Distance} (const {\b Distance} &d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<} (const {\b Distance} &d2) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getr} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b geti} (void) const \par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 66 of file HaloProperties.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Distance\:HaloProperties::Distance}
{\xe \v HaloProperties::Distance\:Distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HaloProperties::Distance::Distance ({\b real} {\i r},   unsigned {\i i}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file HaloProperties.h.}\par
}
{\xe \v Distance\:HaloProperties::Distance}
{\xe \v HaloProperties::Distance\:Distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HaloProperties::Distance::Distance (const {\b Distance} & {\i d}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file HaloProperties.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v geti\:HaloProperties::Distance}
{\xe \v HaloProperties::Distance\:geti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned HaloProperties::Distance::geti (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file HaloProperties.h.}\par
}
{\xe \v getr\:HaloProperties::Distance}
{\xe \v HaloProperties::Distance\:getr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::Distance::getr (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file HaloProperties.h.}\par
}
{\xe \v operator<\:HaloProperties::Distance}
{\xe \v HaloProperties::Distance\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool HaloProperties::Distance::operator< (const {\b Distance} & {\i d2}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file HaloProperties.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HaloProperties.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Eigensystem3 Class Reference\par \pard\plain 
{\tc\tcl2 \v Eigensystem3}
{\xe \v Eigensystem3}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
{
{\f2 #include <Eigensystem3.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Eigensystem3} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Eigensystem3} ({\b Matrix33} M)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Eigensystem3} (const {\b Eigensystem3} &E)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Eigensystem3} (std::vector< {\b real} > Eval, std::vector< {\b Vector3} > Evec)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getEigen} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b real} > {\b getEval} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEval} (std::vector< {\b real} > Eval)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getEval} (int index) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Vector3} > {\b getEvec} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEvec} (std::vector< {\b Vector3} > Evec)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b getEvec} (int index) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcEV} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b normalize} ({\b real} factor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 35 of file Eigensystem3.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Eigensystem3\:Eigensystem3}
{\xe \v Eigensystem3\:Eigensystem3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigensystem3::Eigensystem3 ()}
}\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Eigensystem3.cpp.}\par
}
{\xe \v Eigensystem3\:Eigensystem3}
{\xe \v Eigensystem3\:Eigensystem3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigensystem3::Eigensystem3 ({\b Matrix33} {\i M})}
}\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file Eigensystem3.cpp.}\par
}
{\xe \v Eigensystem3\:Eigensystem3}
{\xe \v Eigensystem3\:Eigensystem3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigensystem3::Eigensystem3 (const {\b Eigensystem3} & {\i E})}
}\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file Eigensystem3.cpp.}\par
}
{\xe \v Eigensystem3\:Eigensystem3}
{\xe \v Eigensystem3\:Eigensystem3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigensystem3::Eigensystem3 (std::vector< {\b real} > {\i Eval},   std::vector< {\b Vector3} > {\i Evec})}
}\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Eigensystem3.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v calcEV\:Eigensystem3}
{\xe \v Eigensystem3\:calcEV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Eigensystem3::calcEV ()}
}\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file Eigensystem3.cpp.}\par
{
References Matrix33::Eigen().}\par
{
Referenced by Halo::calcShape().}\par
}
{\xe \v getEigen\:Eigensystem3}
{\xe \v Eigensystem3\:getEigen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Eigensystem3::getEigen ()}
}\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getEval\:Eigensystem3}
{\xe \v Eigensystem3\:getEval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Eigensystem3::getEval (int {\i index}) const}
}\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file Eigensystem3.cpp.}\par
}
{\xe \v getEval\:Eigensystem3}
{\xe \v Eigensystem3\:getEval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\b real} > Eigensystem3::getEval () const}
}\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file Eigensystem3.cpp.}\par
{
Referenced by AnalyzeSnap(), and StoreTensorField().}\par
}
{\xe \v getEvec\:Eigensystem3}
{\xe \v Eigensystem3\:getEvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Eigensystem3::getEvec (int {\i index}) const}
}\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file Eigensystem3.cpp.}\par
}
{\xe \v getEvec\:Eigensystem3}
{\xe \v Eigensystem3\:getEvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\b Vector3} > Eigensystem3::getEvec () const}
}\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Eigensystem3.cpp.}\par
{
Referenced by StoreTensorField().}\par
}
{\xe \v normalize\:Eigensystem3}
{\xe \v Eigensystem3\:normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Eigensystem3::normalize ({\b real} {\i factor})}
}\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file Eigensystem3.cpp.}\par
{
Referenced by Halo::calcShape().}\par
}
{\xe \v setEval\:Eigensystem3}
{\xe \v Eigensystem3\:setEval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Eigensystem3::setEval (std::vector< {\b real} > {\i Eval})}
}\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file Eigensystem3.cpp.}\par
}
{\xe \v setEvec\:Eigensystem3}
{\xe \v Eigensystem3\:setEvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Eigensystem3::setEvec (std::vector< {\b Vector3} > {\i Evec})}
}\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file Eigensystem3.cpp.}\par
}
{\xe \v toString\:Eigensystem3}
{\xe \v Eigensystem3\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Eigensystem3::toString (void)}
}\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file Eigensystem3.cpp.}\par
{
Referenced by HResults::toString(), and AResults::toString().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Eigensystem3.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Eigensystem3.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ErrNoHalosFound Class Reference\par \pard\plain 
{\tc\tcl2 \v ErrNoHalosFound}
{\xe \v ErrNoHalosFound}
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: No halo distribution computed or found This exception is called if operations are attempted on the halo distribution, but no such halo distribution has been calculated (through FindHalos()) or loaded (not yet available). }}\par
{
{\f2 #include <Exceptions.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ErrNoHalosFound} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: No halo distribution computed or found This exception is called if operations are attempted on the halo distribution, but no such halo distribution has been calculated (through FindHalos()) or loaded (not yet available). \par
}{
Definition at line 37 of file Exceptions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ErrNoHalosFound\:ErrNoHalosFound}
{\xe \v ErrNoHalosFound\:ErrNoHalosFound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ErrNoHalosFound::ErrNoHalosFound (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file Exceptions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Exceptions.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fitdata Struct Reference\par \pard\plain 
{\tc\tcl2 \v fitdata}
{\xe \v fitdata}
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
{
{\f2 #include <NFWFit.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b fitdata} (const size_t _n, const {\b real} *_x, const {\b real} *_y, const {\b real} *_sigma)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const size_t {\b n}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} * {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} * {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} * {\b sigma}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 40 of file NFWFit.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v fitdata\:fitdata}
{\xe \v fitdata\:fitdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fitdata::fitdata (const size_t {\i _n},   const {\b real} * {\i _x},   const {\b real} * {\i _y},   const {\b real} * {\i _sigma}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file NFWFit.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v n\:fitdata}
{\xe \v fitdata\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const size_t {\b fitdata::n}}
}\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file NFWFit.h.}\par
{
Referenced by NFW_df(), NFW_f(), and NFW_fix_fit().}\par
}
{\xe \v sigma\:fitdata}
{\xe \v fitdata\:sigma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real}* {\b fitdata::sigma}}
}\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file NFWFit.h.}\par
{
Referenced by NFW_df(), and NFW_f().}\par
}
{\xe \v x\:fitdata}
{\xe \v fitdata\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real}* {\b fitdata::x}}
}\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file NFWFit.h.}\par
{
Referenced by NFW_df(), NFW_f(), and NFW_fit().}\par
}
{\xe \v y\:fitdata}
{\xe \v fitdata\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real}* {\b fitdata::y}}
}\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file NFWFit.h.}\par
{
Referenced by NFW_f().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b NFWFit.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fitdata_fix Struct Reference\par \pard\plain 
{\tc\tcl2 \v fitdata_fix}
{\xe \v fitdata_fix}
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
{
{\f2 #include <NFWFit.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b fitdata_fix} (const size_t _n, const {\b real} *_x, const {\b real} *_y, const {\b real} *_sigma, const {\b real} _rvir, const {\b real} _mvir)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const size_t {\b n}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} * {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} * {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} * {\b sigma}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} {\b rvir}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} {\b mvir}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 52 of file NFWFit.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v fitdata_fix\:fitdata_fix}
{\xe \v fitdata_fix\:fitdata_fix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fitdata_fix::fitdata_fix (const size_t {\i _n},   const {\b real} * {\i _x},   const {\b real} * {\i _y},   const {\b real} * {\i _sigma},   const {\b real} {\i _rvir},   const {\b real} {\i _mvir}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file NFWFit.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v mvir\:fitdata_fix}
{\xe \v fitdata_fix\:mvir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real} {\b fitdata_fix::mvir}}
}\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file NFWFit.h.}\par
{
Referenced by NFW_fix_df(), and NFW_fix_f().}\par
}
{\xe \v n\:fitdata_fix}
{\xe \v fitdata_fix\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const size_t {\b fitdata_fix::n}}
}\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file NFWFit.h.}\par
{
Referenced by NFW_fit(), NFW_fix_df(), and NFW_fix_f().}\par
}
{\xe \v rvir\:fitdata_fix}
{\xe \v fitdata_fix\:rvir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real} {\b fitdata_fix::rvir}}
}\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file NFWFit.h.}\par
{
Referenced by NFW_fix_df(), and NFW_fix_f().}\par
}
{\xe \v sigma\:fitdata_fix}
{\xe \v fitdata_fix\:sigma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real}* {\b fitdata_fix::sigma}}
}\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file NFWFit.h.}\par
{
Referenced by NFW_fix_df(), and NFW_fix_f().}\par
}
{\xe \v x\:fitdata_fix}
{\xe \v fitdata_fix\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real}* {\b fitdata_fix::x}}
}\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file NFWFit.h.}\par
{
Referenced by NFW_fix_df(), NFW_fix_f(), and NFW_fix_fit().}\par
}
{\xe \v y\:fitdata_fix}
{\xe \v fitdata_fix\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real}* {\b fitdata_fix::y}}
}\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file NFWFit.h.}\par
{
Referenced by NFW_fix_f().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b NFWFit.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GreensFunction< nOrder > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v GreensFunction}
{\xe \v GreensFunction}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
{
{\f2 #include <GreensFunction.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GreensFunction} (float dx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b apply} (int k)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<> float {\b apply} (int k)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<> float {\b apply} (int k)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<> float {\b apply} (int k)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<> float {\b apply} (int k)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<> float {\b apply} (int k)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<int nOrder> class GreensFunction< nOrder >\par
}

\par
{
Definition at line 32 of file GreensFunction.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GreensFunction\:GreensFunction}
{\xe \v GreensFunction\:GreensFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nOrder> {\b GreensFunction}< nOrder >::{\b GreensFunction} (float {\i dx}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file GreensFunction.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v apply\:GreensFunction}
{\xe \v GreensFunction\:apply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<> float {\b GreensFunction}< 11 >::apply (int {\i k}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file GreensFunction.h.}\par
}
{\xe \v apply\:GreensFunction}
{\xe \v GreensFunction\:apply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<> float {\b GreensFunction}< 9 >::apply (int {\i k}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file GreensFunction.h.}\par
}
{\xe \v apply\:GreensFunction}
{\xe \v GreensFunction\:apply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<> float {\b GreensFunction}< 7 >::apply (int {\i k}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file GreensFunction.h.}\par
}
{\xe \v apply\:GreensFunction}
{\xe \v GreensFunction\:apply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<> float {\b GreensFunction}< 5 >::apply (int {\i k}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file GreensFunction.h.}\par
}
{\xe \v apply\:GreensFunction}
{\xe \v GreensFunction\:apply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<> float {\b GreensFunction}< 3 >::apply (int {\i k}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file GreensFunction.h.}\par
}
{\xe \v apply\:GreensFunction}
{\xe \v GreensFunction\:apply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nOrder> float {\b GreensFunction}< nOrder >::apply (int {\i k}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file GreensFunction.cpp.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b GreensFunction.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b GreensFunction.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Halo Class Reference\par \pard\plain 
{\tc\tcl2 \v Halo}
{\xe \v Halo}
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\par
{
{\f2 #include <Halo.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Halo} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Halo} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Halo} ({\b Simulation} sim, {\b real} *pos, {\b real} *vel, {\b real} *mass, int *type, unsigned npart)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getMtot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getRtot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getMvir} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getRvir} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b getXCM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b getVCM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b getXMB} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b getVMB} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b calcNpart} (int htype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return number of particles of a given halo type }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b calcMpart} (int htype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return mass of particles of a given halo type }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b calcSigma} (int htype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate velocity dispersion sigma^2 = mean(v^2) - mean(v)^2 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b calcLambda} (int htype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
computes the simplified spin parameter lambda prime computes the halo spin parameter lambda' (Bullock et al. 2001). assumption: POS AND VEL CENTERED ON REFERENCE POINT (centerCM, centerMB) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b calcJ} (int htype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate angular momentum Angular momentum without considering Hubble flow (ASS: too short scales) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Eigensystem3} {\b calcShape} (int htype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate halo shape determine inertia tensor of all particles of a given type, search eigensystem }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 26 of file Halo.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Halo\:Halo}
{\xe \v Halo\:Halo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Halo::Halo ()}
}\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file Halo.cpp.}\par
}
{\xe \v ~Halo\:Halo}
{\xe \v Halo\:~Halo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Halo::~Halo ()}
}\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file Halo.cpp.}\par
}
{\xe \v Halo\:Halo}
{\xe \v Halo\:Halo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Halo::Halo ({\b Simulation} {\i sim},   {\b real} * {\i pos},   {\b real} * {\i vel},   {\b real} * {\i mass},   int * {\i type},   unsigned {\i npart})}
}\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file Halo.cpp.}\par
{
References Simulation::getRhobox().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v calcJ\:Halo}
{\xe \v Halo\:calcJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Halo::calcJ (int {\i htype})}
}\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate angular momentum Angular momentum without considering Hubble flow (ASS: too short scales) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i htype,:} int \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid J: {\b Vector3} \par
}}{
Definition at line 659 of file Halo.cpp.}\par
{
References Simulation::getAsnap().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v calcLambda\:Halo}
{\xe \v Halo\:calcLambda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Halo::calcLambda (int {\i htype})}
}\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
computes the simplified spin parameter lambda prime computes the halo spin parameter lambda' (Bullock et al. 2001). assumption: POS AND VEL CENTERED ON REFERENCE POINT (centerCM, centerMB) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i htype,:} int \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid lambda' \par
}}{
Definition at line 609 of file Halo.cpp.}\par
{
References Simulation::getAsnap(), Simulation::getG(), and Vector3::norm().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v calcMpart\:Halo}
{\xe \v Halo\:calcMpart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Halo::calcMpart (int {\i htype})}
}\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return mass of particles of a given halo type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i htype,:} int \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid total mass of htype particles \par
}}{
Definition at line 542 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v calcNpart\:Halo}
{\xe \v Halo\:calcNpart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Halo::calcNpart (int {\i htype})}
}\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return number of particles of a given halo type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i htype,:} int \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid total number of htype particles \par
}}{
Definition at line 526 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v calcShape\:Halo}
{\xe \v Halo\:calcShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Eigensystem3} Halo::calcShape (int {\i htype})}
}\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate halo shape determine inertia tensor of all particles of a given type, search eigensystem }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i htype,:} int \par
}
}{
Definition at line 692 of file Halo.cpp.}\par
{
References Eigensystem3::calcEV(), Eigensystem3::normalize(), and Matrix33::set_diag().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v calcSigma\:Halo}
{\xe \v Halo\:calcSigma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Halo::calcSigma (int {\i htype})}
}\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate velocity dispersion sigma^2 = mean(v^2) - mean(v)^2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i htype,:} int \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid sigma: real \par
}}{
Definition at line 560 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getMtot\:Halo}
{\xe \v Halo\:getMtot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Halo::getMtot ()}
}\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 279 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getMvir\:Halo}
{\xe \v Halo\:getMvir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Halo::getMvir ()}
}\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 289 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getRtot\:Halo}
{\xe \v Halo\:getRtot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Halo::getRtot ()}
}\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 284 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getRvir\:Halo}
{\xe \v Halo\:getRvir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Halo::getRvir ()}
}\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 294 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getVCM\:Halo}
{\xe \v Halo\:getVCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Halo::getVCM ()}
}\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 304 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getVMB\:Halo}
{\xe \v Halo\:getVMB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Halo::getVMB ()}
}\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 314 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getXCM\:Halo}
{\xe \v Halo\:getXCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Halo::getXCM ()}
}\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 299 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getXMB\:Halo}
{\xe \v Halo\:getXMB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Halo::getXMB ()}
}\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 309 of file Halo.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Halo.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Halo.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HaloProperties Class Reference\par \pard\plain 
{\tc\tcl2 \v HaloProperties}
{\xe \v HaloProperties}
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
{
{\f2 #include <HaloProperties.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Cosm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Distance}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HaloProperties} ({\b real} *pPos, {\b real} *pVel, {\b real} *pMass, unsigned nPart, {\b real} zsnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetCosmology} ({\b real} OmegaM0, {\b real} OmegaL0, {\b real} H0, {\b real} G)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputeTotalMass} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputeTotalMassExc} (std::vector< bool > excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeCM} ({\b real} Boxlength, {\b Vector3} &xcm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeCMExc} ({\b real} Boxlength, {\b Vector3} &xcm, std::vector< bool > excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeMB} ({\b real} Boxlength, {\b Vector3} &xmb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeMBExc} ({\b real} Boxlength, {\b Vector3} &xmb, std::vector< bool > excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CenterOnCM} ({\b real} Boxlength)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CenterOnCMExc} ({\b real} Boxlength, std::vector< bool > excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b CenterOnMB} ({\b real} Boxlength)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b CenterOnMB} ({\b real} Boxlength, {\b real} &rmbcm, {\b real} &alpha)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CenterOnCoord} ({\b real} *xc, {\b real} Boxlength)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AverageVel} (const unsigned n, const {\b real} eps=0.0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeCenterVel} ({\b Vector3} &vcm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeCenterVelExc} ({\b Vector3} &vcm, std::vector< bool > excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CenterVel} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CenterVelOn} ({\b real} *vc)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CenterVelExc} (std::vector< bool > excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeAngularMomentum} ({\b real} &Jtot)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputeAngularMomentum} ({\b Vector3} &J) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVelocityDispersion} ({\b real} &Sigma)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetSortedDistances} (std::vector< {\b Distance} > &dvec) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeMajorAxes} ({\b Vector3} &Eigenvalues, std::vector< {\b Vector3} > &Eigenvectors) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeMajorAxesReduced} ({\b Vector3} &Eigenvalues, std::vector< {\b Vector3} > &Eigenvectors) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeShapeParameters} ({\b real} &T, {\b real} &S) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties200} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties200} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir, {\b real} &Vcmax) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties200} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir, std::vector< {\b Distance} > &dvec) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties200} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir, {\b real} &Vcmax, std::vector< {\b Distance} > &dvec) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir, {\b real} &Vcmax) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir, std::vector< {\b Distance} > &dvec) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeVirialProperties} ({\b real} rhobox, {\b real} &Mvir, {\b real} &Rvir, {\b real} &Vcmax, std::vector< {\b Distance} > &dvec) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputePoormanConcentration} ({\b real} rhobox, {\b real} &R20, {\b real} &R80)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputePoormanConcentration} ({\b real} rhobox)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeLambdaPrime} ({\b real} &lambda, {\b real} Mvir, {\b real} Rvir)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
computes the simplified spin parameter lambda prime computes the lambda prime (Bullock et al. 2001). ASSUMES THAT COORDINATES AND VELOCITIES ARE CENTERED ON REFERENCE POINT. so center on center of mass or something. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputeKineticEnergy} (std::vector< {\b real} > &kin) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputeKineticEnergyNoHubble} (std::vector< {\b real} > &kin) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputeKineticEnergyNoHubbleExc} (std::vector< {\b real} > &kin, std::vector< bool > excluded) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputePotentialDirect} ({\b real} plumsoft, std::vector< {\b real} > &phi) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputePotentialDirectExc} ({\b real} plumsoft, std::vector< {\b real} > &phi, std::vector< bool > excluded) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b ComputePotentialTree} ({\b real} theta, {\b real} plumsoft, std::vector< {\b real} > &phi) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ComputePotentialTreeExc} ({\b real} theta, {\b real} plumsoft, std::vector< {\b real} > &phi, std::vector< bool > excluded) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< bool > {\b CleanUnbound} ({\b real} boxsize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CleanUnboundExc} ({\b real} boxsize, std::vector< bool > &excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CleanUnboundSimple} ({\b real} boxsize, std::vector< bool > &excluded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ComputeDensityProfile} ({\b real} rhobox, unsigned n, std::vector< {\b real} > &r, std::vector< {\b real} > &rho, std::vector< {\b real} > &sigma_rho) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FitNFWProfile2} ({\b real} rhobox, unsigned n, {\b real} &fdeltac, {\b real} &fedeltac, {\b real} &frs, {\b real} &fers) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FitNFWProfile1} ({\b real} rhobox, unsigned n, {\b real} &frs, {\b real} &fers) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FitNFWProfile200} ({\b real} rhobox, unsigned n, {\b real} &frs, {\b real} &fers) const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_xcm} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_xmb} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_vcm} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_vmb} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_rmbcm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} * {\b m_pPos}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} * {\b m_pVel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} * {\b m_pMass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_mtot}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b m_nPart}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_alpha}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b m_imostbound}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cosm} {\b m_Cosm}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 47 of file HaloProperties.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HaloProperties\:HaloProperties}
{\xe \v HaloProperties\:HaloProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HaloProperties::HaloProperties ({\b real} * {\i pPos},   {\b real} * {\i pVel},   {\b real} * {\i pMass},   unsigned {\i nPart},   {\b real} {\i zsnap})}
}\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, HaloProperties::Cosm::H0, m_Cosm, m_imostbound, m_mtot, m_nPart, m_pMass, m_pPos, m_pVel, m_vcm, m_vmb, m_xcm, m_xmb, HaloProperties::Cosm::OmegaL0, and HaloProperties::Cosm::OmegaM0.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AverageVel\:HaloProperties}
{\xe \v HaloProperties\:AverageVel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::AverageVel (const unsigned {\i n},   const {\b real} {\i eps} = {\f2 0.0})}
}\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
average the velocities of particles using ANN \par
}{
Definition at line 325 of file HaloProperties.cpp.}\par
{
References m_nPart, m_pMass, m_pPos, m_pVel, and SPHK3D().}\par
}
{\xe \v CenterOnCM\:HaloProperties}
{\xe \v HaloProperties\:CenterOnCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CenterOnCM ({\b real} {\i Boxlength})}
}\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
centers on the CM obeying periodic boundary conditions. REQUIRES THAT THE EXTENSION OF THE OBJECT DO NOT EXCEED 0.25 OF THE BOX LENGTH. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Boxlength} the length of the simulation box \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid nothing, centers the coordinates on the CM and stores the CM \par
}}{
Definition at line 125 of file HaloProperties.cpp.}\par
{
References m_mtot, m_nPart, m_pMass, m_pPos, and m_xcm.}\par
{
Referenced by CleanUnboundSimple().}\par
}
{\xe \v CenterOnCMExc\:HaloProperties}
{\xe \v HaloProperties\:CenterOnCMExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CenterOnCMExc ({\b real} {\i Boxlength},   std::vector< bool > {\i excluded})}
}\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 157 of file HaloProperties.cpp.}\par
{
References m_nPart, m_pMass, m_pPos, and m_xcm.}\par
{
Referenced by CleanUnboundExc().}\par
}
{\xe \v CenterOnCoord\:HaloProperties}
{\xe \v HaloProperties\:CenterOnCoord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CenterOnCoord ({\b real} * {\i xc},   {\b real} {\i Boxlength})}
}\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
centers all coordinates on specified point {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i xc} pointer to an array of three reals contain the point to be centered on \par
{\i Boxlength} size of simulation (cubic) box \par
}
}{
Definition at line 314 of file HaloProperties.cpp.}\par
{
References m_nPart, and m_pPos.}\par
{
Referenced by CenterOnMB().}\par
}
{\xe \v CenterOnMB\:HaloProperties}
{\xe \v HaloProperties\:CenterOnMB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::CenterOnMB ({\b real} {\i Boxlength},   {\b real} & {\i rmbcm},   {\b real} & {\i alpha})}
}\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Center on Most Bound particle. CenterOnCM( Boxlength ); {\b CenterVel()}; is needed before invoking CenterOnMB {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Boxlength} \par
{\i rmbcm} \par
{\i alpha} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Definition at line 270 of file HaloProperties.cpp.}\par
{
References CenterOnCoord(), ComputeKineticEnergyNoHubble(), ComputePotentialDirect(), ComputePotentialTree(), FORCE_DIRECT_TREE_SPLIT, m_alpha, m_imostbound, m_nPart, m_pPos, m_rmbcm, and m_xmb.}\par
}
{\xe \v CenterOnMB\:HaloProperties}
{\xe \v HaloProperties\:CenterOnMB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::CenterOnMB ({\b real} {\i Boxlength})}
}\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
centers all coordinates on the MB obeying periodic boundary conditions ... centers on the MB obeying periodic boundary conditions. REQUIRES THAT THE EXTENSION OF THE OBJECT DOES NOT EXCEED 0.25 * BOX LENGTH. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Boxlength} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid distance of mb from cm, centers the coordinates on the MB and stores the MB \par
}}{
Definition at line 257 of file HaloProperties.cpp.}\par
}
{\xe \v CenterVel\:HaloProperties}
{\xe \v HaloProperties\:CenterVel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CenterVel (void)}
}\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 429 of file HaloProperties.cpp.}\par
{
References m_mtot, m_nPart, m_pMass, m_pVel, and m_vcm.}\par
{
Referenced by CleanUnboundSimple().}\par
}
{\xe \v CenterVelExc\:HaloProperties}
{\xe \v HaloProperties\:CenterVelExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CenterVelExc (std::vector< bool > {\i excluded})}
}\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 459 of file HaloProperties.cpp.}\par
{
References m_nPart, m_pMass, m_pVel, and m_vcm.}\par
{
Referenced by CleanUnboundExc().}\par
}
{\xe \v CenterVelOn\:HaloProperties}
{\xe \v HaloProperties\:CenterVelOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CenterVelOn ({\b real} * {\i vc})}
}\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 451 of file HaloProperties.cpp.}\par
{
References m_nPart, m_pVel, and m_vcm.}\par
}
{\xe \v CleanUnbound\:HaloProperties}
{\xe \v HaloProperties\:CleanUnbound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< bool > HaloProperties::CleanUnbound ({\b real} {\i boxsize})}
}\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1098 of file HaloProperties.cpp.}\par
{
References CleanUnboundExc(), and m_nPart.}\par
}
{\xe \v CleanUnboundExc\:HaloProperties}
{\xe \v HaloProperties\:CleanUnboundExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CleanUnboundExc ({\b real} {\i boxsize},   std::vector< bool > & {\i excluded})}
}\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1106 of file HaloProperties.cpp.}\par
{
References CenterOnCMExc(), CenterVelExc(), ComputeKineticEnergyNoHubbleExc(), ComputePotentialTreeExc(), and m_nPart.}\par
{
Referenced by CleanUnbound().}\par
}
{\xe \v CleanUnboundSimple\:HaloProperties}
{\xe \v HaloProperties\:CleanUnboundSimple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::CleanUnboundSimple ({\b real} {\i boxsize},   std::vector< bool > & {\i excluded})}
}\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1170 of file HaloProperties.cpp.}\par
{
References CenterOnCM(), CenterVel(), ComputeKineticEnergyNoHubbleExc(), ComputePotentialDirectExc(), and m_nPart.}\par
}
{\xe \v ComputeAngularMomentum\:HaloProperties}
{\xe \v HaloProperties\:ComputeAngularMomentum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputeAngularMomentum ({\b Vector3} & {\i J}) const}
}\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
computes the angular momentum in internal units. assumes that coordinates and velocities are centered on a reference point \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid real Jtot, total angular momentum \par
}}{
Definition at line 517 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, m_Cosm, m_nPart, m_pMass, m_pPos, m_pVel, and Vector3::norm().}\par
}
{\xe \v ComputeAngularMomentum\:HaloProperties}
{\xe \v HaloProperties\:ComputeAngularMomentum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeAngularMomentum ({\b real} & {\i Jtot})}
}\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
computes the angular momentum in internal units. assumes that coordinates and velocities are centered on a reference point {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Jtot} total angular momentum \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 492 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, m_Cosm, m_nPart, m_pMass, m_pPos, and m_pVel.}\par
}
{\xe \v ComputeCenterVel\:HaloProperties}
{\xe \v HaloProperties\:ComputeCenterVel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeCenterVel ({\b Vector3} & {\i vcm})}
}\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 392 of file HaloProperties.cpp.}\par
{
References m_mtot, m_nPart, m_pMass, m_pVel, and m_vcm.}\par
}
{\xe \v ComputeCenterVelExc\:HaloProperties}
{\xe \v HaloProperties\:ComputeCenterVelExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeCenterVelExc ({\b Vector3} & {\i vcm},   std::vector< bool > {\i excluded})}
}\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 408 of file HaloProperties.cpp.}\par
{
References m_nPart, m_pMass, and m_pVel.}\par
}
{\xe \v ComputeCM\:HaloProperties}
{\xe \v HaloProperties\:ComputeCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeCM ({\b real} {\i Boxlength},   {\b Vector3} & {\i xcm})}
}\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file HaloProperties.cpp.}\par
{
References m_mtot, m_nPart, m_pMass, and m_pPos.}\par
}
{\xe \v ComputeCMExc\:HaloProperties}
{\xe \v HaloProperties\:ComputeCMExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeCMExc ({\b real} {\i Boxlength},   {\b Vector3} & {\i xcm},   std::vector< bool > {\i excluded})}
}\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file HaloProperties.cpp.}\par
{
References m_nPart, m_pMass, and m_pPos.}\par
}
{\xe \v ComputeDensityProfile\:HaloProperties}
{\xe \v HaloProperties\:ComputeDensityProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int HaloProperties::ComputeDensityProfile ({\b real} {\i rhobox},   unsigned {\i n},   std::vector< {\b real} > & {\i r},   std::vector< {\b real} > & {\i rho},   std::vector< {\b real} > & {\i sigma_rho}) const}
}\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1202 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, ComputeVirialProperties(), m_Cosm, m_nPart, and m_pMass.}\par
{
Referenced by FitNFWProfile1(), FitNFWProfile2(), and FitNFWProfile200().}\par
}
{\xe \v ComputeKineticEnergy\:HaloProperties}
{\xe \v HaloProperties\:ComputeKineticEnergy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputeKineticEnergy (std::vector< {\b real} > & {\i kin}) const}
}\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the kinetic energies for all particles {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i kin} vector to be filled with kin. energies \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid total kinetic energy \par
}}{
Definition at line 846 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::H0, m_Cosm, m_nPart, m_pMass, m_pPos, m_pVel, HaloProperties::Cosm::OmegaL0, and HaloProperties::Cosm::OmegaM0.}\par
}
{\xe \v ComputeKineticEnergyNoHubble\:HaloProperties}
{\xe \v HaloProperties\:ComputeKineticEnergyNoHubble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputeKineticEnergyNoHubble (std::vector< {\b real} > & {\i kin}) const}
}\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the kinetic energy of all particles without Hubble flow. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i kin} vector with kinetic energies \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid total kinetic energy \par
}}{
Definition at line 887 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, m_Cosm, m_nPart, m_pMass, and m_pVel.}\par
{
Referenced by CenterOnMB(), ComputeMB(), and ComputeMBExc().}\par
}
{\xe \v ComputeKineticEnergyNoHubbleExc\:HaloProperties}
{\xe \v HaloProperties\:ComputeKineticEnergyNoHubbleExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeKineticEnergyNoHubbleExc (std::vector< {\b real} > & {\i kin},   std::vector< bool > {\i excluded}) const}
}\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 924 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, m_Cosm, m_nPart, m_pMass, and m_pVel.}\par
{
Referenced by CleanUnboundExc(), and CleanUnboundSimple().}\par
}
{\xe \v ComputeLambdaPrime\:HaloProperties}
{\xe \v HaloProperties\:ComputeLambdaPrime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeLambdaPrime ({\b real} & {\i lambda},   {\b real} {\i Mvir},   {\b real} {\i Rvir})}
}\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
computes the simplified spin parameter lambda prime computes the lambda prime (Bullock et al. 2001). ASSUMES THAT COORDINATES AND VELOCITIES ARE CENTERED ON REFERENCE POINT. so center on center of mass or something. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i lambda} storage for halo spin parameter \par
{\i Mvir} the virial mass is returned here \par
{\i Rvir} the virial radius is returned here \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 805 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, GetSortedDistances(), m_Cosm, m_nPart, m_pMass, m_pPos, m_pVel, and Vector3::norm().}\par
}
{\xe \v ComputeMajorAxes\:HaloProperties}
{\xe \v HaloProperties\:ComputeMajorAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeMajorAxes ({\b Vector3} & {\i Eigenvalues},   std::vector< {\b Vector3} > & {\i Eigenvectors}) const}
}\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 583 of file HaloProperties.cpp.}\par
{
References Matrix33::Eigen(), m_mtot, m_nPart, m_pMass, and m_pPos.}\par
{
Referenced by ComputeShapeParameters().}\par
}
{\xe \v ComputeMajorAxesReduced\:HaloProperties}
{\xe \v HaloProperties\:ComputeMajorAxesReduced}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeMajorAxesReduced ({\b Vector3} & {\i Eigenvalues},   std::vector< {\b Vector3} > & {\i Eigenvectors}) const}
}\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 618 of file HaloProperties.cpp.}\par
{
References Matrix33::Eigen(), m_imostbound, m_nPart, m_pMass, and m_pPos.}\par
}
{\xe \v ComputeMB\:HaloProperties}
{\xe \v HaloProperties\:ComputeMB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeMB ({\b real} {\i Boxlength},   {\b Vector3} & {\i xmb})}
}\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 197 of file HaloProperties.cpp.}\par
{
References ComputeKineticEnergyNoHubble(), ComputePotentialDirect(), ComputePotentialTree(), FORCE_DIRECT_TREE_SPLIT, m_nPart, and m_pPos.}\par
}
{\xe \v ComputeMBExc\:HaloProperties}
{\xe \v HaloProperties\:ComputeMBExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeMBExc ({\b real} {\i Boxlength},   {\b Vector3} & {\i xmb},   std::vector< bool > {\i excluded})}
}\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 224 of file HaloProperties.cpp.}\par
{
References ComputeKineticEnergyNoHubble(), ComputePotentialDirect(), ComputePotentialTree(), FORCE_DIRECT_TREE_SPLIT, m_nPart, and m_pPos.}\par
}
{\xe \v ComputePoormanConcentration\:HaloProperties}
{\xe \v HaloProperties\:ComputePoormanConcentration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputePoormanConcentration ({\b real} {\i rhobox})}
}\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 789 of file HaloProperties.cpp.}\par
{
References ComputePoormanConcentration().}\par
}
{\xe \v ComputePoormanConcentration\:HaloProperties}
{\xe \v HaloProperties\:ComputePoormanConcentration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputePoormanConcentration ({\b real} {\i rhobox},   {\b real} & {\i R20},   {\b real} & {\i R80})}
}\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 778 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, ComputeVirialProperties(), and m_Cosm.}\par
{
Referenced by ComputePoormanConcentration().}\par
}
{\xe \v ComputePotentialDirect\:HaloProperties}
{\xe \v HaloProperties\:ComputePotentialDirect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputePotentialDirect ({\b real} {\i plumsoft},   std::vector< {\b real} > & {\i phi}) const}
}\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the potential directly from particle positions and masses. Center on CM before invoking this routine {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i plumsoft} smoothing length \par
{\i phi} potential \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid total potential energy \par
}}{
Definition at line 940 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, m_Cosm, m_nPart, m_pMass, and m_pPos.}\par
{
Referenced by CenterOnMB(), ComputeMB(), and ComputeMBExc().}\par
}
{\xe \v ComputePotentialDirectExc\:HaloProperties}
{\xe \v HaloProperties\:ComputePotentialDirectExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputePotentialDirectExc ({\b real} {\i plumsoft},   std::vector< {\b real} > & {\i phi},   std::vector< bool > {\i excluded}) const}
}\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 966 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, m_Cosm, m_nPart, m_pMass, and m_pPos.}\par
{
Referenced by CleanUnboundSimple().}\par
}
{\xe \v ComputePotentialTree\:HaloProperties}
{\xe \v HaloProperties\:ComputePotentialTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputePotentialTree ({\b real} {\i theta},   {\b real} {\i plumsoft},   std::vector< {\b real} > & {\i phi}) const}
}\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 995 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, m_Cosm, m_nPart, m_pMass, m_pPos, and OctTreeNode::traverse().}\par
{
Referenced by CenterOnMB(), ComputeMB(), and ComputeMBExc().}\par
}
{\xe \v ComputePotentialTreeExc\:HaloProperties}
{\xe \v HaloProperties\:ComputePotentialTreeExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputePotentialTreeExc ({\b real} {\i theta},   {\b real} {\i plumsoft},   std::vector< {\b real} > & {\i phi},   std::vector< bool > {\i excluded}) const}
}\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1049 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, m_Cosm, m_nPart, m_pMass, m_pPos, and OctTreeNode::traverse().}\par
{
Referenced by CleanUnboundExc().}\par
}
{\xe \v ComputeShapeParameters\:HaloProperties}
{\xe \v HaloProperties\:ComputeShapeParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeShapeParameters ({\b real} & {\i T},   {\b real} & {\i S}) const}
}\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 658 of file HaloProperties.cpp.}\par
{
References ComputeMajorAxes().}\par
}
{\xe \v ComputeTotalMass\:HaloProperties}
{\xe \v HaloProperties\:ComputeTotalMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputeTotalMass (void)}
}\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file HaloProperties.cpp.}\par
{
References m_mtot.}\par
}
{\xe \v ComputeTotalMassExc\:HaloProperties}
{\xe \v HaloProperties\:ComputeTotalMassExc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} HaloProperties::ComputeTotalMassExc (std::vector< bool > {\i excluded})}
}\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file HaloProperties.cpp.}\par
{
References m_nPart, and m_pMass.}\par
}
{\xe \v ComputeVelocityDispersion\:HaloProperties}
{\xe \v HaloProperties\:ComputeVelocityDispersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVelocityDispersion ({\b real} & {\i Sigma})}
}\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
computes the velocity dispersion (sigma) in internal units assumes that pos and vel be centered \par
}{
Definition at line 546 of file HaloProperties.cpp.}\par
{
References m_nPart, and m_pVel.}\par
}
{\xe \v ComputeVirialProperties\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir},   {\b real} & {\i Vcmax},   std::vector< {\b Distance} > & {\i dvec}) const}
}\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 728 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, GetSortedDistances(), m_Cosm, and m_pMass.}\par
}
{\xe \v ComputeVirialProperties\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir},   std::vector< {\b Distance} > & {\i dvec}) const}
}\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 761 of file HaloProperties.cpp.}\par
{
References ComputeVirialProperties().}\par
}
{\xe \v ComputeVirialProperties\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir},   {\b real} & {\i Vcmax}) const}
}\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 766 of file HaloProperties.cpp.}\par
{
References ComputeVirialProperties().}\par
}
{\xe \v ComputeVirialProperties\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir}) const}
}\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 771 of file HaloProperties.cpp.}\par
{
Referenced by ComputeDensityProfile(), ComputePoormanConcentration(), ComputeVirialProperties(), and FitNFWProfile1().}\par
}
{\xe \v ComputeVirialProperties200\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties200}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties200 ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir},   {\b real} & {\i Vcmax},   std::vector< {\b Distance} > & {\i dvec}) const}
}\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 668 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::asnap, HaloProperties::Cosm::G, GetSortedDistances(), m_Cosm, m_pMass, HaloProperties::Cosm::OmegaL0, and HaloProperties::Cosm::OmegaM0.}\par
}
{\xe \v ComputeVirialProperties200\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties200}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties200 ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir},   std::vector< {\b Distance} > & {\i dvec}) const}
}\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 715 of file HaloProperties.cpp.}\par
{
References ComputeVirialProperties200().}\par
}
{\xe \v ComputeVirialProperties200\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties200}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties200 ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir},   {\b real} & {\i Vcmax}) const}
}\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 710 of file HaloProperties.cpp.}\par
{
References ComputeVirialProperties200().}\par
}
{\xe \v ComputeVirialProperties200\:HaloProperties}
{\xe \v HaloProperties\:ComputeVirialProperties200}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::ComputeVirialProperties200 ({\b real} {\i rhobox},   {\b real} & {\i Mvir},   {\b real} & {\i Rvir}) const}
}\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 720 of file HaloProperties.cpp.}\par
{
Referenced by ComputeVirialProperties200(), and FitNFWProfile200().}\par
}
{\xe \v FitNFWProfile1\:HaloProperties}
{\xe \v HaloProperties\:FitNFWProfile1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int HaloProperties::FitNFWProfile1 ({\b real} {\i rhobox},   unsigned {\i n},   {\b real} & {\i frs},   {\b real} & {\i fers}) const}
}\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1345 of file HaloProperties.cpp.}\par
{
References ComputeDensityProfile(), ComputeVirialProperties(), and NFW_fix_fit().}\par
}
{\xe \v FitNFWProfile2\:HaloProperties}
{\xe \v HaloProperties\:FitNFWProfile2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int HaloProperties::FitNFWProfile2 ({\b real} {\i rhobox},   unsigned {\i n},   {\b real} & {\i fdeltac},   {\b real} & {\i fedeltac},   {\b real} & {\i frs},   {\b real} & {\i fers}) const}
}\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1317 of file HaloProperties.cpp.}\par
{
References ComputeDensityProfile(), and NFW_fit().}\par
}
{\xe \v FitNFWProfile200\:HaloProperties}
{\xe \v HaloProperties\:FitNFWProfile200}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int HaloProperties::FitNFWProfile200 ({\b real} {\i rhobox},   unsigned {\i n},   {\b real} & {\i frs},   {\b real} & {\i fers}) const}
}\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1368 of file HaloProperties.cpp.}\par
{
References ComputeDensityProfile(), ComputeVirialProperties200(), and NFW_fix_fit().}\par
}
{\xe \v GetSortedDistances\:HaloProperties}
{\xe \v HaloProperties\:GetSortedDistances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::GetSortedDistances (std::vector< {\b Distance} > & {\i dvec}) const}
}\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 568 of file HaloProperties.cpp.}\par
{
References m_nPart, and m_pPos.}\par
{
Referenced by ComputeLambdaPrime(), ComputeVirialProperties(), and ComputeVirialProperties200().}\par
}
{\xe \v SetCosmology\:HaloProperties}
{\xe \v HaloProperties\:SetCosmology}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloProperties::SetCosmology ({\b real} {\i OmegaM0},   {\b real} {\i OmegaL0},   {\b real} {\i H0},   {\b real} {\i G} = {\f2 43011.7902})}
}\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set internal units and values for cosmological constants {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i OmegaM0} fraction of mass density and critical density \par
{\i OmegaL0} fraction of false vacuum density and critical density \par
{\i H0} present day Hubble constant \par
{\i G} gravitation constant, in internal units \par
}
}{
Definition at line 46 of file HaloProperties.cpp.}\par
{
References HaloProperties::Cosm::G, HaloProperties::Cosm::H0, m_Cosm, HaloProperties::Cosm::OmegaL0, and HaloProperties::Cosm::OmegaM0.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v m_alpha\:HaloProperties}
{\xe \v HaloProperties\:m_alpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::m_alpha}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file HaloProperties.h.}\par
{
Referenced by CenterOnMB().}\par
}
{\xe \v m_Cosm\:HaloProperties}
{\xe \v HaloProperties\:m_Cosm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Cosm} {\b HaloProperties::m_Cosm}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file HaloProperties.h.}\par
{
Referenced by ComputeAngularMomentum(), ComputeDensityProfile(), ComputeKineticEnergy(), ComputeKineticEnergyNoHubble(), ComputeKineticEnergyNoHubbleExc(), ComputeLambdaPrime(), ComputePoormanConcentration(), ComputePotentialDirect(), ComputePotentialDirectExc(), ComputePotentialTree(), ComputePotentialTreeExc(), ComputeVirialProperties(), ComputeVirialProperties200(), HaloProperties(), and SetCosmology().}\par
}
{\xe \v m_imostbound\:HaloProperties}
{\xe \v HaloProperties\:m_imostbound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned {\b HaloProperties::m_imostbound}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file HaloProperties.h.}\par
{
Referenced by CenterOnMB(), ComputeMajorAxesReduced(), and HaloProperties().}\par
}
{\xe \v m_mtot\:HaloProperties}
{\xe \v HaloProperties\:m_mtot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::m_mtot}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file HaloProperties.h.}\par
{
Referenced by CenterOnCM(), CenterVel(), ComputeCenterVel(), ComputeCM(), ComputeMajorAxes(), ComputeTotalMass(), and HaloProperties().}\par
}
{\xe \v m_nPart\:HaloProperties}
{\xe \v HaloProperties\:m_nPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned {\b HaloProperties::m_nPart}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file HaloProperties.h.}\par
{
Referenced by AverageVel(), CenterOnCM(), CenterOnCMExc(), CenterOnCoord(), CenterOnMB(), CenterVel(), CenterVelExc(), CenterVelOn(), CleanUnbound(), CleanUnboundExc(), CleanUnboundSimple(), ComputeAngularMomentum(), ComputeCenterVel(), ComputeCenterVelExc(), ComputeCM(), ComputeCMExc(), ComputeDensityProfile(), ComputeKineticEnergy(), ComputeKineticEnergyNoHubble(), ComputeKineticEnergyNoHubbleExc(), ComputeLambdaPrime(), ComputeMajorAxes(), ComputeMajorAxesReduced(), ComputeMB(), ComputeMBExc(), ComputePotentialDirect(), ComputePotentialDirectExc(), ComputePotentialTree(), ComputePotentialTreeExc(), ComputeTotalMassExc(), ComputeVelocityDispersion(), GetSortedDistances(), and HaloProperties().}\par
}
{\xe \v m_pMass\:HaloProperties}
{\xe \v HaloProperties\:m_pMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} * {\b HaloProperties::m_pMass}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file HaloProperties.h.}\par
{
Referenced by AverageVel(), CenterOnCM(), CenterOnCMExc(), CenterVel(), CenterVelExc(), ComputeAngularMomentum(), ComputeCenterVel(), ComputeCenterVelExc(), ComputeCM(), ComputeCMExc(), ComputeDensityProfile(), ComputeKineticEnergy(), ComputeKineticEnergyNoHubble(), ComputeKineticEnergyNoHubbleExc(), ComputeLambdaPrime(), ComputeMajorAxes(), ComputeMajorAxesReduced(), ComputePotentialDirect(), ComputePotentialDirectExc(), ComputePotentialTree(), ComputePotentialTreeExc(), ComputeTotalMassExc(), ComputeVirialProperties(), ComputeVirialProperties200(), and HaloProperties().}\par
}
{\xe \v m_pPos\:HaloProperties}
{\xe \v HaloProperties\:m_pPos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real}* {\b HaloProperties::m_pPos}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file HaloProperties.h.}\par
{
Referenced by AverageVel(), CenterOnCM(), CenterOnCMExc(), CenterOnCoord(), CenterOnMB(), ComputeAngularMomentum(), ComputeCM(), ComputeCMExc(), ComputeKineticEnergy(), ComputeLambdaPrime(), ComputeMajorAxes(), ComputeMajorAxesReduced(), ComputeMB(), ComputeMBExc(), ComputePotentialDirect(), ComputePotentialDirectExc(), ComputePotentialTree(), ComputePotentialTreeExc(), GetSortedDistances(), and HaloProperties().}\par
}
{\xe \v m_pVel\:HaloProperties}
{\xe \v HaloProperties\:m_pVel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} * {\b HaloProperties::m_pVel}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file HaloProperties.h.}\par
{
Referenced by AverageVel(), CenterVel(), CenterVelExc(), CenterVelOn(), ComputeAngularMomentum(), ComputeCenterVel(), ComputeCenterVelExc(), ComputeKineticEnergy(), ComputeKineticEnergyNoHubble(), ComputeKineticEnergyNoHubbleExc(), ComputeLambdaPrime(), ComputeVelocityDispersion(), and HaloProperties().}\par
}
{\xe \v m_rmbcm\:HaloProperties}
{\xe \v HaloProperties\:m_rmbcm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::m_rmbcm}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file HaloProperties.h.}\par
{
Referenced by CenterOnMB().}\par
}
{\xe \v m_vcm\:HaloProperties}
{\xe \v HaloProperties\:m_vcm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::m_vcm}[3]{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file HaloProperties.h.}\par
{
Referenced by CenterVel(), CenterVelExc(), CenterVelOn(), ComputeCenterVel(), and HaloProperties().}\par
}
{\xe \v m_vmb\:HaloProperties}
{\xe \v HaloProperties\:m_vmb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::m_vmb}[3]{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file HaloProperties.h.}\par
{
Referenced by HaloProperties().}\par
}
{\xe \v m_xcm\:HaloProperties}
{\xe \v HaloProperties\:m_xcm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::m_xcm}[3]{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file HaloProperties.h.}\par
{
Referenced by CenterOnCM(), CenterOnCMExc(), and HaloProperties().}\par
}
{\xe \v m_xmb\:HaloProperties}
{\xe \v HaloProperties\:m_xmb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b HaloProperties::m_xmb}[3]{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file HaloProperties.h.}\par
{
Referenced by CenterOnMB(), and HaloProperties().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HaloProperties.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HaloProperties.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HDFException Class Reference\par \pard\plain 
{\tc\tcl2 \v HDFException}
{\xe \v HDFException}
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\par
{
{\f2 #include <HDFIO.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HDFException} (const std::string &errtxt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HDFException} (const std::string &errtxt)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 57 of file HDFIO.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HDFException\:HDFException}
{\xe \v HDFException\:HDFException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HDFException::HDFException (const std::string & {\i errtxt}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file HDFIO.h.}\par
}
{\xe \v HDFException\:HDFException}
{\xe \v HDFException\:HDFException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HDFException::HDFException (const std::string & {\i errtxt}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file HDFIO_new.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HDFIO.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HDFIO_new.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HResults Class Reference\par \pard\plain 
{\tc\tcl2 \v HResults}
{\xe \v HResults}
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
{
{\f2 #include <HResults.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HResults} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~HResults} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNtot} (int ntot)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMtot} ({\b real} Mtot)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRtot} ({\b real} Rtot)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMvir} ({\b real} Mvir)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRvir} ({\b real} Rvir)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setXCM} ({\b Vector3} xcm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVCM} ({\b Vector3} vcm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setXMB} ({\b Vector3} xmb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVMB} ({\b Vector3} vmb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNpart} (int npart, int type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMpart} ({\b real} mpart, int type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLambda} ({\b real} lambda, int type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSigma} ({\b real} sigma, int type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setJ} ({\b Vector3} J, int type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setE} ({\b Eigensystem3} E, int type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
output a HResult as string concatenate first all global values, then all halo type specific properties }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 35 of file HResults.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HResults\:HResults}
{\xe \v HResults\:HResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HResults::HResults ()}
}\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file HResults.cpp.}\par
}
{\xe \v ~HResults\:HResults}
{\xe \v HResults\:~HResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HResults::~HResults ()}
}\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file HResults.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v setE\:HResults}
{\xe \v HResults\:setE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setE ({\b Eigensystem3} {\i E},   int {\i type})}
}\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file HResults.cpp.}\par
{
Referenced by Output::fillHRtype().}\par
}
{\xe \v setJ\:HResults}
{\xe \v HResults\:setJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setJ ({\b Vector3} {\i J},   int {\i type})}
}\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file HResults.cpp.}\par
{
Referenced by Output::fillHRtype().}\par
}
{\xe \v setLambda\:HResults}
{\xe \v HResults\:setLambda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setLambda ({\b real} {\i lambda},   int {\i type})}
}\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file HResults.cpp.}\par
{
Referenced by Output::fillHRtype().}\par
}
{\xe \v setMpart\:HResults}
{\xe \v HResults\:setMpart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setMpart ({\b real} {\i mpart},   int {\i type})}
}\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file HResults.cpp.}\par
{
Referenced by Output::fillHRtype().}\par
}
{\xe \v setMtot\:HResults}
{\xe \v HResults\:setMtot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setMtot ({\b real} {\i Mtot})}
}\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setMvir\:HResults}
{\xe \v HResults\:setMvir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setMvir ({\b real} {\i Mvir})}
}\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setNpart\:HResults}
{\xe \v HResults\:setNpart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setNpart (int {\i npart},   int {\i type})}
}\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file HResults.cpp.}\par
{
Referenced by Output::fillHRtype().}\par
}
{\xe \v setNtot\:HResults}
{\xe \v HResults\:setNtot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setNtot (int {\i ntot})}
}\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setRtot\:HResults}
{\xe \v HResults\:setRtot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setRtot ({\b real} {\i Rtot})}
}\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setRvir\:HResults}
{\xe \v HResults\:setRvir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setRvir ({\b real} {\i Rvir})}
}\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setSigma\:HResults}
{\xe \v HResults\:setSigma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setSigma ({\b real} {\i sigma},   int {\i type})}
}\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file HResults.cpp.}\par
{
Referenced by Output::fillHRtype().}\par
}
{\xe \v setVCM\:HResults}
{\xe \v HResults\:setVCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setVCM ({\b Vector3} {\i vcm})}
}\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setVMB\:HResults}
{\xe \v HResults\:setVMB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setVMB ({\b Vector3} {\i vmb})}
}\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setXCM\:HResults}
{\xe \v HResults\:setXCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setXCM ({\b Vector3} {\i xcm})}
}\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v setXMB\:HResults}
{\xe \v HResults\:setXMB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HResults::setXMB ({\b Vector3} {\i xmb})}
}\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file HResults.cpp.}\par
{
Referenced by Output::fillHRglobal().}\par
}
{\xe \v toString\:HResults}
{\xe \v HResults\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string HResults::toString (void)}
}\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
output a HResult as string concatenate first all global values, then all halo type specific properties }}\par
{
Definition at line 121 of file HResults.cpp.}\par
{
References HTotal, Eigensystem3::toString(), and Vector3::toString().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HResults.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b HResults.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
list< T >::iterator Class Reference\par \pard\plain 
{\tc\tcl2 \v list::iterator}
{\xe \v list::iterator}
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\par
{
{\f2 #include <MySTL.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b value_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T & {\b reference}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T * {\b pointer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int {\b difference_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::forward_iterator_tag {\b iterator_category}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} (Node *x=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} (const {\b iterator} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} & {\b operator=} (const {\b iterator} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} & {\b operator++} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b operator++} (int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b reference} {\b operator*} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pointer} {\b operator->} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b iterator} &x) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator!=} (const {\b iterator} &x) const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b list}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b const_iterator}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T> class list< T >::iterator\par
}

\par
{
Definition at line 111 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Typedef Documentation\par
\pard\plain 
{\xe \v difference_type\:list::iterator}
{\xe \v list::iterator\:difference_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef int {\b list}< T >::{\b iterator::difference_type}}
}\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file MySTL.h.}\par
}
{\xe \v iterator_category\:list::iterator}
{\xe \v list::iterator\:iterator_category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef std::forward_iterator_tag {\b list}< T >::{\b iterator::iterator_category}}
}\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file MySTL.h.}\par
}
{\xe \v pointer\:list::iterator}
{\xe \v list::iterator\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef T* {\b list}< T >::{\b iterator::pointer}}
}\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file MySTL.h.}\par
}
{\xe \v reference\:list::iterator}
{\xe \v list::iterator\:reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef T& {\b list}< T >::{\b iterator::reference}}
}\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file MySTL.h.}\par
}
{\xe \v value_type\:list::iterator}
{\xe \v list::iterator\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> typedef T {\b list}< T >::{\b iterator::value_type}}
}\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 118 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v iterator\:list::iterator}
{\xe \v list::iterator\:iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::iterator::iterator (Node * {\i x} = {\f2 0}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file MySTL.h.}\par
}
{\xe \v iterator\:list::iterator}
{\xe \v list::iterator\:iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::iterator::iterator (const {\b iterator} & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v operator!=\:list::iterator}
{\xe \v list::iterator\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> bool {\b list}< T >::iterator::operator!= (const {\b iterator} & {\i x}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file MySTL.h.}\par
}
{\xe \v operator*\:list::iterator}
{\xe \v list::iterator\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b reference} {\b list}< T >::iterator::operator* () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 138 of file MySTL.h.}\par
}
{\xe \v operator++\:list::iterator}
{\xe \v list::iterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b iterator} {\b list}< T >::iterator::operator++ (int){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file MySTL.h.}\par
}
{\xe \v operator++\:list::iterator}
{\xe \v list::iterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b iterator}& {\b list}< T >::iterator::operator++ (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file MySTL.h.}\par
}
{\xe \v operator->\:list::iterator}
{\xe \v list::iterator\:operator->}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b pointer} {\b list}< T >::iterator::operator-> () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file MySTL.h.}\par
}
{\xe \v operator=\:list::iterator}
{\xe \v list::iterator\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b iterator}& {\b list}< T >::iterator::operator= (const {\b iterator} & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file MySTL.h.}\par
}
{\xe \v operator==\:list::iterator}
{\xe \v list::iterator\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> bool {\b list}< T >::iterator::operator== (const {\b iterator} & {\i x}) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v const_iterator\:list::iterator}
{\xe \v list::iterator\:const_iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> friend class {\b const_iterator}{\f2  [friend]}}
}\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file MySTL.h.}\par
}
{\xe \v list\:list::iterator}
{\xe \v list::iterator\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> friend class {\b list}{\f2  [friend]}}
}\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b MySTL.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
kDTreeNode Class Reference\par \pard\plain 
{\tc\tcl2 \v kDTreeNode}
{\xe \v kDTreeNode}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
{
{\f2 #include <OctTree.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~kDTreeNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b kDTreeNode} (std::vector< {\b PseudoBody} > *Bodies)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b kDTreeNode} (std::vector< {\b PseudoBody} > &Bodies)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b traverse} (const {\b real} &x, const {\b real} &y, const {\b real} &z, const {\b real} &theta, const {\b real} &plumsoft)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b partition} (std::vector< {\b PseudoBody} > &All, std::vector< {\b PseudoBody} > **bleft, std::vector< {\b PseudoBody} > **bright)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getBoundingBox} (const std::vector< {\b PseudoBody} > &bodies)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b kDTreeNode} * {\b m_nleft}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b kDTreeNode} * {\b m_nright}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PseudoBody} {\b m_body}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_l}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b m_bleaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_axis}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 224 of file OctTree.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ~kDTreeNode\:kDTreeNode}
{\xe \v kDTreeNode\:~kDTreeNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
kDTreeNode::~kDTreeNode (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 303 of file OctTree.h.}\par
{
References m_nleft, and m_nright.}\par
}
{\xe \v kDTreeNode\:kDTreeNode}
{\xe \v kDTreeNode\:kDTreeNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
kDTreeNode::kDTreeNode (std::vector< {\b PseudoBody} > * {\i Bodies}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 310 of file OctTree.h.}\par
{
References getBoundingBox().}\par
{
Referenced by kDTreeNode().}\par
}
{\xe \v kDTreeNode\:kDTreeNode}
{\xe \v kDTreeNode\:kDTreeNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
kDTreeNode::kDTreeNode (std::vector< {\b PseudoBody} > & {\i Bodies}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 323 of file OctTree.h.}\par
{
References getBoundingBox(), kDTreeNode(), m_axis, m_bleaf, m_nleft, m_nright, and partition().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getBoundingBox\:kDTreeNode}
{\xe \v kDTreeNode\:getBoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void kDTreeNode::getBoundingBox (const std::vector< {\b PseudoBody} > & {\i bodies}){\f2  [inline, protected]}}
}\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 266 of file OctTree.h.}\par
{
References m_l.}\par
{
Referenced by kDTreeNode().}\par
}
{\xe \v partition\:kDTreeNode}
{\xe \v kDTreeNode\:partition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void kDTreeNode::partition (std::vector< {\b PseudoBody} > & {\i All},   std::vector< {\b PseudoBody} > ** {\i bleft},   std::vector< {\b PseudoBody} > ** {\i bright}){\f2  [inline, protected]}}
}\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 235 of file OctTree.h.}\par
{
References PseudoBody::getx(), PseudoBody::gety(), PseudoBody::getz(), m_axis, and m_body.}\par
{
Referenced by kDTreeNode().}\par
}
{\xe \v traverse\:kDTreeNode}
{\xe \v kDTreeNode\:traverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} kDTreeNode::traverse (const {\b real} & {\i x},   const {\b real} & {\i y},   const {\b real} & {\i z},   const {\b real} & {\i theta},   const {\b real} & {\i plumsoft}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 385 of file OctTree.h.}\par
{
References EPS, PseudoBody::getmass(), PseudoBody::getx(), PseudoBody::getxx(), PseudoBody::getxy(), PseudoBody::getxz(), PseudoBody::gety(), PseudoBody::getyy(), PseudoBody::getyz(), PseudoBody::getz(), PseudoBody::getzz(), m_bleaf, m_body, m_l, m_nleft, m_nright, and SPLINEQ().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v m_axis\:kDTreeNode}
{\xe \v kDTreeNode\:m_axis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b kDTreeNode::m_axis}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 233 of file OctTree.h.}\par
{
Referenced by kDTreeNode(), and partition().}\par
}
{\xe \v m_bleaf\:kDTreeNode}
{\xe \v kDTreeNode\:m_bleaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b kDTreeNode::m_bleaf}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 232 of file OctTree.h.}\par
{
Referenced by kDTreeNode(), and traverse().}\par
}
{\xe \v m_body\:kDTreeNode}
{\xe \v kDTreeNode\:m_body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PseudoBody} {\b kDTreeNode::m_body}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 228 of file OctTree.h.}\par
{
Referenced by partition(), and traverse().}\par
}
{\xe \v m_l\:kDTreeNode}
{\xe \v kDTreeNode\:m_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b kDTreeNode::m_l}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 230 of file OctTree.h.}\par
{
Referenced by getBoundingBox(), and traverse().}\par
}
{\xe \v m_nleft\:kDTreeNode}
{\xe \v kDTreeNode\:m_nleft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b kDTreeNode}* {\b kDTreeNode::m_nleft}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 226 of file OctTree.h.}\par
{
Referenced by kDTreeNode(), traverse(), and ~kDTreeNode().}\par
}
{\xe \v m_nright\:kDTreeNode}
{\xe \v kDTreeNode\:m_nright}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b kDTreeNode} * {\b kDTreeNode::m_nright}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 226 of file OctTree.h.}\par
{
Referenced by kDTreeNode(), traverse(), and ~kDTreeNode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b OctTree.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
list< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v list}
{\xe \v list}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
{
{\f2 #include <MySTL.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b const_iterator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b iterator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Node}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list} (const {\b list} &L)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reverse} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b swap} ({\b list} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list} & {\b operator=} (const {\b list} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~list} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b push_front} (const T &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b push_back} (const T &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pop_front} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b empty} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b front} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T & {\b front} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b back} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T & {\b back} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b end} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b begin} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b end} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b erase} ({\b iterator} x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b insert} ({\b iterator} x, const T &y)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rotate} ({\b iterator} x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b splice} ({\b list}< T > &other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Identifier} {\b size} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T> class list< T >\par
}

\par
{
Definition at line 95 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v list\:list}
{\xe \v list\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::{\b list} (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 196 of file MySTL.h.}\par
}
{\xe \v list\:list}
{\xe \v list\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::{\b list} (const {\b list}< T > & {\i L}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file MySTL.h.}\par
{
References list< T >::begin(), list< T >::end(), list< T >::push_front(), and list< T >::reverse().}\par
}
{\xe \v ~list\:list}
{\xe \v list\:~list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}< T >::~{\b list} (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 236 of file MySTL.h.}\par
{
References list< T >::clear().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v back\:list}
{\xe \v list\:back}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> const T& {\b list}< T >::back () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 272 of file MySTL.h.}\par
}
{\xe \v back\:list}
{\xe \v list\:back}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> T& {\b list}< T >::back (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 271 of file MySTL.h.}\par
}
{\xe \v begin\:list}
{\xe \v list\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b const_iterator} {\b list}< T >::begin () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 278 of file MySTL.h.}\par
}
{\xe \v begin\:list}
{\xe \v list\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b iterator} {\b list}< T >::begin (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 274 of file MySTL.h.}\par
{
Referenced by convertlists(), list< T >::front(), list< T >::list(), list< T >::pop_front(), and list< T >::push_front().}\par
}
{\xe \v clear\:list}
{\xe \v list\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::clear (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 238 of file MySTL.h.}\par
{
Referenced by list< T >::~list().}\par
}
{\xe \v empty\:list}
{\xe \v list\:empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> bool {\b list}< T >::empty (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 267 of file MySTL.h.}\par
{
Referenced by list< T >::reverse().}\par
}
{\xe \v end\:list}
{\xe \v list\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b const_iterator} {\b list}< T >::end () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 282 of file MySTL.h.}\par
}
{\xe \v end\:list}
{\xe \v list\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b iterator} {\b list}< T >::end (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 276 of file MySTL.h.}\par
{
Referenced by convertlists(), list< T >::erase(), list< T >::list(), list< T >::push_back(), and list< T >::rotate().}\par
}
{\xe \v erase\:list}
{\xe \v list\:erase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b iterator} {\b list}< T >::erase ({\b iterator} {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 287 of file MySTL.h.}\par
{
References list< T >::end().}\par
{
Referenced by list< T >::pop_front().}\par
}
{\xe \v front\:list}
{\xe \v list\:front}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> const T& {\b list}< T >::front () const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 270 of file MySTL.h.}\par
{
References list< T >::begin().}\par
}
{\xe \v front\:list}
{\xe \v list\:front}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> T& {\b list}< T >::front (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 269 of file MySTL.h.}\par
{
References list< T >::begin().}\par
}
{\xe \v insert\:list}
{\xe \v list\:insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b iterator} {\b list}< T >::insert ({\b iterator} {\i x},   const T & {\i y}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 301 of file MySTL.h.}\par
{
Referenced by list< T >::push_back(), and list< T >::push_front().}\par
}
{\xe \v operator=\:list}
{\xe \v list\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b list}& {\b list}< T >::operator= (const {\b list}< T > & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 229 of file MySTL.h.}\par
{
References list< T >::swap().}\par
}
{\xe \v pop_front\:list}
{\xe \v list\:pop_front}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::pop_front (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 262 of file MySTL.h.}\par
{
References list< T >::begin(), and list< T >::erase().}\par
}
{\xe \v push_back\:list}
{\xe \v list\:push_back}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::push_back (const T & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 258 of file MySTL.h.}\par
{
References list< T >::end(), and list< T >::insert().}\par
}
{\xe \v push_front\:list}
{\xe \v list\:push_front}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::push_front (const T & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 254 of file MySTL.h.}\par
{
References list< T >::begin(), and list< T >::insert().}\par
{
Referenced by list< T >::list().}\par
}
{\xe \v reverse\:list}
{\xe \v list\:reverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::reverse (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 207 of file MySTL.h.}\par
{
References list< T >::empty().}\par
{
Referenced by list< T >::list().}\par
}
{\xe \v rotate\:list}
{\xe \v list\:rotate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::rotate ({\b iterator} {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 312 of file MySTL.h.}\par
{
References list< T >::end().}\par
}
{\xe \v size\:list}
{\xe \v list\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Identifier} {\b list}< T >::size (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 354 of file MySTL.h.}\par
}
{\xe \v splice\:list}
{\xe \v list\:splice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::splice ({\b list}< T > & {\i other}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 337 of file MySTL.h.}\par
}
{\xe \v swap\:list}
{\xe \v list\:swap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b list}< T >::swap ({\b list}< T > & {\i x}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 223 of file MySTL.h.}\par
{
Referenced by list< T >::operator=().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b MySTL.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Matrix33 Class Reference\par \pard\plain 
{\tc\tcl2 \v Matrix33}
{\xe \v Matrix33}
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
{
{\f2 #include <Matrix33.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} (const {\b Matrix33} &m)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Matrix33} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double & {\b operator()} (int row, int col)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b operator()} (int row, int col) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b operator()} (int col) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} & {\b operator=} ({\b Matrix33} const &M)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} & {\b operator=} (const double &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b operator[]} (int col) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} & {\b operator+=} (const {\b Matrix33} &m)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} & {\b operator-=} (const {\b Matrix33} &m)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} {\b operator*} (const double &x) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Matrix33} {\b operator/} (const double &x) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_diag} ({\b Vector3} diag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Jacobi} (std::vector< {\b real} > &Eval, std::vector< {\b Vector3} > &Evec, int &nrot)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Eigen} (std::vector< {\b real} > &Eval, std::vector< {\b Vector3} > &Evec) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b det} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b get_invariants} (std::vector< {\b Vector3} > Evec) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Vector3} > {\b toVecVector3} () const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b data_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 45 of file Matrix33.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Matrix33\:Matrix33}
{\xe \v Matrix33\:Matrix33}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Matrix33::Matrix33 ()}
}\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v Matrix33\:Matrix33}
{\xe \v Matrix33\:Matrix33}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Matrix33::Matrix33 (const {\b Matrix33} & {\i m})}
}\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v ~Matrix33\:Matrix33}
{\xe \v Matrix33\:~Matrix33}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Matrix33::~Matrix33 ()}
}\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v det\:Matrix33}
{\xe \v Matrix33\:det}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Matrix33::det (void) const}
}\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file Matrix33.cpp.}\par
{
References Eigen().}\par
}
{\xe \v Eigen\:Matrix33}
{\xe \v Matrix33\:Eigen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Matrix33::Eigen (std::vector< {\b real} > & {\i Eval},   std::vector< {\b Vector3} > & {\i Evec}) const}
}\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file Matrix33.cpp.}\par
{
References data_.}\par
{
Referenced by Eigensystem3::calcEV(), HaloProperties::ComputeMajorAxes(), HaloProperties::ComputeMajorAxesReduced(), det(), and get_invariants().}\par
}
{\xe \v get_invariants\:Matrix33}
{\xe \v Matrix33\:get_invariants}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Matrix33::get_invariants (std::vector< {\b Vector3} > {\i Evec}) const}
}\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file Matrix33.cpp.}\par
{
References Eigen().}\par
}
{\xe \v Jacobi\:Matrix33}
{\xe \v Matrix33\:Jacobi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Matrix33::Jacobi (std::vector< {\b real} > & {\i Eval},   std::vector< {\b Vector3} > & {\i Evec},   int & {\i nrot})}
}\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 215 of file Matrix33.cpp.}\par
{
References ROTATE().}\par
}
{\xe \v operator()\:Matrix33}
{\xe \v Matrix33\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Matrix33::operator() (int {\i col}) const}
}\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file Matrix33.cpp.}\par
}
{\xe \v operator()\:Matrix33}
{\xe \v Matrix33\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Matrix33::operator() (int {\i row},   int {\i col}) const}
}\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator()\:Matrix33}
{\xe \v Matrix33\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double & Matrix33::operator() (int {\i row},   int {\i col})}
}\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator*\:Matrix33}
{\xe \v Matrix33\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix33} Matrix33::operator* (const double & {\i x}) const}
}\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator+=\:Matrix33}
{\xe \v Matrix33\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix33} & Matrix33::operator+= (const {\b Matrix33} & {\i m})}
}\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator-=\:Matrix33}
{\xe \v Matrix33\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix33} & Matrix33::operator-= (const {\b Matrix33} & {\i m})}
}\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator/\:Matrix33}
{\xe \v Matrix33\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix33} Matrix33::operator/ (const double & {\i x}) const}
}\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator=\:Matrix33}
{\xe \v Matrix33\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix33} & Matrix33::operator= (const double & {\i x})}
}\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator=\:Matrix33}
{\xe \v Matrix33\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Matrix33} & Matrix33::operator= ({\b Matrix33} const & {\i M})}
}\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v operator[]\:Matrix33}
{\xe \v Matrix33\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Matrix33::operator[] (int {\i col}) const}
}\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file Matrix33.cpp.}\par
{
References data_.}\par
}
{\xe \v set_diag\:Matrix33}
{\xe \v Matrix33\:set_diag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Matrix33::set_diag ({\b Vector3} {\i diag})}
}\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file Matrix33.cpp.}\par
{
Referenced by Halo::calcShape().}\par
}
{\xe \v toVecVector3\:Matrix33}
{\xe \v Matrix33\:toVecVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\b Vector3} > Matrix33::toVecVector3 () const}
}\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 301 of file Matrix33.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v data_\:Matrix33}
{\xe \v Matrix33\:data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* {\b Matrix33::data_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file Matrix33.h.}\par
{
Referenced by Eigen(), Matrix33(), operator()(), operator*(), operator+=(), operator-=(), operator/(), operator=(), operator[](), and ~Matrix33().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Matrix33.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Matrix33.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MaxProgenitorsExceed Class Reference\par \pard\plain 
{\tc\tcl2 \v MaxProgenitorsExceed}
{\xe \v MaxProgenitorsExceed}
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Maximum number of halo progenitors exceeded This exception is called if a progenitor halo is added to a given halo but that halo already possesses the maximum allowed number of progenitor haloes (standard 25). This happens for memory reasons and means you have to increase the number of allowed progenitors. }}\par
{
{\f2 #include <Exceptions.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MaxProgenitorsExceed} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Maximum number of halo progenitors exceeded This exception is called if a progenitor halo is added to a given halo but that halo already possesses the maximum allowed number of progenitor haloes (standard 25). This happens for memory reasons and means you have to increase the number of allowed progenitors. \par
}{
Definition at line 50 of file Exceptions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MaxProgenitorsExceed\:MaxProgenitorsExceed}
{\xe \v MaxProgenitorsExceed\:MaxProgenitorsExceed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MaxProgenitorsExceed::MaxProgenitorsExceed (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file Exceptions.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Exceptions.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OctTreeNode Class Reference\par \pard\plain 
{\tc\tcl2 \v OctTreeNode}
{\xe \v OctTreeNode}
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\par
{
{\f2 #include <OctTree.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OctTreeNode} (std::vector< {\b PseudoBody} > *Bodies)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OctTreeNode} (std::vector< {\b PseudoBody} > &Bodies, {\b real} min_size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~OctTreeNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b traverse} (const {\b real} &x, const {\b real} &y, const {\b real} &z, const {\b real} &theta, const {\b real} &plumsoft)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b partition} (const std::vector< {\b PseudoBody} > &All, std::vector< {\b PseudoBody} > ***Bodies)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getBoundingBox} (const std::vector< {\b PseudoBody} > &bodies, {\b real} &xc, {\b real} &yc, {\b real} &zc, {\b real} &l)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OctTreeNode} ** {\b m_subnodes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PseudoBody} {\b m_body}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_xc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_yc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_zc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b m_l}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b m_bleaf}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 476 of file OctTree.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OctTreeNode\:OctTreeNode}
{\xe \v OctTreeNode\:OctTreeNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OctTreeNode::OctTreeNode (std::vector< {\b PseudoBody} > * {\i Bodies}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 544 of file OctTree.h.}\par
{
References getBoundingBox(), m_l, m_xc, m_yc, and m_zc.}\par
{
Referenced by OctTreeNode().}\par
}
{\xe \v OctTreeNode\:OctTreeNode}
{\xe \v OctTreeNode\:OctTreeNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OctTreeNode::OctTreeNode (std::vector< {\b PseudoBody} > & {\i Bodies},   {\b real} {\i min_size}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 554 of file OctTree.h.}\par
{
References getBoundingBox(), m_bleaf, m_l, m_subnodes, m_xc, m_yc, m_zc, OctTreeNode(), and partition().}\par
}
{\xe \v ~OctTreeNode\:OctTreeNode}
{\xe \v OctTreeNode\:~OctTreeNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OctTreeNode::~OctTreeNode (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 614 of file OctTree.h.}\par
{
References m_subnodes.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getBoundingBox\:OctTreeNode}
{\xe \v OctTreeNode\:getBoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OctTreeNode::getBoundingBox (const std::vector< {\b PseudoBody} > & {\i bodies},   {\b real} & {\i xc},   {\b real} & {\i yc},   {\b real} & {\i zc},   {\b real} & {\i l}){\f2  [inline, protected]}}
}\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 512 of file OctTree.h.}\par
{
Referenced by OctTreeNode().}\par
}
{\xe \v partition\:OctTreeNode}
{\xe \v OctTreeNode\:partition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OctTreeNode::partition (const std::vector< {\b PseudoBody} > & {\i All},   std::vector< {\b PseudoBody} > *** {\i Bodies}){\f2  [inline, protected]}}
}\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 488 of file OctTree.h.}\par
{
References m_xc, m_yc, and m_zc.}\par
{
Referenced by OctTreeNode().}\par
}
{\xe \v traverse\:OctTreeNode}
{\xe \v OctTreeNode\:traverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} OctTreeNode::traverse (const {\b real} & {\i x},   const {\b real} & {\i y},   const {\b real} & {\i z},   const {\b real} & {\i theta},   const {\b real} & {\i plumsoft}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 626 of file OctTree.h.}\par
{
References EPS, PseudoBody::getmass(), PseudoBody::getx(), PseudoBody::getxx(), PseudoBody::getxy(), PseudoBody::getxz(), PseudoBody::gety(), PseudoBody::getyy(), PseudoBody::getyz(), PseudoBody::getz(), PseudoBody::getzz(), m_bleaf, m_body, m_l, m_subnodes, and SPLINEQ().}\par
{
Referenced by HaloProperties::ComputePotentialTree(), and HaloProperties::ComputePotentialTreeExc().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v m_bleaf\:OctTreeNode}
{\xe \v OctTreeNode\:m_bleaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b OctTreeNode::m_bleaf}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 486 of file OctTree.h.}\par
{
Referenced by OctTreeNode(), and traverse().}\par
}
{\xe \v m_body\:OctTreeNode}
{\xe \v OctTreeNode\:m_body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PseudoBody} {\b OctTreeNode::m_body}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 481 of file OctTree.h.}\par
{
Referenced by traverse().}\par
}
{\xe \v m_l\:OctTreeNode}
{\xe \v OctTreeNode\:m_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b OctTreeNode::m_l}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 485 of file OctTree.h.}\par
{
Referenced by OctTreeNode(), and traverse().}\par
}
{\xe \v m_subnodes\:OctTreeNode}
{\xe \v OctTreeNode\:m_subnodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OctTreeNode}** {\b OctTreeNode::m_subnodes}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 479 of file OctTree.h.}\par
{
Referenced by OctTreeNode(), traverse(), and ~OctTreeNode().}\par
}
{\xe \v m_xc\:OctTreeNode}
{\xe \v OctTreeNode\:m_xc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b OctTreeNode::m_xc}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 484 of file OctTree.h.}\par
{
Referenced by OctTreeNode(), and partition().}\par
}
{\xe \v m_yc\:OctTreeNode}
{\xe \v OctTreeNode\:m_yc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b OctTreeNode::m_yc}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 484 of file OctTree.h.}\par
{
Referenced by OctTreeNode(), and partition().}\par
}
{\xe \v m_zc\:OctTreeNode}
{\xe \v OctTreeNode\:m_zc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b OctTreeNode::m_zc}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 484 of file OctTree.h.}\par
{
Referenced by OctTreeNode(), and partition().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b OctTree.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Output Class Reference\par \pard\plain 
{\tc\tcl2 \v Output}
{\xe \v Output}
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\par
{
{\f2 #include <Output.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Output} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Output} ({\b Simulation} sim)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Output} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getAR} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeAR} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fillHRglobal} (int Ntot, {\b real} Mtot, {\b real} Rtot, {\b real} Mvir, {\b real} Rvir, {\b Vector3} xcm, {\b Vector3} vcm, {\b Vector3} xmb, {\b Vector3} vmb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fillHRtype} (int type, int npart, {\b real} mpart, {\b real} lambda, {\b real} sigma, {\b Vector3} J, {\b Eigensystem3} E)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendHR} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeHR} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeHRstripped} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 35 of file Output.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Output\:Output}
{\xe \v Output\:Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Output::Output (void)}
}\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Output.cpp.}\par
}
{\xe \v Output\:Output}
{\xe \v Output\:Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Output::Output ({\b Simulation} {\i sim})}
}\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file Output.cpp.}\par
}
{\xe \v ~Output\:Output}
{\xe \v Output\:~Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Output::~Output (void)}
}\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file Output.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v appendHR\:Output}
{\xe \v Output\:appendHR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Output::appendHR (void)}
}\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 138 of file Output.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v fillHRglobal\:Output}
{\xe \v Output\:fillHRglobal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Output::fillHRglobal (int {\i Ntot},   {\b real} {\i Mtot},   {\b real} {\i Rtot},   {\b real} {\i Mvir},   {\b real} {\i Rvir},   {\b Vector3} {\i xcm},   {\b Vector3} {\i vcm},   {\b Vector3} {\i xmb},   {\b Vector3} {\i vmb})}
}\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file Output.cpp.}\par
{
References HResults::setMtot(), HResults::setMvir(), HResults::setNtot(), HResults::setRtot(), HResults::setRvir(), HResults::setVCM(), HResults::setVMB(), HResults::setXCM(), and HResults::setXMB().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v fillHRtype\:Output}
{\xe \v Output\:fillHRtype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Output::fillHRtype (int {\i type},   int {\i npart},   {\b real} {\i mpart},   {\b real} {\i lambda},   {\b real} {\i sigma},   {\b Vector3} {\i J},   {\b Eigensystem3} {\i E})}
}\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file Output.cpp.}\par
{
References HResults::setE(), HResults::setJ(), HResults::setLambda(), HResults::setMpart(), HResults::setNpart(), and HResults::setSigma().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v getAR\:Output}
{\xe \v Output\:getAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Output::getAR (void)}
}\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file Output.cpp.}\par
{
References Folder(), Simulation::getIsnap(), Simulation::getNhalo(), and Snaps().}\par
{
Referenced by AOutput().}\par
}
{\xe \v writeAR\:Output}
{\xe \v Output\:writeAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Output::writeAR (void)}
}\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file Output.cpp.}\par
{
References Folder(), Simulation::getIsnap(), Simulation::getNhalo(), and Snaps().}\par
{
Referenced by AOutput().}\par
}
{\xe \v writeHR\:Output}
{\xe \v Output\:writeHR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Output::writeHR (void)}
}\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file Output.cpp.}\par
{
References Folder(), Simulation::getBoxlength(), Simulation::getIsnap(), Simulation::getNhalo(), Simulation::getZsnap(), and Snaps().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v writeHRstripped\:Output}
{\xe \v Output\:writeHRstripped}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Output::writeHRstripped (void)}
}\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 158 of file Output.cpp.}\par
{
References Folder(), Simulation::getIsnap(), Simulation::getNhalo(), and Snaps().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Output.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Output.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PoissonSolver< nstencil > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v PoissonSolver}
{\xe \v PoissonSolver}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\par
{
{\f2 #include <PoissonSolver.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PoissonSolver} ({\b ScalarField} *prho, {\b ScalarField} *pphi)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Gauss3D} (const double &k, const double &sigma)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gaussian kernel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TopHat3D} (const double &k, const double &R)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b test} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b solve} (double Boxlength, double sigma)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PoissonSolver} ({\b ScalarField} *prho)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Gauss3D} (const double &k, const double &sigma)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TopHat3D} (const double &k, const double &R)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b solve} ({\b ScalarField} *pphi, double Boxlength, double sigma)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScalarField} * {\b prho_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScalarField} * {\b pphi_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScalarField} * {\b m_prho}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<int nstencil> class PoissonSolver< nstencil >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of Poisson equation solver using Fourier transformation of the cloud-in-cell density field, templated for the number of stencils \par
}{
Definition at line 52 of file PoissonSolver.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PoissonSolver\:PoissonSolver}
{\xe \v PoissonSolver\:PoissonSolver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> {\b PoissonSolver}< nstencil >::{\b PoissonSolver} ({\b ScalarField} * {\i prho},   {\b ScalarField} * {\i pphi}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file PoissonSolver.h.}\par
{
References PoissonSolver< nstencil >::pphi_, and PoissonSolver< nstencil >::prho_.}\par
}
{\xe \v PoissonSolver\:PoissonSolver}
{\xe \v PoissonSolver\:PoissonSolver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> {\b PoissonSolver}< nstencil >::{\b PoissonSolver} ({\b ScalarField} * {\i prho}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file PoissonSolver_new.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Gauss3D\:PoissonSolver}
{\xe \v PoissonSolver\:Gauss3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> double {\b PoissonSolver}< nstencil >::Gauss3D (const double & {\i k},   const double & {\i sigma}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file PoissonSolver_new.h.}\par
}
{\xe \v Gauss3D\:PoissonSolver}
{\xe \v PoissonSolver\:Gauss3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> double {\b PoissonSolver}< nstencil >::Gauss3D (const double & {\i k},   const double & {\i sigma}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gaussian kernel. }}\par
{
Definition at line 64 of file PoissonSolver.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v solve\:PoissonSolver}
{\xe \v PoissonSolver\:solve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> void {\b PoissonSolver}< nstencil >::solve ({\b ScalarField} * {\i pphi},   double {\i Boxlength},   double {\i sigma}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file PoissonSolver_new.h.}\par
{
References ACC_C, ACC_R, c_im, c_re, PoissonSolver< nstencil >::Gauss3D(), PoissonSolver< nstencil >::m_prho, ScalarField::recreate(), and PoissonSolver< nstencil >::TopHat3D().}\par
}
{\xe \v solve\:PoissonSolver}
{\xe \v PoissonSolver\:solve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> void {\b PoissonSolver}< nstencil >::solve (double {\i Boxlength},   double {\i sigma}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
invoke solver \par
}{
Definition at line 101 of file PoissonSolver.h.}\par
{
References ACC_C, ACC_R, GreensFunction< nOrder >::apply(), fftw_real, PoissonSolver< nstencil >::Gauss3D(), ScalarField::getNx(), ScalarField::getNy(), ScalarField::getNz(), ScalarField::getValue(), ofs, PoissonSolver< nstencil >::pphi_, PoissonSolver< nstencil >::prho_, ScalarField::setValue(), and PoissonSolver< nstencil >::TopHat3D().}\par
{
Referenced by TidalField().}\par
}
{\xe \v test\:PoissonSolver}
{\xe \v PoissonSolver\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> void {\b PoissonSolver}< nstencil >::test (){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
little test routine for access to prho_ and pphi_ \par
}{
Definition at line 85 of file PoissonSolver.h.}\par
{
References ScalarField::getValue(), PoissonSolver< nstencil >::pphi_, PoissonSolver< nstencil >::prho_, and ScalarField::setValue().}\par
{
Referenced by main().}\par
}
{\xe \v TopHat3D\:PoissonSolver}
{\xe \v PoissonSolver\:TopHat3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> double {\b PoissonSolver}< nstencil >::TopHat3D (const double & {\i k},   const double & {\i R}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file PoissonSolver_new.h.}\par
}
{\xe \v TopHat3D\:PoissonSolver}
{\xe \v PoissonSolver\:TopHat3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> double {\b PoissonSolver}< nstencil >::TopHat3D (const double & {\i k},   const double & {\i R}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
top hat kernel: all points inside radius R are fully accounted for, all points outside are not \par
}{
Definition at line 74 of file PoissonSolver.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v m_prho\:PoissonSolver}
{\xe \v PoissonSolver\:m_prho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> {\b ScalarField}* {\b PoissonSolver}< nstencil >::{\b m_prho}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file PoissonSolver_new.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v pphi_\:PoissonSolver}
{\xe \v PoissonSolver\:pphi_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> {\b ScalarField}* {\b PoissonSolver}< nstencil >::{\b pphi_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file PoissonSolver.h.}\par
{
Referenced by PoissonSolver< nstencil >::PoissonSolver(), PoissonSolver< nstencil >::solve(), and PoissonSolver< nstencil >::test().}\par
}
{\xe \v prho_\:PoissonSolver}
{\xe \v PoissonSolver\:prho_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int nstencil> {\b ScalarField}* {\b PoissonSolver}< nstencil >::{\b prho_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file PoissonSolver.h.}\par
{
Referenced by PoissonSolver< nstencil >::PoissonSolver(), PoissonSolver< nstencil >::solve(), and PoissonSolver< nstencil >::test().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b PoissonSolver.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b PoissonSolver_new.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PseudoBody Class Reference\par \pard\plain 
{\tc\tcl2 \v PseudoBody}
{\xe \v PseudoBody}
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\par
{
{\f2 #include <OctTree.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PseudoBody} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PseudoBody} ({\b real} mass_, {\b real} x_, {\b real} y_, {\b real} z_)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PseudoBody} (const std::vector< {\b PseudoBody} > &Bodies)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PseudoBody} (const {\b PseudoBody} &b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getx} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b gety} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getz} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getmass} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getxx} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getyy} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getzz} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getxy} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getyx} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getxz} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getzx} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getyz} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getzy} (void) const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b mass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b z}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b xx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b yy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b zz}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b xy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b xz}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b yz}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 122 of file OctTree.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PseudoBody\:PseudoBody}
{\xe \v PseudoBody\:PseudoBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PseudoBody::PseudoBody (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file OctTree.h.}\par
}
{\xe \v PseudoBody\:PseudoBody}
{\xe \v PseudoBody\:PseudoBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PseudoBody::PseudoBody ({\b real} {\i mass_},   {\b real} {\i x_},   {\b real} {\i y_},   {\b real} {\i z_}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file OctTree.h.}\par
}
{\xe \v PseudoBody\:PseudoBody}
{\xe \v PseudoBody\:PseudoBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PseudoBody::PseudoBody (const std::vector< {\b PseudoBody} > & {\i Bodies}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 137 of file OctTree.h.}\par
{
References mass, x, xx, xy, xz, y, yy, yz, z, and zz.}\par
}
{\xe \v PseudoBody\:PseudoBody}
{\xe \v PseudoBody\:PseudoBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PseudoBody::PseudoBody (const {\b PseudoBody} & {\i b}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file OctTree.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getmass\:PseudoBody}
{\xe \v PseudoBody\:getmass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getmass (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 190 of file OctTree.h.}\par
{
References mass.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getx\:PseudoBody}
{\xe \v PseudoBody\:getx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getx (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file OctTree.h.}\par
{
References x.}\par
{
Referenced by kDTreeNode::partition(), OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getxx\:PseudoBody}
{\xe \v PseudoBody\:getxx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getxx (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file OctTree.h.}\par
{
References xx.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getxy\:PseudoBody}
{\xe \v PseudoBody\:getxy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getxy (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 203 of file OctTree.h.}\par
{
References xy.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getxz\:PseudoBody}
{\xe \v PseudoBody\:getxz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getxz (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 209 of file OctTree.h.}\par
{
References xz.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v gety\:PseudoBody}
{\xe \v PseudoBody\:gety}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::gety (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file OctTree.h.}\par
{
References y.}\par
{
Referenced by kDTreeNode::partition(), OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getyx\:PseudoBody}
{\xe \v PseudoBody\:getyx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getyx (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 206 of file OctTree.h.}\par
{
References xy.}\par
}
{\xe \v getyy\:PseudoBody}
{\xe \v PseudoBody\:getyy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getyy (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 197 of file OctTree.h.}\par
{
References yy.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getyz\:PseudoBody}
{\xe \v PseudoBody\:getyz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getyz (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 215 of file OctTree.h.}\par
{
References yz.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getz\:PseudoBody}
{\xe \v PseudoBody\:getz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getz (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 186 of file OctTree.h.}\par
{
References z.}\par
{
Referenced by kDTreeNode::partition(), OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\xe \v getzx\:PseudoBody}
{\xe \v PseudoBody\:getzx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getzx (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 212 of file OctTree.h.}\par
{
References xz.}\par
}
{\xe \v getzy\:PseudoBody}
{\xe \v PseudoBody\:getzy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getzy (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 218 of file OctTree.h.}\par
{
References yz.}\par
}
{\xe \v getzz\:PseudoBody}
{\xe \v PseudoBody\:getzz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} PseudoBody::getzz (void) const{\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 200 of file OctTree.h.}\par
{
References zz.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v mass\:PseudoBody}
{\xe \v PseudoBody\:mass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::mass}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file OctTree.h.}\par
{
Referenced by getmass(), and PseudoBody().}\par
}
{\xe \v x\:PseudoBody}
{\xe \v PseudoBody\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::x}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file OctTree.h.}\par
{
Referenced by getx(), and PseudoBody().}\par
}
{\xe \v xx\:PseudoBody}
{\xe \v PseudoBody\:xx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::xx}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file OctTree.h.}\par
{
Referenced by getxx(), and PseudoBody().}\par
}
{\xe \v xy\:PseudoBody}
{\xe \v PseudoBody\:xy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::xy}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file OctTree.h.}\par
{
Referenced by getxy(), getyx(), and PseudoBody().}\par
}
{\xe \v xz\:PseudoBody}
{\xe \v PseudoBody\:xz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::xz}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file OctTree.h.}\par
{
Referenced by getxz(), getzx(), and PseudoBody().}\par
}
{\xe \v y\:PseudoBody}
{\xe \v PseudoBody\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::y}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file OctTree.h.}\par
{
Referenced by gety(), and PseudoBody().}\par
}
{\xe \v yy\:PseudoBody}
{\xe \v PseudoBody\:yy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::yy}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file OctTree.h.}\par
{
Referenced by getyy(), and PseudoBody().}\par
}
{\xe \v yz\:PseudoBody}
{\xe \v PseudoBody\:yz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::yz}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file OctTree.h.}\par
{
Referenced by getyz(), getzy(), and PseudoBody().}\par
}
{\xe \v z\:PseudoBody}
{\xe \v PseudoBody\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::z}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file OctTree.h.}\par
{
Referenced by getz(), and PseudoBody().}\par
}
{\xe \v zz\:PseudoBody}
{\xe \v PseudoBody\:zz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} {\b PseudoBody::zz}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file OctTree.h.}\par
{
Referenced by getzz(), and PseudoBody().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b OctTree.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ScalarField Class Reference\par \pard\plain 
{\tc\tcl2 \v ScalarField}
{\xe \v ScalarField}
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\par
{
{\f2 #include <ScalarField.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScalarField} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScalarField} (unsigned nx, unsigned ny, unsigned nz, float dx, int nstencil)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ScalarField} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScalarField} * {\b operator=} ({\b ScalarField} *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b recreate} (unsigned nx, unsigned ny, unsigned nz, float dx, int nstencil)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Array3} * {\b getPhi} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPhi} ({\b Array3} *phi)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNx} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNy} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNz} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getDx} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNStencil} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNStencil2} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b test} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getValue} (int ix, int iy, int iz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValue} (int ix, int iy, int iz, float val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ChooseStencil} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Choose a stencil. Choose a stencil. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b put_CIC} (unsigned npart, float *coord, float *wpar)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put clound in cell. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_CIC} (float coordx, float coordy, float coordz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lookup} (float *Coord, unsigned nCoord, std::vector< float > &values)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lookup} (float *Coord, unsigned nCoord, float ll, unsigned N, std::vector< float > &values)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b diff1} (int ix, int iy, int iz, int i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b diff2} (int ix, int iy, int iz, int i, int j)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b diff2atCIC} (float *Coord, unsigned nPoints, std::vector< {\b Matrix33} > &t_ij)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
diff2atCIC }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > T {\b get_NGP} (T *coord)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 34 of file ScalarField.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ScalarField\:ScalarField}
{\xe \v ScalarField\:ScalarField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ScalarField::ScalarField (void)}
}\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file ScalarField.cpp.}\par
}
{\xe \v ScalarField\:ScalarField}
{\xe \v ScalarField\:ScalarField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ScalarField::ScalarField (unsigned {\i nx},   unsigned {\i ny},   unsigned {\i nz},   float {\i dx},   int {\i nstencil})}
}\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file ScalarField.cpp.}\par
}
{\xe \v ~ScalarField\:ScalarField}
{\xe \v ScalarField\:~ScalarField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ScalarField::~ScalarField (void)}
}\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file ScalarField.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ChooseStencil\:ScalarField}
{\xe \v ScalarField\:ChooseStencil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::ChooseStencil (void)}
}\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Choose a stencil. Choose a stencil. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 436 of file ScalarField.cpp.}\par
{
References stencil11_1, stencil11_2, stencil3_1, stencil3_2, stencil5_1, stencil5_2, stencil7_1, stencil7_2, stencil9_1, and stencil9_2.}\par
{
Referenced by diff2atCIC().}\par
}
{\xe \v diff1\:ScalarField}
{\xe \v ScalarField\:diff1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ScalarField::diff1 (int {\i ix},   int {\i iy},   int {\i iz},   int {\i i})}
}\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file ScalarField.cpp.}\par
{
References getValue().}\par
{
Referenced by diff2().}\par
}
{\xe \v diff2\:ScalarField}
{\xe \v ScalarField\:diff2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ScalarField::diff2 (int {\i ix},   int {\i iy},   int {\i iz},   int {\i i},   int {\i j})}
}\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 215 of file ScalarField.cpp.}\par
{
References diff1(), and getValue().}\par
{
Referenced by diff2atCIC().}\par
}
{\xe \v diff2atCIC\:ScalarField}
{\xe \v ScalarField\:diff2atCIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::diff2atCIC (float * {\i Coord},   unsigned {\i nPoints},   std::vector< {\b Matrix33} > & {\i t_ij})}
}\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
diff2atCIC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i Coord,:} list of coordinates \par
{\i nPoints,:} number of points in Coord where we want to know the tensor \par
{\i t_ij,:} tensor \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 348 of file ScalarField.cpp.}\par
{
References ChooseStencil(), and diff2().}\par
{
Referenced by TidalField().}\par
}
{\xe \v get_CIC\:ScalarField}
{\xe \v ScalarField\:get_CIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ScalarField::get_CIC (float {\i coordx},   float {\i coordy},   float {\i coordz})}
}\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 161 of file ScalarField.cpp.}\par
{
Referenced by TidalField().}\par
}
{\xe \v get_NGP\:ScalarField}
{\xe \v ScalarField\:get_NGP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T ScalarField::get_NGP (T * {\i coord}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file ScalarField.h.}\par
{
References getValue().}\par
}
{\xe \v getDx\:ScalarField}
{\xe \v ScalarField\:getDx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ScalarField::getDx (void)}
}\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file ScalarField.cpp.}\par
{
Referenced by operator=().}\par
}
{\xe \v getNStencil\:ScalarField}
{\xe \v ScalarField\:getNStencil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ScalarField::getNStencil (void)}
}\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file ScalarField.cpp.}\par
{
Referenced by operator=().}\par
}
{\xe \v getNStencil2\:ScalarField}
{\xe \v ScalarField\:getNStencil2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ScalarField::getNStencil2 (void)}
}\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file ScalarField.cpp.}\par
{
Referenced by operator=().}\par
}
{\xe \v getNx\:ScalarField}
{\xe \v ScalarField\:getNx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ScalarField::getNx (void)}
}\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file ScalarField.cpp.}\par
{
Referenced by operator=(), and PoissonSolver< nstencil >::solve().}\par
}
{\xe \v getNy\:ScalarField}
{\xe \v ScalarField\:getNy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ScalarField::getNy (void)}
}\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file ScalarField.cpp.}\par
{
Referenced by operator=(), and PoissonSolver< nstencil >::solve().}\par
}
{\xe \v getNz\:ScalarField}
{\xe \v ScalarField\:getNz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ScalarField::getNz (void)}
}\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file ScalarField.cpp.}\par
{
Referenced by operator=(), and PoissonSolver< nstencil >::solve().}\par
}
{\xe \v getPhi\:ScalarField}
{\xe \v ScalarField\:getPhi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Array3} * ScalarField::getPhi (void)}
}\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file ScalarField.cpp.}\par
{
Referenced by operator=().}\par
}
{\xe \v getValue\:ScalarField}
{\xe \v ScalarField\:getValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ScalarField::getValue (int {\i ix},   int {\i iy},   int {\i iz})}
}\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file ScalarField.cpp.}\par
{
References Array3::getValue().}\par
{
Referenced by diff1(), diff2(), get_NGP(), lookup(), main(), PoissonSolver< nstencil >::solve(), and PoissonSolver< nstencil >::test().}\par
}
{\xe \v lookup\:ScalarField}
{\xe \v ScalarField\:lookup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::lookup (float * {\i Coord},   unsigned {\i nCoord},   float {\i ll},   unsigned {\i N},   std::vector< float > & {\i values})}
}\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file ScalarField.cpp.}\par
{
References getValue().}\par
}
{\xe \v lookup\:ScalarField}
{\xe \v ScalarField\:lookup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::lookup (float * {\i Coord},   unsigned {\i nCoord},   std::vector< float > & {\i values})}
}\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file ScalarField.cpp.}\par
{
References getValue().}\par
}
{\xe \v operator=\:ScalarField}
{\xe \v ScalarField\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScalarField} * ScalarField::operator= ({\b ScalarField} * {\i s})}
}\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file ScalarField.cpp.}\par
{
References getDx(), getNStencil(), getNStencil2(), getNx(), getNy(), getNz(), and getPhi().}\par
}
{\xe \v put_CIC\:ScalarField}
{\xe \v ScalarField\:put_CIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::put_CIC (unsigned {\i npart},   float * {\i coord},   float * {\i wpar})}
}\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put clound in cell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i npart} number of particles \par
{\i coord} positions of particles \par
{\i wpar} mass ("weight") of particles \par
}
}{
Definition at line 276 of file ScalarField.cpp.}\par
{
References Array3::addValue(), and Array3::setValue().}\par
{
Referenced by TidalField().}\par
}
{\xe \v recreate\:ScalarField}
{\xe \v ScalarField\:recreate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::recreate (unsigned {\i nx},   unsigned {\i ny},   unsigned {\i nz},   float {\i dx},   int {\i nstencil})}
}\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file ScalarField.cpp.}\par
{
References Array3::recreate().}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v setPhi\:ScalarField}
{\xe \v ScalarField\:setPhi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::setPhi ({\b Array3} * {\i phi})}
}\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file ScalarField.cpp.}\par
}
{\xe \v setValue\:ScalarField}
{\xe \v ScalarField\:setValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::setValue (int {\i ix},   int {\i iy},   int {\i iz},   float {\i val})}
}\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file ScalarField.cpp.}\par
{
References Array3::setValue().}\par
{
Referenced by main(), PoissonSolver< nstencil >::solve(), and PoissonSolver< nstencil >::test().}\par
}
{\xe \v test\:ScalarField}
{\xe \v ScalarField\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ScalarField::test (void)}
}\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 257 of file ScalarField.cpp.}\par
{
References Array3::setValue().}\par
{
Referenced by main().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ScalarField.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ScalarField.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Simulation Class Reference\par \pard\plain 
{\tc\tcl2 \v Simulation}
{\xe \v Simulation}
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\par
{
{\f2 #include <Simulation.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Simulation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Simulation} ({\b Simulation} &sim)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Simulation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCosmology} ({\b Cosmology} c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIsnap} (int isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAsnap} ({\b real} asnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setZsnap} ({\b real} zsnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNhalo} (int nhalo)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMass} ({\b real} mass)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTarkinOmega} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBoxlength} ({\b real} boxlength)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getIsnap} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getAsnap} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getZsnap} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNhalo} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getMass} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getBoxlength} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getRhobox} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getH0} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getG} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaL} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaR} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b getOmegaK} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 7 of file Simulation.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Simulation\:Simulation}
{\xe \v Simulation\:Simulation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Simulation::Simulation ()}
}\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file Simulation.cpp.}\par
}
{\xe \v Simulation\:Simulation}
{\xe \v Simulation\:Simulation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Simulation::Simulation ({\b Simulation} & {\i sim})}
}\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file Simulation.cpp.}\par
}
{\xe \v ~Simulation\:Simulation}
{\xe \v Simulation\:~Simulation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Simulation::~Simulation ()}
}\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file Simulation.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getAsnap\:Simulation}
{\xe \v Simulation\:getAsnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getAsnap ()}
}\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file Simulation.cpp.}\par
{
Referenced by Halo::calcJ(), and Halo::calcLambda().}\par
}
{\xe \v getBoxlength\:Simulation}
{\xe \v Simulation\:getBoxlength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getBoxlength ()}
}\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file Simulation.cpp.}\par
{
Referenced by Output::writeHR().}\par
}
{\xe \v getG\:Simulation}
{\xe \v Simulation\:getG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getG ()}
}\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file Simulation.cpp.}\par
{
References Cosmology::getG().}\par
{
Referenced by Halo::calcLambda().}\par
}
{\xe \v getH0\:Simulation}
{\xe \v Simulation\:getH0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getH0 ()}
}\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file Simulation.cpp.}\par
{
References Cosmology::getH0().}\par
}
{\xe \v getIsnap\:Simulation}
{\xe \v Simulation\:getIsnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Simulation::getIsnap ()}
}\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file Simulation.cpp.}\par
{
Referenced by Output::getAR(), Output::writeAR(), Output::writeHR(), and Output::writeHRstripped().}\par
}
{\xe \v getMass\:Simulation}
{\xe \v Simulation\:getMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getMass ()}
}\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file Simulation.cpp.}\par
}
{\xe \v getNhalo\:Simulation}
{\xe \v Simulation\:getNhalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Simulation::getNhalo ()}
}\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file Simulation.cpp.}\par
{
Referenced by Output::getAR(), Output::writeAR(), Output::writeHR(), and Output::writeHRstripped().}\par
}
{\xe \v getOmegaK\:Simulation}
{\xe \v Simulation\:getOmegaK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getOmegaK ()}
}\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file Simulation.cpp.}\par
{
References Cosmology::getOmegaK().}\par
}
{\xe \v getOmegaL\:Simulation}
{\xe \v Simulation\:getOmegaL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getOmegaL ()}
}\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file Simulation.cpp.}\par
{
References Cosmology::getOmegaL().}\par
}
{\xe \v getOmegaM\:Simulation}
{\xe \v Simulation\:getOmegaM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getOmegaM ()}
}\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file Simulation.cpp.}\par
{
References Cosmology::getOmegaM().}\par
}
{\xe \v getOmegaR\:Simulation}
{\xe \v Simulation\:getOmegaR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getOmegaR ()}
}\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file Simulation.cpp.}\par
{
References Cosmology::getOmegaR().}\par
}
{\xe \v getRhobox\:Simulation}
{\xe \v Simulation\:getRhobox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getRhobox ()}
}\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file Simulation.cpp.}\par
{
Referenced by Halo::Halo().}\par
}
{\xe \v getZsnap\:Simulation}
{\xe \v Simulation\:getZsnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Simulation::getZsnap ()}
}\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file Simulation.cpp.}\par
{
Referenced by Output::writeHR().}\par
}
{\xe \v setAsnap\:Simulation}
{\xe \v Simulation\:setAsnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setAsnap ({\b real} {\i asnap})}
}\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file Simulation.cpp.}\par
}
{\xe \v setBoxlength\:Simulation}
{\xe \v Simulation\:setBoxlength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setBoxlength ({\b real} {\i boxlength})}
}\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Simulation.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v setCosmology\:Simulation}
{\xe \v Simulation\:setCosmology}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setCosmology ({\b Cosmology} {\i c})}
}\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file Simulation.cpp.}\par
}
{\xe \v setIsnap\:Simulation}
{\xe \v Simulation\:setIsnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setIsnap (int {\i isnap})}
}\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file Simulation.cpp.}\par
{
Referenced by AnalyzeSnap(), and AOutput().}\par
}
{\xe \v setMass\:Simulation}
{\xe \v Simulation\:setMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setMass ({\b real} {\i mass})}
}\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file Simulation.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v setNhalo\:Simulation}
{\xe \v Simulation\:setNhalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setNhalo (int {\i nhalo})}
}\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file Simulation.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v setTarkinOmega\:Simulation}
{\xe \v Simulation\:setTarkinOmega}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setTarkinOmega ()}
}\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file Simulation.cpp.}\par
{
References Cosmology::setTarkinOmega().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v setZsnap\:Simulation}
{\xe \v Simulation\:setZsnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Simulation::setZsnap ({\b real} {\i zsnap})}
}\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file Simulation.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Simulation.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Simulation.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vector3 Class Reference\par \pard\plain 
{\tc\tcl2 \v Vector3}
{\xe \v Vector3}
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\par
{
{\f2 #include <Vector3.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} (const {\b Vector3} &v)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} ({\b real} x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} ({\b real} x, {\b real} y, {\b real} z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename real_t > {\b Vector3} (const real_t *x0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Vector3} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b operator=} (const {\b Vector3} &b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b operator=} (const {\b real} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b operator-} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b operator+} (const {\b Vector3} &x) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b operator-} (const {\b Vector3} &x) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b operator*} (const {\b real} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b operator/} (const {\b real} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b operator+=} (const {\b Vector3} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b operator-=} (const {\b Vector3} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b operator*=} (const {\b real} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b operator/=} (const {\b real} &x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} & {\b operator()} (const unsigned i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b operator*} (const {\b Vector3} &vb) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} {\b operator^} (const {\b Vector3} &vb) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b norm} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b norm2} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vector3} & {\b normalize} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} * {\b data_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 63 of file Vector3.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Vector3\:Vector3}
{\xe \v Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3::Vector3 (void)}
}\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v Vector3\:Vector3}
{\xe \v Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3::Vector3 (const {\b Vector3} & {\i v})}
}\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v Vector3\:Vector3}
{\xe \v Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3::Vector3 ({\b real} {\i x})}
}\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v Vector3\:Vector3}
{\xe \v Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3::Vector3 ({\b real} {\i x},   {\b real} {\i y},   {\b real} {\i z})}
}\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v Vector3\:Vector3}
{\xe \v Vector3\:Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename real_t > Vector3::Vector3 (const real_t * {\i x0}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v ~Vector3\:Vector3}
{\xe \v Vector3\:~Vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3::~Vector3 ()}
}\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v norm\:Vector3}
{\xe \v Vector3\:norm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Vector3::norm (void) const}
}\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 220 of file Vector3.cpp.}\par
{
Referenced by Halo::calcLambda(), HaloProperties::ComputeAngularMomentum(), HaloProperties::ComputeLambdaPrime(), and normalize().}\par
}
{\xe \v norm2\:Vector3}
{\xe \v Vector3\:norm2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Vector3::norm2 (void) const}
}\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 226 of file Vector3.cpp.}\par
{
Referenced by normalize().}\par
}
{\xe \v normalize\:Vector3}
{\xe \v Vector3\:normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::normalize (void)}
}\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 232 of file Vector3.cpp.}\par
{
References norm(), and norm2().}\par
}
{\xe \v operator()\:Vector3}
{\xe \v Vector3\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} & Vector3::operator() (const unsigned {\i i})}
}\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 191 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator*\:Vector3}
{\xe \v Vector3\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} Vector3::operator* (const {\b Vector3} & {\i vb}) const}
}\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator*\:Vector3}
{\xe \v Vector3\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Vector3::operator* (const {\b real} & {\i x})}
}\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator*=\:Vector3}
{\xe \v Vector3\:operator*=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::operator*= (const {\b real} & {\i x})}
}\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 175 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator+\:Vector3}
{\xe \v Vector3\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Vector3::operator+ (const {\b Vector3} & {\i x}) const}
}\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator+=\:Vector3}
{\xe \v Vector3\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::operator+= (const {\b Vector3} & {\i x})}
}\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator-\:Vector3}
{\xe \v Vector3\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Vector3::operator- (const {\b Vector3} & {\i x}) const}
}\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator-\:Vector3}
{\xe \v Vector3\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::operator- (void)}
}\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator-=\:Vector3}
{\xe \v Vector3\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::operator-= (const {\b Vector3} & {\i x})}
}\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 167 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator/\:Vector3}
{\xe \v Vector3\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Vector3::operator/ (const {\b real} & {\i x})}
}\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator/=\:Vector3}
{\xe \v Vector3\:operator/=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::operator/= (const {\b real} & {\i x})}
}\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator=\:Vector3}
{\xe \v Vector3\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::operator= (const {\b real} & {\i x})}
}\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator=\:Vector3}
{\xe \v Vector3\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} & Vector3::operator= (const {\b Vector3} & {\i b})}
}\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v operator^\:Vector3}
{\xe \v Vector3\:operator^}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vector3} Vector3::operator^ (const {\b Vector3} & {\i vb}) const}
}\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 208 of file Vector3.cpp.}\par
{
References data_.}\par
}
{\xe \v toString\:Vector3}
{\xe \v Vector3\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Vector3::toString (void)}
}\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 247 of file Vector3.cpp.}\par
{
References data_.}\par
{
Referenced by HResults::toString(), and AResults::toString().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v data_\:Vector3}
{\xe \v Vector3\:data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real}* {\b Vector3::data_}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file Vector3.h.}\par
{
Referenced by operator()(), operator*(), operator*=(), operator+(), operator+=(), operator-(), operator-=(), operator/(), operator/=(), operator=(), operator^(), toString(), Vector3(), and ~Vector3().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Vector3.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Vector3.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AHFrun.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v AHFrun.cpp}
{\xe \v AHFrun.cpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call AHFstep from AMIGA. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateAHFParameterFile} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the parameter file for AHFstep Creates the parameter file for AHFstep in output directory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunAHFstep} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calls AHFstep runs AHFstep parameterfile }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MoveAHFout} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
move output files of AHFstep Moves output files from current directory to output/[snap-string] }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RenameAHFout} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renames AHFstep output files Renames output files of AHFstep using regexpressions with bash. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AHFrun} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controls execution of AHFstep. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call AHFstep from AMIGA. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AHFrun.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AHFrun\:AHFrun.cpp}
{\xe \v AHFrun.cpp\:AHFrun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AHFrun (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controls execution of AHFstep. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the parameter file, invokes AHFstep, moves output files and renames them {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 139 of file AHFrun.cpp.}\par
{
References CreateAHFParameterFile(), MoveAHFout(), RenameAHFout(), and RunAHFstep().}\par
{
Referenced by main().}\par
}
{\xe \v CreateAHFParameterFile\:AHFrun.cpp}
{\xe \v AHFrun.cpp\:CreateAHFParameterFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CreateAHFParameterFile (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the parameter file for AHFstep Creates the parameter file for AHFstep in output directory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 39 of file AHFrun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), Snaps(), and writedebug().}\par
{
Referenced by AHFrun().}\par
}
{\xe \v MoveAHFout\:AHFrun.cpp}
{\xe \v AHFrun.cpp\:MoveAHFout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MoveAHFout (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
move output files of AHFstep Moves output files from current directory to output/[snap-string] }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 86 of file AHFrun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), RunCommand(), Snaps(), and writedebug().}\par
{
Referenced by AHFrun().}\par
}
{\xe \v RenameAHFout\:AHFrun.cpp}
{\xe \v AHFrun.cpp\:RenameAHFout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenameAHFout (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renames AHFstep output files Renames output files of AHFstep using regexpressions with bash. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 104 of file AHFrun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), RunCommand(), Snaps(), and writedebug().}\par
{
Referenced by AHFrun().}\par
}
{\xe \v RunAHFstep\:AHFrun.cpp}
{\xe \v AHFrun.cpp\:RunAHFstep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunAHFstep (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calls AHFstep runs AHFstep parameterfile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 71 of file AHFrun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), RunCommand(), Snaps(), and writelndebug().}\par
{
Referenced by AHFrun().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AHFrun.h File Reference\par \pard\plain 
{\tc\tcl2 \v AHFrun.h}
{\xe \v AHFrun.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file with all publicly known functions from {\b AHFrun.cpp}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AHFrun} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controls execution of AHFstep. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file with all publicly known functions from {\b AHFrun.cpp}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AHFrun.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AHFrun\:AHFrun.h}
{\xe \v AHFrun.h\:AHFrun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AHFrun (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controls execution of AHFstep. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the parameter file, invokes AHFstep, moves output files and renames them {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 139 of file AHFrun.cpp.}\par
{
References CreateAHFParameterFile(), MoveAHFout(), RenameAHFout(), and RunAHFstep().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amateur.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v amateur.cpp}
{\xe \v amateur.cpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main program, calls all subroutines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <sys/resource.h>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "ExtractSnap.h"}\par
{\f2 #include <math.h>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <list>}\par
{\f2 #include <vector>}\par
{\f2 #include <iterator>}\par
{\f2 #include <cassert>}\par
{\f2 #include <gsl/gsl_math.h>}\par
{\f2 #include <gsl/gsl_eigen.h>}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Matrix33.h"}\par
{\f2 #include <cmath>}\par
{\f2 #include "Array3.h"}\par
{\f2 #include "fftw3.h"}\par
{\f2 #include "TidalField.h"}\par
{\f2 #include "ScalarField.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HelpUser} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help for use of commandline arguments. example program calls: amateur 10 -t looks at tarkin_13309_CSF_45x_snap_211 and computes the tidal field amateur 1 runs all parts on tarkin_5726_10x_snap_302. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
main routine, calls different tools The main routine of amateur presents the user a tool to select from the different possibilities to run the program, and on which snapshot file a command should be performed. If no arguments are given, amateur prints a help message showing the command syntax with all possible snapshots }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main program, calls all subroutines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b amateur.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v HelpUser\:amateur.cpp}
{\xe \v amateur.cpp\:HelpUser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HelpUser (void)}
}\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Help for use of commandline arguments. example program calls: amateur 10 -t looks at tarkin_13309_CSF_45x_snap_211 and computes the tidal field amateur 1 runs all parts on tarkin_5726_10x_snap_302. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
program runs on nice value 15 by default attention: option -a requires a lot of CPU power, use a fast comoputer via ssh! -z requires a lot of memory -s and -x show excessive file access. For fast execution, use local computer (no ssh). \par
}{
Definition at line 48 of file amateur.cpp.}\par
{
References Snaps(), and writeln().}\par
{
Referenced by main().}\par
}
{\xe \v main\:amateur.cpp}
{\xe \v amateur.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int {\i argc},   char * {\i argv}[])}
}\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
main routine, calls different tools The main routine of amateur presents the user a tool to select from the different possibilities to run the program, and on which snapshot file a command should be performed. If no arguments are given, amateur prints a help message showing the command syntax with all possible snapshots }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i argc,:} int; number of arguments \par
{\i argv,:} char* []; character array of arguments \par
}
}{
Definition at line 77 of file amateur.cpp.}\par
{
References AHFrun(), AnalyzeSnap(), AOutput(), ExtractSnap(), ScalarField::getValue(), Array3::getValue(), HelpUser(), MergerTreeRun(), ScalarField::setValue(), Array3::setValue(), Snaps(), SubhaloMatch(), PoissonSolver< nstencil >::test(), ScalarField::test(), TidalField(), and writeln().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AnalyzeSnap.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analyzes a given snapshot with {\b Halo}, for all particle types. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cassert>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <limits>}\par
{\f2 #include <map>}\par
{\f2 #include <numeric>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Matrix33.h"}\par
{\f2 #include "Eigensystem3.h"}\par
{\f2 #include "ReadGadget.h"}\par
{\f2 #include "Cosmology.h"}\par
{\f2 #include "Simulation.h"}\par
{\f2 #include <stack>}\par
{\f2 #include <queue>}\par
{\f2 #include <cmath>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <sstream>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include "hdf5.h"}\par
{\f2 #include "AResults.h"}\par
{\f2 #include "HResults.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::vector< double > {\b VecDouble}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::vector< std::vector< double > > {\b VecVecDouble}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > T {\b byteorder} (T v)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
little/big endian conversion conversion between little/big endian }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetOffsets} (unsigned *ParticleIDOffsets, unsigned *npart)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return offsets of particle types inside snapshot. Get the particle ID offsets of the different particle types. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readDataBlocks} (int isnap, int TotalNOParticles, int *&id, {\b real} *&pos, {\b real} *&vel, {\b real} *&mass)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read snapshot data Fill in all information from snapshot data file (id, pos, vel, mass). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b openParticlesFile} (unsigned isnap, std::ifstream &ParticlesFile)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the ahf_out_particles file take ifstream and open particles file with it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReadSnapIdType} (std::ifstream &ParticlesFile, unsigned HaloPopulation, unsigned *&pid, int *&ptype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a halo full of snapshot particles from ahf_out_particles Read in a slab of HaloPopulation particles. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateHalo} (std::ifstream &ParticlesFile, unsigned HaloPopulation, const std::map< int, unsigned > &DoubleIndexMapi, {\b real} *pos, {\b real} *vel, {\b real} *mass, {\b real} *hpos, {\b real} *hvel, {\b real} *hmass, int *htype)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
preparing halo extract new lists from pos, vel, mass based on id (AHF_particles) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateDIM} (unsigned TotalNOParticles, int *&id, std::map< int, unsigned > &DIM)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generate doubly indexed map DIM for particle ID to occurence position }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AnalyzeSnap} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analysis of one single snapshot file Analyzes a single snapshot file. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b HaloTypeTotal} = 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b ParticleTypeTotal} = 6\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analyzes a given snapshot with {\b Halo}, for all particle types. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AnalyzeSnap.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v VecDouble\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:VecDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::vector<double> {\b VecDouble}}
}\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file AnalyzeSnap.cpp.}\par
}
{\xe \v VecVecDouble\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:VecVecDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::vector<std::vector <double> > {\b VecVecDouble}}
}\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file AnalyzeSnap.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AnalyzeSnap\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:AnalyzeSnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnalyzeSnap (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analysis of one single snapshot file Analyzes a single snapshot file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} unsigned snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
properties depending on halo type all: 1 1 1 1 15 dec dm: 0 0 1 1 3 dec gas: 0 1 0 0 4 dec stars: 1 0 0 0 8 dec bary: 1 1 0 0 12 dec\par
}}\par
{
Definition at line 240 of file AnalyzeSnap.cpp.}\par
{
References Output::appendHR(), Halo::calcJ(), Halo::calcLambda(), Halo::calcMpart(), Halo::calcNpart(), Halo::calcShape(), Halo::calcSigma(), DEBUG, Output::fillHRglobal(), Output::fillHRtype(), Folder(), GenerateDIM(), GenerateHalo(), get_particle_number(), Eigensystem3::getEval(), Halo::getMtot(), Halo::getMvir(), Halo::getRtot(), Halo::getRvir(), Halo::getVCM(), Halo::getVMB(), Halo::getXCM(), Halo::getXMB(), openParticlesFile(), ParticleTypeTotal, readDataBlocks(), Simulation::setBoxlength(), Simulation::setIsnap(), Simulation::setMass(), Simulation::setNhalo(), Simulation::setTarkinOmega(), Simulation::setZsnap(), Snaps(), Output::writeHR(), Output::writeHRstripped(), writeln(), and writelndebug().}\par
{
Referenced by main().}\par
}
{\xe \v byteorder\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:byteorder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T byteorder (T {\i v}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
little/big endian conversion conversion between little/big endian }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i v} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid templated T value, in other byteorder \par
}}{
Definition at line 67 of file AnalyzeSnap.cpp.}\par
}
{\xe \v GenerateDIM\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:GenerateDIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GenerateDIM (unsigned {\i TotalNOParticles},   int *& {\i id},   std::map< int, unsigned > & {\i DIM})}
}\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generate doubly indexed map DIM for particle ID to occurence position }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i TotalNOParticles;} unsigned \par
{\i id,:} int* &; identification int for all particles in simulation \par
{\i DIM,:} std::map<int,unsigned>&; output \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 225 of file AnalyzeSnap.cpp.}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v GenerateHalo\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:GenerateHalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GenerateHalo (std::ifstream & {\i ParticlesFile},   unsigned {\i HaloPopulation},   const std::map< int, unsigned > & {\i DoubleIndexMapi},   {\b real} * {\i pos},   {\b real} * {\i vel},   {\b real} * {\i mass},   {\b real} * {\i hpos},   {\b real} * {\i hvel},   {\b real} * {\i hmass},   int * {\i htype})}
}\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
preparing halo extract new lists from pos, vel, mass based on id (AHF_particles) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ParticlesFile,:} std::ifstream& of ahf_out_particles \par
{\i HaloPopulation,:} unsigned; number of particles total \par
{\i DoubleIndexMapi,:} map with reverse lookup possibility \par
{\i pos,vel,mass,:} const real *&, original data \par
{\i hpos,hvel,hmass,:} real *&, data for halo \par
{\i htype,:} particle type for halo \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 190 of file AnalyzeSnap.cpp.}\par
{
References ReadSnapIdType().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v GetOffsets\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:GetOffsets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetOffsets (unsigned * {\i ParticleIDOffsets},   unsigned * {\i npart})}
}\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return offsets of particle types inside snapshot. Get the particle ID offsets of the different particle types. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ParticleIDOffsets,:} unsigned*; where the offsets are stored \par
{\i npart,:} unsigned*; counts of particles types \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 88 of file AnalyzeSnap.cpp.}\par
{
References ParticleTypeTotal.}\par
}
{\xe \v openParticlesFile\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:openParticlesFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openParticlesFile (unsigned {\i isnap},   std::ifstream & {\i ParticlesFile})}
}\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the ahf_out_particles file take ifstream and open particles file with it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap,:} unsigned of which snapshot, see SystemCharacteristics \par
{\i ParticlesFile,:} ifstream by ref \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 145 of file AnalyzeSnap.cpp.}\par
{
References Folder(), and Snaps().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v readDataBlocks\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:readDataBlocks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readDataBlocks (int {\i isnap},   int {\i TotalNOParticles},   int *& {\i id},   {\b real} *& {\i pos},   {\b real} *& {\i vel},   {\b real} *& {\i mass})}
}\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read snapshot data Fill in all information from snapshot data file (id, pos, vel, mass). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap,:} int; snapshot number \par
{\i TotalNOParticles,:} int \par
{\i id,:} is int & \par
{\i pos,:} is double & (3d) \par
{\i vel,:} is double & (3d) \par
{\i mass,:} is double & (1d) \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 111 of file AnalyzeSnap.cpp.}\par
{
References Folder(), read_gadget_1(), read_gadget_3(), and Snaps().}\par
{
Referenced by AnalyzeSnap().}\par
}
{\xe \v ReadSnapIdType\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:ReadSnapIdType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ReadSnapIdType (std::ifstream & {\i ParticlesFile},   unsigned {\i HaloPopulation},   unsigned *& {\i pid},   int *& {\i ptype})}
}\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a halo full of snapshot particles from ahf_out_particles Read in a slab of HaloPopulation particles. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ParticlesFile,:} ifstream of ahf_out_particles \par
{\i HaloPopulation,:} unsigned int of number of particles in this halo \par
{\i pid,:} holds the output, all identifiers \par
{\i ptype,:} holds the output, all types, in accordance with ParticleIndexID \par
}
}{
Definition at line 163 of file AnalyzeSnap.cpp.}\par
{
Referenced by GenerateHalo().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v HaloTypeTotal\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:HaloTypeTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b HaloTypeTotal} = 5}
}\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file AnalyzeSnap.cpp.}\par
}
{\xe \v ParticleTypeTotal\:AnalyzeSnap.cpp}
{\xe \v AnalyzeSnap.cpp\:ParticleTypeTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b ParticleTypeTotal} = 6}
}\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file AnalyzeSnap.cpp.}\par
{
Referenced by AnalyzeSnap(), and GetOffsets().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AnalyzeSnap.h File Reference\par \pard\plain 
{\tc\tcl2 \v AnalyzeSnap.h}
{\xe \v AnalyzeSnap.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b AnalyzeSnap.cpp}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b AnalyzeSnap} (unsigned isnap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analysis of one single snapshot file Analyzes a single snapshot file. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b AnalyzeSnap.cpp}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AnalyzeSnap.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AnalyzeSnap\:AnalyzeSnap.h}
{\xe \v AnalyzeSnap.h\:AnalyzeSnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AnalyzeSnap (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analysis of one single snapshot file Analyzes a single snapshot file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} unsigned snapshot ID \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
properties depending on halo type all: 1 1 1 1 15 dec dm: 0 0 1 1 3 dec gas: 0 1 0 0 4 dec stars: 1 0 0 0 8 dec bary: 1 1 0 0 12 dec\par
}}\par
{
Definition at line 240 of file AnalyzeSnap.cpp.}\par
{
References Output::appendHR(), Halo::calcJ(), Halo::calcLambda(), Halo::calcMpart(), Halo::calcNpart(), Halo::calcShape(), Halo::calcSigma(), DEBUG, Output::fillHRglobal(), Output::fillHRtype(), Folder(), GenerateDIM(), GenerateHalo(), get_particle_number(), Eigensystem3::getEval(), Halo::getMtot(), Halo::getMvir(), Halo::getRtot(), Halo::getRvir(), Halo::getVCM(), Halo::getVMB(), Halo::getXCM(), Halo::getXMB(), openParticlesFile(), ParticleTypeTotal, readDataBlocks(), Simulation::setBoxlength(), Simulation::setIsnap(), Simulation::setMass(), Simulation::setNhalo(), Simulation::setTarkinOmega(), Simulation::setZsnap(), Snaps(), Output::writeHR(), Output::writeHRstripped(), writeln(), and writelndebug().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AOutput.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v AOutput.cpp}
{\xe \v AOutput.cpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rewrite ahf_out_halos for MATLAB input }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AOutput.h"}\par
{\f2 #include "Output.h"}\par
{\f2 #include "Simulation.h"}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AOutput} (int isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rewrite ahf_out_halos for MATLAB input \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AOutput.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AOutput\:AOutput.cpp}
{\xe \v AOutput.cpp\:AOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AOutput (int {\i isnap})}
}\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file AOutput.cpp.}\par
{
References Output::getAR(), Simulation::setIsnap(), and Output::writeAR().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AOutput.h File Reference\par \pard\plain 
{\tc\tcl2 \v AOutput.h}
{\xe \v AOutput.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wrapper for AHF output }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AOutput} (int isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wrapper for AHF output \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AOutput.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AOutput\:AOutput.h}
{\xe \v AOutput.h\:AOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AOutput (int {\i isnap})}
}\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file AOutput.cpp.}\par
{
References Output::getAR(), Simulation::setIsnap(), and Output::writeAR().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AResults.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v AResults.cpp}
{\xe \v AResults.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of AHF results storage class }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include "AResults.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Eigensystem3.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of AHF results storage class \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AResults.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AResults.h File Reference\par \pard\plain 
{\tc\tcl2 \v AResults.h}
{\xe \v AResults.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
storage class for AHF output }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Eigensystem3.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AResults}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
storage class for AHF output \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b AResults.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Array3.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Array3.cpp}
{\xe \v Array3.cpp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
threedimensional array }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
{\f2 #include <iostream>}\par
{\f2 #include "Array3.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
threedimensional array \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Array3.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Array3.h File Reference\par \pard\plain 
{\tc\tcl2 \v Array3.h}
{\xe \v Array3.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a threedimensional array (x,y,z) }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Array3}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a threedimensional array (x,y,z) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Array3.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cosmology.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Cosmology.cpp}
{\xe \v Cosmology.cpp}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Cosmology.h"}\par
{\f2 #include "Global.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cosmology.h File Reference\par \pard\plain 
{\tc\tcl2 \v Cosmology.h}
{\xe \v Cosmology.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Cosmology}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Distance.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Distance.cpp}
{\xe \v Distance.cpp}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Global.h"}\par
{\f2 #include "Distance.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Distance.h File Reference\par \pard\plain 
{\tc\tcl2 \v Distance.h}
{\xe \v Distance.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Distance}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Eigensystem3.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Eigensystem3.cpp}
{\xe \v Eigensystem3.cpp}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cmath>}\par
{\f2 #include <vector>}\par
{\f2 #include <sstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Eigensystem3.h"}\par
{\f2 #include "Vector3.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Eigensystem3.h File Reference\par \pard\plain 
{\tc\tcl2 \v Eigensystem3.h}
{\xe \v Eigensystem3.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Matrix33.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Eigensystem3}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Exceptions.h File Reference\par \pard\plain 
{\tc\tcl2 \v Exceptions.h}
{\xe \v Exceptions.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the possible Exceptions that can be thrown. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ErrNoHalosFound}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: No halo distribution computed or found This exception is called if operations are attempted on the halo distribution, but no such halo distribution has been calculated (through FindHalos()) or loaded (not yet available). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaxProgenitorsExceed}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Maximum number of halo progenitors exceeded This exception is called if a progenitor halo is added to a given halo but that halo already possesses the maximum allowed number of progenitor haloes (standard 25). This happens for memory reasons and means you have to increase the number of allowed progenitors. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CrossProductWrongDimension}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception: Wrong dimension (n!=3) in cross product computatoin This exception is called whenever a vector has a wrong dimension when it should be used in a cross product computation. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the possible Exceptions that can be thrown. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Exceptions.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExtractSnap.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v ExtractSnap.cpp}
{\xe \v ExtractSnap.cpp}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads out a Gadget2 snapshot file and stores the values in HDF5. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <numeric>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "HDFIO.h"}\par
{\f2 #include "ReadGadget.h"}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExtractSnap} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads out a Gadget2 snapshot file and stores the values in HDF5. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b ExtractSnap.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ExtractSnap\:ExtractSnap.cpp}
{\xe \v ExtractSnap.cpp\:ExtractSnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExtractSnap (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
analysis of one single snapshot file {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} ID of snapshot formatted as a string of the form "XXX" \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid error code \par
}}{
Definition at line 42 of file ExtractSnap.cpp.}\par
{
References DEBUG, donedebug(), Folder(), get_particle_number(), HDFCreateFile(), HDFCreateGroup(), HDFWriteDataset(), HDFWriteDatasetVector(), HDFWriteGroupAttribute(), read_gadget_1(), read_gadget_3(), RunCommand(), Snaps(), writedebug(), writedone(), writeln(), and writelndebug().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExtractSnap.h File Reference\par \pard\plain 
{\tc\tcl2 \v ExtractSnap.h}
{\xe \v ExtractSnap.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b ExtractSnap.cpp}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExtractSnap} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b ExtractSnap.cpp}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b ExtractSnap.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ExtractSnap\:ExtractSnap.h}
{\xe \v ExtractSnap.h\:ExtractSnap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExtractSnap (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
analysis of one single snapshot file {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i isnap} ID of snapshot formatted as a string of the form "XXX" \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid error code \par
}}{
Definition at line 42 of file ExtractSnap.cpp.}\par
{
References DEBUG, donedebug(), Folder(), get_particle_number(), HDFCreateFile(), HDFCreateGroup(), HDFWriteDataset(), HDFWriteDatasetVector(), HDFWriteGroupAttribute(), read_gadget_1(), read_gadget_3(), RunCommand(), Snaps(), writedebug(), writedone(), writeln(), and writelndebug().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Global.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Global.cpp}
{\xe \v Global.cpp}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of all system-wide properties that all parts of the program should know. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <limits>}\par
{\f2 #include <math.h>}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DoesFileExist} (char *filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMinMaxValues} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print characteristics of basic types Show Minimum, Maximum, Sign, Bits, Inf for bool, char, int, long, unsigned, unsigned long, float, double }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeln} (std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writedone} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writelndone} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b donedebug} (bool DebugLevelActivated)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writedebug} (bool DebugLevelActivated, std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writelndebug} (bool DebugLevelActivated, std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunCommand} (std::string command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b GetLineNumber} (std::string filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reverse} (char s[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b itoa} (int n, char s[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b IntToString} (int intValue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b Folder} (std::string where)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b Snaps} (unsigned SnapNo)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b fbmod} ({\b real} x, {\b real} m)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename real_t > real_t {\b SPHK3D} (const real_t r, const real_t h)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of all system-wide properties that all parts of the program should know. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Global.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v DoesFileExist\:Global.cpp}
{\xe \v Global.cpp\:DoesFileExist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DoesFileExist (char * {\i filename})}
}\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file Global.cpp.}\par
{
Referenced by AssertFileOpen().}\par
}
{\xe \v donedebug\:Global.cpp}
{\xe \v Global.cpp\:donedebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void donedebug (bool {\i DebugLevelActivated})}
}\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file Global.cpp.}\par
{
References writelndone().}\par
{
Referenced by CreateAHFParameterFile(), ExtractSnap(), GetMtreeFile(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), RenameAHFout(), RewriteParticleNumbers(), RunAHFstep(), RunOwnMergerTree(), SubhaloMatch(), WrapperParticleNumbers(), and WriteMtree2File().}\par
}
{\xe \v fbmod\:Global.cpp}
{\xe \v Global.cpp\:fbmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} fbmod ({\b real} {\i x},   {\b real} {\i m})}
}\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 319 of file Global.cpp.}\par
}
{\xe \v Folder\:Global.cpp}
{\xe \v Global.cpp\:Folder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Folder (std::string {\i where})}
}\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the paths to all important folders. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i where,:} which folder? allowed: amd, snap, amateur, output, parameters \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid std::string full path \par
}}{
Definition at line 262 of file Global.cpp.}\par
{
Referenced by AnalyzeSnap(), CreateAHFParameterFile(), CreateHaloTrackerParameterFile(), CreateMergeParameterFile(), ExtractSnap(), Output::getAR(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), openParticlesFile(), readDataBlocks(), RenameAHFout(), RewriteParticleNumbers(), RunAHFstep(), RunHaloTracker(), RunMergerTree(), RunOwnMergerTree(), SubhaloMatch(), TidalField(), WrapperParticleNumbers(), Output::writeAR(), Output::writeHR(), and Output::writeHRstripped().}\par
}
{\xe \v GetLineNumber\:Global.cpp}
{\xe \v Global.cpp\:GetLineNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned GetLineNumber (std::string {\i filename})}
}\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
count the lines of a given file {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i filename,:} path to the file \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid unsigned number of lines \par
}}{
Definition at line 184 of file Global.cpp.}\par
{
Referenced by SubhaloMatch().}\par
}
{\xe \v IntToString\:Global.cpp}
{\xe \v Global.cpp\:IntToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string IntToString (int {\i intValue})}
}\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert an integer into a string. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i intValue,:} integer to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid std::string of that integer value \par
}}{
Definition at line 243 of file Global.cpp.}\par
{
References itoa().}\par
{
Referenced by TidalField().}\par
}
{\xe \v itoa\:Global.cpp}
{\xe \v Global.cpp\:itoa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void itoa (int {\i n},   char {\i s}[])}
}\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer into a char[ ]. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i n,:} integer that should be printed as a character array \par
{\i s,:} char array that should hold the number \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 221 of file Global.cpp.}\par
{
References reverse().}\par
{
Referenced by IntToString().}\par
}
{\xe \v printMinMaxValues\:Global.cpp}
{\xe \v Global.cpp\:printMinMaxValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMinMaxValues (void)}
}\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print characteristics of basic types Show Minimum, Maximum, Sign, Bits, Inf for bool, char, int, long, unsigned, unsigned long, float, double }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : void \par
}}{
Definition at line 55 of file Global.cpp.}\par
}
{\xe \v reverse\:Global.cpp}
{\xe \v Global.cpp\:reverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reverse (char {\i s}[])}
}\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reverse the order of characters in a string {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i s,:} array of chars (<=> string) \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 203 of file Global.cpp.}\par
{
Referenced by itoa().}\par
}
{\xe \v RunCommand\:Global.cpp}
{\xe \v Global.cpp\:RunCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunCommand (std::string {\i command})}
}\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file Global.cpp.}\par
{
Referenced by ExtractSnap(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), RenameAHFout(), RunAHFstep(), RunHaloTracker(), and RunMergerTree().}\par
}
{\xe \v Snaps\:Global.cpp}
{\xe \v Global.cpp\:Snaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Snaps (unsigned {\i SnapNo})}
}\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the full path to an AMATEUR snapshot {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SnapNo,:} ID of snapshot \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid std::string full_path \par
}}{
Definition at line 291 of file Global.cpp.}\par
{
Referenced by AnalyzeSnap(), CreateAHFParameterFile(), CreateHaloTrackerParameterFile(), CreateMergeParameterFile(), ExtractSnap(), Output::getAR(), HelpUser(), main(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), openParticlesFile(), readDataBlocks(), RenameAHFout(), RewriteParticleNumbers(), RunAHFstep(), RunOwnMergerTree(), SubhaloMatch(), TidalField(), WrapperParticleNumbers(), Output::writeAR(), Output::writeHR(), and Output::writeHRstripped().}\par
}
{\xe \v SPHK3D\:Global.cpp}
{\xe \v Global.cpp\:SPHK3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename real_t > real_t SPHK3D (const real_t {\i r},   const real_t {\i h}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 325 of file Global.cpp.}\par
{
Referenced by HaloProperties::AverageVel().}\par
}
{\xe \v write\:Global.cpp}
{\xe \v Global.cpp\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write (std::string {\i text})}
}\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file Global.cpp.}\par
{
Referenced by TidalField(), and writedebug().}\par
}
{\xe \v writedebug\:Global.cpp}
{\xe \v Global.cpp\:writedebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writedebug (bool {\i DebugLevelActivated},   std::string {\i text})}
}\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 154 of file Global.cpp.}\par
{
References write().}\par
{
Referenced by CreateAHFParameterFile(), ExtractSnap(), GetMtreeFile(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), RenameAHFout(), RewriteParticleNumbers(), RunOwnMergerTree(), SubhaloMatch(), WrapperParticleNumbers(), and WriteMtree2File().}\par
}
{\xe \v writedone\:Global.cpp}
{\xe \v Global.cpp\:writedone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writedone (void)}
}\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file Global.cpp.}\par
{
Referenced by CreateHaloTrackerParameterFile(), CreateMergeParameterFile(), ExtractSnap(), and TidalField().}\par
}
{\xe \v writeln\:Global.cpp}
{\xe \v Global.cpp\:writeln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeln (std::string {\i text})}
}\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file Global.cpp.}\par
{
Referenced by AnalyzeSnap(), ExtractSnap(), HelpUser(), main(), and writelndebug().}\par
}
{\xe \v writelndebug\:Global.cpp}
{\xe \v Global.cpp\:writelndebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writelndebug (bool {\i DebugLevelActivated},   std::string {\i text})}
}\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 165 of file Global.cpp.}\par
{
References writeln().}\par
{
Referenced by AnalyzeSnap(), ExtractSnap(), RunAHFstep(), RunHaloTracker(), RunMergerTree(), and RunOwnMergerTree().}\par
}
{\xe \v writelndone\:Global.cpp}
{\xe \v Global.cpp\:writelndone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writelndone (void)}
}\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 135 of file Global.cpp.}\par
{
Referenced by donedebug(), and TidalField().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Global.h File Reference\par \pard\plain 
{\tc\tcl2 \v Global.h}
{\xe \v Global.h}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b Global.cpp}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b real}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunCommand} (std::string command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writedebug} (bool DebugLevelActivated, std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeln} (std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writelndebug} (bool DebugLevelActivated, std::string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writedone} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writelndone} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b donedebug} (bool DebugLevelActivated)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b IntToString} (int intValue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b Folder} (std::string where)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b Snaps} (unsigned SnapNo)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DoesFileExist} (char *filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b GetLineNumber} (std::string filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMinMaxValues} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print characteristics of basic types Show Minimum, Maximum, Sign, Bits, Inf for bool, char, int, long, unsigned, unsigned long, float, double }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b fbmod} ({\b real} x, {\b real} y)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename real_t > real_t {\b SPHK3D} (const real_t r, const real_t h)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b DEBUG} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b PI} = 3.14159265358979323846264338327950288419716939937510582\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b Global.cpp}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Global.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v real\:Global.h}
{\xe \v Global.h\:real}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b real}}
}\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file Global.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v DoesFileExist\:Global.h}
{\xe \v Global.h\:DoesFileExist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DoesFileExist (char * {\i filename})}
}\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file Global.cpp.}\par
{
Referenced by AssertFileOpen().}\par
}
{\xe \v donedebug\:Global.h}
{\xe \v Global.h\:donedebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void donedebug (bool {\i DebugLevelActivated})}
}\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file Global.cpp.}\par
{
References writelndone().}\par
{
Referenced by CreateAHFParameterFile(), ExtractSnap(), GetMtreeFile(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), RenameAHFout(), RewriteParticleNumbers(), RunAHFstep(), RunOwnMergerTree(), SubhaloMatch(), WrapperParticleNumbers(), and WriteMtree2File().}\par
}
{\xe \v fbmod\:Global.h}
{\xe \v Global.h\:fbmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} fbmod ({\b real} {\i x},   {\b real} {\i y}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 319 of file Global.cpp.}\par
}
{\xe \v Folder\:Global.h}
{\xe \v Global.h\:Folder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Folder (std::string {\i where})}
}\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the paths to all important folders. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i where,:} which folder? allowed: amd, snap, amateur, output, parameters \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid std::string full path \par
}}{
Definition at line 262 of file Global.cpp.}\par
{
Referenced by AnalyzeSnap(), CreateAHFParameterFile(), CreateHaloTrackerParameterFile(), CreateMergeParameterFile(), ExtractSnap(), Output::getAR(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), openParticlesFile(), readDataBlocks(), RenameAHFout(), RewriteParticleNumbers(), RunAHFstep(), RunHaloTracker(), RunMergerTree(), RunOwnMergerTree(), SubhaloMatch(), TidalField(), WrapperParticleNumbers(), Output::writeAR(), Output::writeHR(), and Output::writeHRstripped().}\par
}
{\xe \v GetLineNumber\:Global.h}
{\xe \v Global.h\:GetLineNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned GetLineNumber (std::string {\i filename})}
}\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
count the lines of a given file {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i filename,:} path to the file \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid unsigned number of lines \par
}}{
Definition at line 184 of file Global.cpp.}\par
{
Referenced by SubhaloMatch().}\par
}
{\xe \v IntToString\:Global.h}
{\xe \v Global.h\:IntToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string IntToString (int {\i intValue})}
}\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert an integer into a string. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i intValue,:} integer to be converted \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid std::string of that integer value \par
}}{
Definition at line 243 of file Global.cpp.}\par
{
References itoa().}\par
{
Referenced by TidalField().}\par
}
{\xe \v printMinMaxValues\:Global.h}
{\xe \v Global.h\:printMinMaxValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMinMaxValues (void)}
}\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print characteristics of basic types Show Minimum, Maximum, Sign, Bits, Inf for bool, char, int, long, unsigned, unsigned long, float, double }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : void \par
}}{
Definition at line 55 of file Global.cpp.}\par
}
{\xe \v RunCommand\:Global.h}
{\xe \v Global.h\:RunCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunCommand (std::string {\i command})}
}\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file Global.cpp.}\par
{
Referenced by ExtractSnap(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), RenameAHFout(), RunAHFstep(), RunHaloTracker(), and RunMergerTree().}\par
}
{\xe \v Snaps\:Global.h}
{\xe \v Global.h\:Snaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Snaps (unsigned {\i SnapNo})}
}\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the full path to an AMATEUR snapshot {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i SnapNo,:} ID of snapshot \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid std::string full_path \par
}}{
Definition at line 291 of file Global.cpp.}\par
{
Referenced by AnalyzeSnap(), CreateAHFParameterFile(), CreateHaloTrackerParameterFile(), CreateMergeParameterFile(), ExtractSnap(), Output::getAR(), HelpUser(), main(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), openParticlesFile(), readDataBlocks(), RenameAHFout(), RewriteParticleNumbers(), RunAHFstep(), RunOwnMergerTree(), SubhaloMatch(), TidalField(), WrapperParticleNumbers(), Output::writeAR(), Output::writeHR(), and Output::writeHRstripped().}\par
}
{\xe \v SPHK3D\:Global.h}
{\xe \v Global.h\:SPHK3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename real_t > real_t SPHK3D (const real_t {\i r},   const real_t {\i h}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 325 of file Global.cpp.}\par
{
References PI.}\par
{
Referenced by HaloProperties::AverageVel().}\par
}
{\xe \v write\:Global.h}
{\xe \v Global.h\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write (std::string {\i text})}
}\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file Global.cpp.}\par
{
Referenced by TidalField(), and writedebug().}\par
}
{\xe \v writedebug\:Global.h}
{\xe \v Global.h\:writedebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writedebug (bool {\i DebugLevelActivated},   std::string {\i text})}
}\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 154 of file Global.cpp.}\par
{
References write().}\par
{
Referenced by CreateAHFParameterFile(), ExtractSnap(), GetMtreeFile(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), RenameAHFout(), RewriteParticleNumbers(), RunOwnMergerTree(), SubhaloMatch(), WrapperParticleNumbers(), and WriteMtree2File().}\par
}
{\xe \v writedone\:Global.h}
{\xe \v Global.h\:writedone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writedone (void)}
}\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file Global.cpp.}\par
{
Referenced by CreateHaloTrackerParameterFile(), CreateMergeParameterFile(), ExtractSnap(), and TidalField().}\par
}
{\xe \v writeln\:Global.h}
{\xe \v Global.h\:writeln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeln (std::string {\i text})}
}\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file Global.cpp.}\par
{
Referenced by AnalyzeSnap(), ExtractSnap(), HelpUser(), main(), and writelndebug().}\par
}
{\xe \v writelndebug\:Global.h}
{\xe \v Global.h\:writelndebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writelndebug (bool {\i DebugLevelActivated},   std::string {\i text})}
}\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 165 of file Global.cpp.}\par
{
References writeln().}\par
{
Referenced by AnalyzeSnap(), ExtractSnap(), RunAHFstep(), RunHaloTracker(), RunMergerTree(), and RunOwnMergerTree().}\par
}
{\xe \v writelndone\:Global.h}
{\xe \v Global.h\:writelndone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writelndone (void)}
}\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 135 of file Global.cpp.}\par
{
Referenced by donedebug(), and TidalField().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v DEBUG\:Global.h}
{\xe \v Global.h\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b DEBUG} = true}
}\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file Global.h.}\par
{
Referenced by AnalyzeSnap(), CreateAHFParameterFile(), ExtractSnap(), GetMtreeFile(), MoveAHFout(), MoveHaloTrackerOutput(), MoveMergeOut(), RenameAHFout(), RewriteParticleNumbers(), RunAHFstep(), RunHaloTracker(), RunMergerTree(), RunOwnMergerTree(), SubhaloMatch(), WrapperParticleNumbers(), and WriteMtree2File().}\par
}
{\xe \v PI\:Global.h}
{\xe \v Global.h\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double {\b PI} = 3.14159265358979323846264338327950288419716939937510582}
}\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file Global.h.}\par
{
Referenced by SPHK3D().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GreensFunction.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v GreensFunction.cpp}
{\xe \v GreensFunction.cpp}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementations (non-templated) for Greensfunction }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "GreensFunction.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementations (non-templated) for Greensfunction \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b GreensFunction.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GreensFunction.h File Reference\par \pard\plain 
{\tc\tcl2 \v GreensFunction.h}
{\xe \v GreensFunction.h}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of Green's function G }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cmath>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GreensFunction< nOrder >}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of Green's function G \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b GreensFunction.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Halo.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Halo.cpp}
{\xe \v Halo.cpp}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Distance.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Matrix33.h"}\par
{\f2 #include "Halo.h"}\par
{\f2 #include "Simulation.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Halo.h File Reference\par \pard\plain 
{\tc\tcl2 \v Halo.h}
{\xe \v Halo.h}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Matrix33.h"}\par
{\f2 #include "Eigensystem3.h"}\par
{\f2 #include "Cosmology.h"}\par
{\f2 #include "Simulation.h"}\par
{\f2 #include "Distance.h"}\par
{\f2 #include "OctTree.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Halo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OCTTREE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FORCE_DIRECT_TREE_SPLIT}\~ 4000\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v FORCE_DIRECT_TREE_SPLIT\:Halo.h}
{\xe \v Halo.h\:FORCE_DIRECT_TREE_SPLIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FORCE_DIRECT_TREE_SPLIT\~ 4000}
}\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file Halo.h.}\par
{
Referenced by HaloProperties::CenterOnMB(), HaloProperties::ComputeMB(), and HaloProperties::ComputeMBExc().}\par
}
{\xe \v OCTTREE\:Halo.h}
{\xe \v Halo.h\:OCTTREE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OCTTREE}
}\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file Halo.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HaloProperties.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HaloProperties.cpp}
{\xe \v HaloProperties.cpp}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementations of the {\b HaloProperties} class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "HaloProperties.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <cassert>}\par
{\f2 #include <cmath>}\par
{\f2 #include <ctime>}\par
{\f2 #include "DataStruct.h"}\par
{\f2 #include "OctTree.h"}\par
{\f2 #include <stdexcept>}\par
{\f2 #include "ANN/ANN.h"}\par
{\f2 #include <gsl/gsl_vector.h>}\par
{\f2 #include <gsl/gsl_blas.h>}\par
{\f2 #include <gsl/gsl_multifit_nlin.h>}\par
{\f2 #include <gsl/gsl_errno.h>}\par
{\f2 #include "Global.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementations of the {\b HaloProperties} class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HaloProperties.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HaloProperties.h File Reference\par \pard\plain 
{\tc\tcl2 \v HaloProperties.h}
{\xe \v HaloProperties.h}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class definition with all publicly known functions from {\b HaloProperties}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <cassert>}\par
{\f2 #include <cmath>}\par
{\f2 #include <ctime>}\par
{\f2 #include "DataStruct.h"}\par
{\f2 #include "OctTree.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HaloProperties}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b HaloProperties::Cosm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HaloProperties::Distance}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OCTTREE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FORCE_DIRECT_TREE_SPLIT}\~ 4000\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b real} {\b fbmod} ({\b real} x, {\b real} m)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename real_t > real_t {\b SPHK3D} (const real_t r, const real_t h)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class definition with all publicly known functions from {\b HaloProperties}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HaloProperties.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v FORCE_DIRECT_TREE_SPLIT\:HaloProperties.h}
{\xe \v HaloProperties.h\:FORCE_DIRECT_TREE_SPLIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FORCE_DIRECT_TREE_SPLIT\~ 4000}
}\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file HaloProperties.h.}\par
}
{\xe \v OCTTREE\:HaloProperties.h}
{\xe \v HaloProperties.h\:OCTTREE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OCTTREE}
}\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 21 of file HaloProperties.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fbmod\:HaloProperties.h}
{\xe \v HaloProperties.h\:fbmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b real} fbmod ({\b real} {\i x},   {\b real} {\i m}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file HaloProperties.h.}\par
}
{\xe \v SPHK3D\:HaloProperties.h}
{\xe \v HaloProperties.h\:SPHK3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename real_t > real_t SPHK3D (const real_t {\i r},   const real_t {\i h}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file HaloProperties.h.}\par
{
References PI.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HaloTrackerRun.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HaloTrackerRun.cpp}
{\xe \v HaloTrackerRun.cpp}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of -h, EXPERIMENTAL! }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WrapperParticleNumbers} (unsigned isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateHaloTrackerParameterFile} (unsigned isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunHaloTracker} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MoveHaloTrackerOutput} (unsigned isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HaloTrackerRun} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of -h, EXPERIMENTAL! \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HaloTrackerRun.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CreateHaloTrackerParameterFile\:HaloTrackerRun.cpp}
{\xe \v HaloTrackerRun.cpp\:CreateHaloTrackerParameterFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CreateHaloTrackerParameterFile (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file HaloTrackerRun.cpp.}\par
{
References Folder(), Snaps(), and writedone().}\par
{
Referenced by HaloTrackerRun().}\par
}
{\xe \v HaloTrackerRun\:HaloTrackerRun.cpp}
{\xe \v HaloTrackerRun.cpp\:HaloTrackerRun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloTrackerRun (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file HaloTrackerRun.cpp.}\par
{
References CreateHaloTrackerParameterFile(), MoveHaloTrackerOutput(), RunHaloTracker(), and WrapperParticleNumbers().}\par
}
{\xe \v MoveHaloTrackerOutput\:HaloTrackerRun.cpp}
{\xe \v HaloTrackerRun.cpp\:MoveHaloTrackerOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MoveHaloTrackerOutput (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file HaloTrackerRun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), RunCommand(), Snaps(), and writedebug().}\par
{
Referenced by HaloTrackerRun().}\par
}
{\xe \v RunHaloTracker\:HaloTrackerRun.cpp}
{\xe \v HaloTrackerRun.cpp\:RunHaloTracker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunHaloTracker (void)}
}\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file HaloTrackerRun.cpp.}\par
{
References DEBUG, Folder(), RunCommand(), and writelndebug().}\par
{
Referenced by HaloTrackerRun().}\par
}
{\xe \v WrapperParticleNumbers\:HaloTrackerRun.cpp}
{\xe \v HaloTrackerRun.cpp\:WrapperParticleNumbers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WrapperParticleNumbers (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file HaloTrackerRun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), Snaps(), and writedebug().}\par
{
Referenced by HaloTrackerRun().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HaloTrackerRun.h File Reference\par \pard\plain 
{\tc\tcl2 \v HaloTrackerRun.h}
{\xe \v HaloTrackerRun.h}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b HaloTrackerRun.cpp}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HaloTrackerRun} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b HaloTrackerRun.cpp}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HaloTrackerRun.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v HaloTrackerRun\:HaloTrackerRun.h}
{\xe \v HaloTrackerRun.h\:HaloTrackerRun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HaloTrackerRun (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file HaloTrackerRun.cpp.}\par
{
References CreateHaloTrackerParameterFile(), MoveHaloTrackerOutput(), RunHaloTracker(), and WrapperParticleNumbers().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HDFIO.h File Reference\par \pard\plain 
{\tc\tcl2 \v HDFIO.h}
{\xe \v HDFIO.h}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
templated C++ HDF5 frontend }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include <vector>}\par
{\f2 #include "hdf5.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HDFException}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > hid_t {\b GetDataType} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DoesFileExist} (std::string Filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AssertFileOpen} (std::string Filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HDFCreateFile} (std::string Filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadVector} (const std::string Filename, const std::string ObjName, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HDFGetDatasetExtent} (const std::string Filename, const std::string ObjName, std::vector< int > &Extent)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadDataset} (const std::string Filename, const std::string ObjName, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadSelect} (const std::string Filename, const std::string ObjName, const std::vector< unsigned > &ii, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadVectorSelect} (const std::string Filename, const std::string ObjName, const std::vector< unsigned > &ii, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadVectorSlab} (const std::string Filename, const std::string ObjName, unsigned nStart, unsigned nCount, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadDatasetSlab} (const std::string Filename, const std::string ObjName, unsigned nStart, unsigned nCount, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, T &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteDataset} (const std::string Filename, const std::string ObjName, const std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteDataset2D} (const std::string Filename, const std::string ObjName, const std::vector< std::vector< T > > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteDatasetVector} (const std::string Filename, const std::string ObjName, const std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HDFCreateGroup} (const std::string Filename, const std::string GroupName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, const std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, T Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<> void {\b HDFWriteGroupAttribute< std::string >} (const std::string Filename, const std::string GroupName, const std::string ObjName, std::string Data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
templated C++ HDF5 frontend \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HDFIO.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AssertFileOpen\:HDFIO.h}
{\xe \v HDFIO.h\:AssertFileOpen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AssertFileOpen (std::string {\i Filename}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file HDFIO.h.}\par
{
References DoesFileExist().}\par
}
{\xe \v DoesFileExist\:HDFIO.h}
{\xe \v HDFIO.h\:DoesFileExist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DoesFileExist (std::string {\i Filename}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file HDFIO.h.}\par
}
{\xe \v GetDataType\:HDFIO.h}
{\xe \v HDFIO.h\:GetDataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > hid_t GetDataType (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file HDFIO.h.}\par
}
{\xe \v HDFCreateFile\:HDFIO.h}
{\xe \v HDFIO.h\:HDFCreateFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HDFCreateFile (std::string {\i Filename}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file HDFIO.h.}\par
{
Referenced by ExtractSnap(), and TidalField().}\par
}
{\xe \v HDFCreateGroup\:HDFIO.h}
{\xe \v HDFIO.h\:HDFCreateGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HDFCreateGroup (const std::string {\i Filename},   const std::string {\i GroupName}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 715 of file HDFIO.h.}\par
{
Referenced by ExtractSnap().}\par
}
{\xe \v HDFGetDatasetExtent\:HDFIO.h}
{\xe \v HDFIO.h\:HDFGetDatasetExtent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HDFGetDatasetExtent (const std::string {\i Filename},   const std::string {\i ObjName},   std::vector< int > & {\i Extent}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file HDFIO.h.}\par
}
{\xe \v HDFReadDataset\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadDataset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadDataset (const std::string {\i Filename},   const std::string {\i ObjName},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file HDFIO.h.}\par
{
Referenced by HDFReadVector(), and TidalField().}\par
}
{\xe \v HDFReadDatasetSlab\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadDatasetSlab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadDatasetSlab (const std::string {\i Filename},   const std::string {\i ObjName},   unsigned {\i nStart},   unsigned {\i nCount},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 438 of file HDFIO.h.}\par
}
{\xe \v HDFReadGroupAttribute\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 550 of file HDFIO.h.}\par
}
{\xe \v HDFReadGroupAttribute\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   T & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 506 of file HDFIO.h.}\par
{
Referenced by TidalField().}\par
}
{\xe \v HDFReadSelect\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadSelect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadSelect (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< unsigned > & {\i ii},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 218 of file HDFIO.h.}\par
}
{\xe \v HDFReadVector\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadVector (const std::string {\i Filename},   const std::string {\i ObjName},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file HDFIO.h.}\par
{
References HDFReadDataset().}\par
{
Referenced by TidalField().}\par
}
{\xe \v HDFReadVectorSelect\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadVectorSelect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadVectorSelect (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< unsigned > & {\i ii},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 279 of file HDFIO.h.}\par
}
{\xe \v HDFReadVectorSlab\:HDFIO.h}
{\xe \v HDFIO.h\:HDFReadVectorSlab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadVectorSlab (const std::string {\i Filename},   const std::string {\i ObjName},   unsigned {\i nStart},   unsigned {\i nCount},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 373 of file HDFIO.h.}\par
}
{\xe \v HDFWriteDataset\:HDFIO.h}
{\xe \v HDFIO.h\:HDFWriteDataset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteDataset (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 611 of file HDFIO.h.}\par
{
Referenced by ExtractSnap(), and TidalField().}\par
}
{\xe \v HDFWriteDataset2D\:HDFIO.h}
{\xe \v HDFIO.h\:HDFWriteDataset2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteDataset2D (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< std::vector< T > > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 639 of file HDFIO.h.}\par
{
Referenced by StoreTensorField().}\par
}
{\xe \v HDFWriteDatasetVector\:HDFIO.h}
{\xe \v HDFIO.h\:HDFWriteDatasetVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteDatasetVector (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 680 of file HDFIO.h.}\par
{
Referenced by ExtractSnap(), and StoreTensorField().}\par
}
{\xe \v HDFWriteGroupAttribute\:HDFIO.h}
{\xe \v HDFIO.h\:HDFWriteGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   T {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 756 of file HDFIO.h.}\par
}
{\xe \v HDFWriteGroupAttribute\:HDFIO.h}
{\xe \v HDFIO.h\:HDFWriteGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   const std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 727 of file HDFIO.h.}\par
{
Referenced by ExtractSnap().}\par
}
{\xe \v HDFWriteGroupAttribute< std::string >\:HDFIO.h}
{\xe \v HDFIO.h\:HDFWriteGroupAttribute< std::string >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<> void HDFWriteGroupAttribute< std::string > (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   std::string {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HDFIO_new.h File Reference\par \pard\plain 
{\tc\tcl2 \v HDFIO_new.h}
{\xe \v HDFIO_new.h}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Some templated C++ HDF5 front-end functions, for new HDF5 versions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include <vector>}\par
{\f2 #include "hdf5.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HDFException}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > hid_t {\b GetDataType} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DoesFileExist} (std::string Filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AssertFileOpen} (std::string Filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HDFCreateFile} (std::string Filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadVector} (const std::string Filename, const std::string ObjName, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HDFGetDatasetExtent} (const std::string Filename, const std::string ObjName, std::vector< int > &Extent)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadDataset} (const std::string Filename, const std::string ObjName, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadSelect} (const std::string Filename, const std::string ObjName, const std::vector< unsigned > &ii, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadVectorSelect} (const std::string Filename, const std::string ObjName, const std::vector< unsigned > &ii, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadVectorSlab} (const std::string Filename, const std::string ObjName, unsigned nStart, unsigned nCount, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadDatasetSlab} (const std::string Filename, const std::string ObjName, unsigned nStart, unsigned nCount, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, T &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFReadGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteDataset} (const std::string Filename, const std::string ObjName, const std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteDataset2D} (const std::string Filename, const std::string ObjName, const std::vector< std::vector< T > > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteDatasetVector} (const std::string Filename, const std::string ObjName, const std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HDFCreateGroup} (const std::string Filename, const std::string GroupName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, const std::vector< T > &Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b HDFWriteGroupAttribute} (const std::string Filename, const std::string GroupName, const std::string ObjName, T Data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<> void {\b HDFWriteGroupAttribute< std::string >} (const std::string Filename, const std::string GroupName, const std::string ObjName, std::string Data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Some templated C++ HDF5 front-end functions, for new HDF5 versions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HDFIO_new.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AssertFileOpen\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:AssertFileOpen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AssertFileOpen (std::string {\i Filename}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file HDFIO_new.h.}\par
{
References DoesFileExist().}\par
}
{\xe \v DoesFileExist\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:DoesFileExist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DoesFileExist (std::string {\i Filename}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file HDFIO_new.h.}\par
}
{\xe \v GetDataType\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:GetDataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > hid_t GetDataType (void){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file HDFIO_new.h.}\par
}
{\xe \v HDFCreateFile\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFCreateFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HDFCreateFile (std::string {\i Filename}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file HDFIO_new.h.}\par
}
{\xe \v HDFCreateGroup\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFCreateGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HDFCreateGroup (const std::string {\i Filename},   const std::string {\i GroupName}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 709 of file HDFIO_new.h.}\par
}
{\xe \v HDFGetDatasetExtent\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFGetDatasetExtent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HDFGetDatasetExtent (const std::string {\i Filename},   const std::string {\i ObjName},   std::vector< int > & {\i Extent}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file HDFIO_new.h.}\par
}
{\xe \v HDFReadDataset\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadDataset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadDataset (const std::string {\i Filename},   const std::string {\i ObjName},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file HDFIO_new.h.}\par
}
{\xe \v HDFReadDatasetSlab\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadDatasetSlab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadDatasetSlab (const std::string {\i Filename},   const std::string {\i ObjName},   unsigned {\i nStart},   unsigned {\i nCount},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 432 of file HDFIO_new.h.}\par
}
{\xe \v HDFReadGroupAttribute\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 544 of file HDFIO_new.h.}\par
}
{\xe \v HDFReadGroupAttribute\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   T & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 500 of file HDFIO_new.h.}\par
}
{\xe \v HDFReadSelect\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadSelect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadSelect (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< unsigned > & {\i ii},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 216 of file HDFIO_new.h.}\par
}
{\xe \v HDFReadVector\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadVector (const std::string {\i Filename},   const std::string {\i ObjName},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file HDFIO_new.h.}\par
{
References HDFReadDataset().}\par
}
{\xe \v HDFReadVectorSelect\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadVectorSelect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadVectorSelect (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< unsigned > & {\i ii},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 277 of file HDFIO_new.h.}\par
}
{\xe \v HDFReadVectorSlab\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFReadVectorSlab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFReadVectorSlab (const std::string {\i Filename},   const std::string {\i ObjName},   unsigned {\i nStart},   unsigned {\i nCount},   std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 367 of file HDFIO_new.h.}\par
}
{\xe \v HDFWriteDataset\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFWriteDataset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteDataset (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 605 of file HDFIO_new.h.}\par
}
{\xe \v HDFWriteDataset2D\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFWriteDataset2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteDataset2D (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< std::vector< T > > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 633 of file HDFIO_new.h.}\par
}
{\xe \v HDFWriteDatasetVector\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFWriteDatasetVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteDatasetVector (const std::string {\i Filename},   const std::string {\i ObjName},   const std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 674 of file HDFIO_new.h.}\par
}
{\xe \v HDFWriteGroupAttribute\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFWriteGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   T {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 750 of file HDFIO_new.h.}\par
}
{\xe \v HDFWriteGroupAttribute\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFWriteGroupAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void HDFWriteGroupAttribute (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   const std::vector< T > & {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 721 of file HDFIO_new.h.}\par
}
{\xe \v HDFWriteGroupAttribute< std::string >\:HDFIO_new.h}
{\xe \v HDFIO_new.h\:HDFWriteGroupAttribute< std::string >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<> void HDFWriteGroupAttribute< std::string > (const std::string {\i Filename},   const std::string {\i GroupName},   const std::string {\i ObjName},   std::string {\i Data}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HResults.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HResults.cpp}
{\xe \v HResults.cpp}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all routines for {\b HResults.h} contains all different routines for storing and writing results from {\b Halo} }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sstream>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "HResults.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Eigensystem3.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all routines for {\b HResults.h} contains all different routines for storing and writing results from {\b Halo} \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HResults.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HResults.h File Reference\par \pard\plain 
{\tc\tcl2 \v HResults.h}
{\xe \v HResults.h}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
storage class for amateur::Halo output }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Global.h"}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Eigensystem3.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HResults}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b HTotal} = 5\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
storage class for amateur::Halo output \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b HResults.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v HTotal\:HResults.h}
{\xe \v HResults.h\:HTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b HTotal} = 5}
}\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file HResults.h.}\par
{
Referenced by HResults::toString().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Matrix33.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Matrix33.cpp}
{\xe \v Matrix33.cpp}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Matrix33} implementations. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include <iterator>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <list>}\par
{\f2 #include <vector>}\par
{\f2 #include <cassert>}\par
{\f2 #include <gsl/gsl_math.h>}\par
{\f2 #include <gsl/gsl_eigen.h>}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Matrix33.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ROTATE} ({\b Matrix33} a, int i, int j, int k, int l, double s, double tau)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ROTATE} (std::vector< {\b Vector3} > a, int i, int j, int k, int l, double s, double tau)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Matrix33} implementations. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Matrix33.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ROTATE\:Matrix33.cpp}
{\xe \v Matrix33.cpp\:ROTATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ROTATE (std::vector< {\b Vector3} > {\i a},   int {\i i},   int {\i j},   int {\i k},   int {\i l},   double {\i s},   double {\i tau})}
}\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 202 of file Matrix33.cpp.}\par
}
{\xe \v ROTATE\:Matrix33.cpp}
{\xe \v Matrix33.cpp\:ROTATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ROTATE ({\b Matrix33} {\i a},   int {\i i},   int {\i j},   int {\i k},   int {\i l},   double {\i s},   double {\i tau})}
}\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file Matrix33.cpp.}\par
{
Referenced by Matrix33::Jacobi().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Matrix33.h File Reference\par \pard\plain 
{\tc\tcl2 \v Matrix33.h}
{\xe \v Matrix33.h}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b Matrix33.cpp} presents a 3x3 Matrix. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <list>}\par
{\f2 #include <vector>}\par
{\f2 #include <iterator>}\par
{\f2 #include <cassert>}\par
{\f2 #include <math.h>}\par
{\f2 #include <gsl/gsl_math.h>}\par
{\f2 #include <gsl/gsl_eigen.h>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Vector3.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Matrix33}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b Matrix33.cpp} presents a 3x3 Matrix. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Matrix33.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MergerTreeRun.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v MergerTreeRun.cpp}
{\xe \v MergerTreeRun.cpp}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewrite of MergerTree of AMIGA, implements -m of amateur. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include "Global.h"}\par
{\f2 #include <map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RewriteParticleNumbers} (unsigned isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateMergeParameterFile} (unsigned isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunMergerTree} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunOwnMergerTree} (int isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MoveMergeOut} (unsigned isnap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MergerTreeRun} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewrite of MergerTree of AMIGA, implements -m of amateur. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b MergerTreeRun.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CreateMergeParameterFile\:MergerTreeRun.cpp}
{\xe \v MergerTreeRun.cpp\:CreateMergeParameterFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CreateMergeParameterFile (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file MergerTreeRun.cpp.}\par
{
References Folder(), Snaps(), and writedone().}\par
}
{\xe \v MergerTreeRun\:MergerTreeRun.cpp}
{\xe \v MergerTreeRun.cpp\:MergerTreeRun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MergerTreeRun (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file MergerTreeRun.cpp.}\par
{
References RunOwnMergerTree().}\par
{
Referenced by main().}\par
}
{\xe \v MoveMergeOut\:MergerTreeRun.cpp}
{\xe \v MergerTreeRun.cpp\:MoveMergeOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MoveMergeOut (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file MergerTreeRun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), RunCommand(), Snaps(), and writedebug().}\par
}
{\xe \v RewriteParticleNumbers\:MergerTreeRun.cpp}
{\xe \v MergerTreeRun.cpp\:RewriteParticleNumbers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RewriteParticleNumbers (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file MergerTreeRun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), Snaps(), and writedebug().}\par
}
{\xe \v RunMergerTree\:MergerTreeRun.cpp}
{\xe \v MergerTreeRun.cpp\:RunMergerTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunMergerTree (void)}
}\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file MergerTreeRun.cpp.}\par
{
References DEBUG, Folder(), RunCommand(), and writelndebug().}\par
}
{\xe \v RunOwnMergerTree\:MergerTreeRun.cpp}
{\xe \v MergerTreeRun.cpp\:RunOwnMergerTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunOwnMergerTree (int {\i isnap})}
}\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file MergerTreeRun.cpp.}\par
{
References DEBUG, donedebug(), Folder(), Snaps(), writedebug(), and writelndebug().}\par
{
Referenced by MergerTreeRun().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MergerTreeRun.h File Reference\par \pard\plain 
{\tc\tcl2 \v MergerTreeRun.h}
{\xe \v MergerTreeRun.h}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b MergerTreeRun.cpp}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MergerTreeRun} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b MergerTreeRun.cpp}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b MergerTreeRun.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MergerTreeRun\:MergerTreeRun.h}
{\xe \v MergerTreeRun.h\:MergerTreeRun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MergerTreeRun (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file MergerTreeRun.cpp.}\par
{
References RunOwnMergerTree().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MySTL.h File Reference\par \pard\plain 
{\tc\tcl2 \v MySTL.h}
{\xe \v MySTL.h}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Customized STL functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstdlib>}\par
{\f2 #include <list>}\par
{\f2 #include <iostream>}\par
{\f2 #include <iterator>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b array< T >}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b list< T >}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b list< T >::Node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b list< T >::iterator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b list< T >::const_iterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned {\b Identifier}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > void {\b convertlists} (std::list< T > &listto, {\b list}< T > &listfrom)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Customized STL functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b MySTL.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v Identifier\:MySTL.h}
{\xe \v MySTL.h\:Identifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned {\b Identifier}}
}\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file MySTL.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v convertlists\:MySTL.h}
{\xe \v MySTL.h\:convertlists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void convertlists (std::list< T > & {\i listto},   {\b list}< T > & {\i listfrom}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 363 of file MySTL.h.}\par
{
References list< T >::begin(), and list< T >::end().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NFWFit.h File Reference\par \pard\plain 
{\tc\tcl2 \v NFWFit.h}
{\xe \v NFWFit.h}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fit of a Navarro-Frenk-White potential. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cassert>}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <gsl/gsl_vector.h>}\par
{\f2 #include <gsl/gsl_blas.h>}\par
{\f2 #include <gsl/gsl_multifit_nlin.h>}\par
{\f2 #include <gsl/gsl_errno.h>}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fitdata}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fitdata_fix}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_state} (size_t iter, gsl_multifit_fdfsolver *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_f} (const gsl_vector *p, void *data, gsl_vector *f)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_fix_f} (const gsl_vector *p, void *data, gsl_vector *f)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_df} (const gsl_vector *p, void *data, gsl_matrix *J)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_fix_df} (const gsl_vector *p, void *data, gsl_matrix *J)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_fdf} (const gsl_vector *x, void *data, gsl_vector *f, gsl_matrix *J)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_fix_fdf} (const gsl_vector *x, void *data, gsl_vector *f, gsl_matrix *J)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_fit} (const std::vector< {\b real} > &r, const std::vector< {\b real} > &rho, const std::vector< {\b real} > &sigma_rho, {\b real} deltac0, {\b real} rs0, {\b real} &deltac, {\b real} &edeltac, {\b real} &rs, {\b real} &ers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NFW_fix_fit} (const std::vector< {\b real} > &r, const std::vector< {\b real} > &rho, const std::vector< {\b real} > &sigma_rho, {\b real} rvir, {\b real} mvir, {\b real} rs0, {\b real} &rs, {\b real} &ers)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fit of a Navarro-Frenk-White potential. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b NFWFit.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v NFW_df\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_df}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_df (const gsl_vector * {\i p},   void * {\i data},   gsl_matrix * {\i J})}
}\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 118 of file NFWFit.h.}\par
{
References fitdata::n, fitdata::sigma, and fitdata::x.}\par
{
Referenced by NFW_fdf(), and NFW_fit().}\par
}
{\xe \v NFW_f\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_f (const gsl_vector * {\i p},   void * {\i data},   gsl_vector * {\i f})}
}\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file NFWFit.h.}\par
{
References fitdata::n, fitdata::sigma, fitdata::x, and fitdata::y.}\par
{
Referenced by NFW_fdf(), and NFW_fit().}\par
}
{\xe \v NFW_fdf\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_fdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_fdf (const gsl_vector * {\i x},   void * {\i data},   gsl_vector * {\i f},   gsl_matrix * {\i J})}
}\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 195 of file NFWFit.h.}\par
{
References NFW_df(), and NFW_f().}\par
{
Referenced by NFW_fit().}\par
}
{\xe \v NFW_fit\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_fit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_fit (const std::vector< {\b real} > & {\i r},   const std::vector< {\b real} > & {\i rho},   const std::vector< {\b real} > & {\i sigma_rho},   {\b real} {\i deltac0},   {\b real} {\i rs0},   {\b real} & {\i deltac},   {\b real} & {\i edeltac},   {\b real} & {\i rs},   {\b real} & {\i ers})}
}\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 209 of file NFWFit.h.}\par
{
References fitdata_fix::n, NFW_df(), NFW_f(), NFW_fdf(), print_state(), and fitdata::x.}\par
{
Referenced by HaloProperties::FitNFWProfile2().}\par
}
{\xe \v NFW_fix_df\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_fix_df}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_fix_df (const gsl_vector * {\i p},   void * {\i data},   gsl_matrix * {\i J})}
}\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file NFWFit.h.}\par
{
References fitdata_fix::mvir, fitdata_fix::n, fitdata_fix::rvir, fitdata_fix::sigma, and fitdata_fix::x.}\par
{
Referenced by NFW_fix_fdf(), and NFW_fix_fit().}\par
}
{\xe \v NFW_fix_f\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_fix_f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_fix_f (const gsl_vector * {\i p},   void * {\i data},   gsl_vector * {\i f})}
}\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file NFWFit.h.}\par
{
References fitdata_fix::mvir, fitdata_fix::n, fitdata_fix::rvir, fitdata_fix::sigma, fitdata_fix::x, and fitdata_fix::y.}\par
{
Referenced by NFW_fix_fdf(), and NFW_fix_fit().}\par
}
{\xe \v NFW_fix_fdf\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_fix_fdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_fix_fdf (const gsl_vector * {\i x},   void * {\i data},   gsl_vector * {\i f},   gsl_matrix * {\i J})}
}\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 202 of file NFWFit.h.}\par
{
References NFW_fix_df(), and NFW_fix_f().}\par
{
Referenced by NFW_fix_fit().}\par
}
{\xe \v NFW_fix_fit\:NFWFit.h}
{\xe \v NFWFit.h\:NFW_fix_fit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NFW_fix_fit (const std::vector< {\b real} > & {\i r},   const std::vector< {\b real} > & {\i rho},   const std::vector< {\b real} > & {\i sigma_rho},   {\b real} {\i rvir},   {\b real} {\i mvir},   {\b real} {\i rs0},   {\b real} & {\i rs},   {\b real} & {\i ers})}
}\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 289 of file NFWFit.h.}\par
{
References fitdata::n, NFW_fix_df(), NFW_fix_f(), NFW_fix_fdf(), print_state(), and fitdata_fix::x.}\par
{
Referenced by HaloProperties::FitNFWProfile1(), and HaloProperties::FitNFWProfile200().}\par
}
{\xe \v print_state\:NFWFit.h}
{\xe \v NFWFit.h\:print_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_state (size_t {\i iter},   gsl_multifit_fdfsolver * {\i s})}
}\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file NFWFit.h.}\par
{
Referenced by NFW_fit(), and NFW_fix_fit().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OctTree.h File Reference\par \pard\plain 
{\tc\tcl2 \v OctTree.h}
{\xe \v OctTree.h}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build trees as new class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <stack>}\par
{\f2 #include <queue>}\par
{\f2 #include <cmath>}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Body}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PseudoBody}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b kDTreeNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OctTreeNode}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EPS}\~ 1.0e-8\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SPLINEQ} (double invr, double r2, double twoh, double &a, double &b, double &c, double &d)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ofstream * {\b ofs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b real} {\b g_geomfac} = 2.0 / sqrt( 3.0 )\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build trees as new class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b OctTree.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v EPS\:OctTree.h}
{\xe \v OctTree.h\:EPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EPS\~ 1.0e-8}
}\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file OctTree.h.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SPLINEQ\:OctTree.h}
{\xe \v OctTree.h\:SPLINEQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SPLINEQ (double {\i invr},   double {\i r2},   double {\i twoh},   double & {\i a},   double & {\i b},   double & {\i c},   double & {\i d}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file OctTree.h.}\par
{
Referenced by OctTreeNode::traverse(), and kDTreeNode::traverse().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v g_geomfac\:OctTree.h}
{\xe \v OctTree.h\:g_geomfac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b real} {\b g_geomfac} = 2.0 / sqrt( 3.0 )}
}\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file OctTree.h.}\par
}
{\xe \v ofs\:OctTree.h}
{\xe \v OctTree.h\:ofs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ofstream* {\b ofs}}
}\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Output.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Output.cpp}
{\xe \v Output.cpp}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all output routines provides routines for accessing and writing AHF output as well as calculated {\b Halo} outputs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <fstream>}\par
{\f2 #include "Output.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all output routines provides routines for accessing and writing AHF output as well as calculated {\b Halo} outputs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Output.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Output.h File Reference\par \pard\plain 
{\tc\tcl2 \v Output.h}
{\xe \v Output.h}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
filling output classes with values and writing them to files }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Simulation.h"}\par
{\f2 #include "AResults.h"}\par
{\f2 #include "HResults.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Output}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
filling output classes with values and writing them to files \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Output.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PoissonSolver.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v PoissonSolver.cpp}
{\xe \v PoissonSolver.cpp}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PoissonSolver.h File Reference\par \pard\plain 
{\tc\tcl2 \v PoissonSolver.h}
{\xe \v PoissonSolver.h}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to solve the Poisson problem for rho. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fftw3.h"}\par
{\f2 #include "TidalField.h"}\par
{\f2 #include "ScalarField.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PoissonSolver< nstencil >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b fftw_real}\~ double\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POSdouble}(ix, iy, iz)\~ (((ix)*(ny) + (iy)) * (2*((nz)/2+1)) + (iz))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ACC_R}(ix, iy, iz)\~ (( (ix) * (ny) + (iy) ) * (nz) + (iz) )\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ACC_C}(ix, iy, iz)\~ (( (ix) * (ny) + (iy) ) * ((nz)/2+1) + (iz))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to solve the Poisson problem for rho. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b PoissonSolver.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v ACC_C\:PoissonSolver.h}
{\xe \v PoissonSolver.h\:ACC_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ACC_C(ix,   iy,   iz)\~ (( (ix) * (ny) + (iy) ) * ((nz)/2+1) + (iz))}
}\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file PoissonSolver.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v ACC_R\:PoissonSolver.h}
{\xe \v PoissonSolver.h\:ACC_R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ACC_R(ix,   iy,   iz)\~ (( (ix) * (ny) + (iy) ) * (nz) + (iz) )}
}\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file PoissonSolver.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v fftw_real\:PoissonSolver.h}
{\xe \v PoissonSolver.h\:fftw_real}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define fftw_real\~ double}
}\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file PoissonSolver.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v POSdouble\:PoissonSolver.h}
{\xe \v PoissonSolver.h\:POSdouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POSdouble(ix,   iy,   iz)\~ (((ix)*(ny) + (iy)) * (2*((nz)/2+1)) + (iz))}
}\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file PoissonSolver.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PoissonSolver_new.h File Reference\par \pard\plain 
{\tc\tcl2 \v PoissonSolver_new.h}
{\xe \v PoissonSolver_new.h}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to solve the Poisson problem for rho The _new suffix means that the new fftw3.h is used. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "fftw3/fftw3.h"}\par
{\f2 #include "TidalField.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PoissonSolver< nstencil >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POSdouble}(ix, iy, iz)\~ (((ix)*(ny) + (iy)) * (2*((nz)/2+1)) + (iz))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ACC_R}(ix, iy, iz)\~ (((ix)*(ny) + (iy)) * ((nz) + (iz)))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ACC_C}(ix, iy, iz)\~ (((ix)*(ny) + (iy)) * (((nz)/2+1) + (iz)))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b c_re}(c)\~ ((c)[0])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b c_im}(c)\~ ((c)[1])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to solve the Poisson problem for rho The _new suffix means that the new fftw3.h is used. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b PoissonSolver_new.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v ACC_C\:PoissonSolver_new.h}
{\xe \v PoissonSolver_new.h\:ACC_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ACC_C(ix,   iy,   iz)\~ (((ix)*(ny) + (iy)) * (((nz)/2+1) + (iz)))}
}\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file PoissonSolver_new.h.}\par
}
{\xe \v ACC_R\:PoissonSolver_new.h}
{\xe \v PoissonSolver_new.h\:ACC_R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ACC_R(ix,   iy,   iz)\~ (((ix)*(ny) + (iy)) * ((nz) + (iz)))}
}\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file PoissonSolver_new.h.}\par
}
{\xe \v c_im\:PoissonSolver_new.h}
{\xe \v PoissonSolver_new.h\:c_im}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define c_im(c)\~ ((c)[1])}
}\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file PoissonSolver_new.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v c_re\:PoissonSolver_new.h}
{\xe \v PoissonSolver_new.h\:c_re}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define c_re(c)\~ ((c)[0])}
}\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file PoissonSolver_new.h.}\par
{
Referenced by PoissonSolver< nstencil >::solve().}\par
}
{\xe \v POSdouble\:PoissonSolver_new.h}
{\xe \v PoissonSolver_new.h\:POSdouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POSdouble(ix,   iy,   iz)\~ (((ix)*(ny) + (iy)) * (2*((nz)/2+1)) + (iz))}
}\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file PoissonSolver_new.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ReadGadget.c File Reference\par \pard\plain 
{\tc\tcl2 \v ReadGadget.c}
{\xe \v ReadGadget.c}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sample input file from Gadget2, modified for use with AMATEUR }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <string.h>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SKIP}\~ \{my_fread(&{\b blksize},sizeof(int),1,fd); swap_Nbyte((char*)&{\b blksize},1,sizeof(int));\}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b my_fread} (void *ptr, size_t size, size_t nmemb, FILE *stream)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b swap_Nbyte} (char *data, unsigned n, unsigned m)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_block} (FILE *fd, std::string label)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b read_gadget_head} (unsigned *npart, double *Massarr, double *time, double *redshift, int *FlagSfr, int *FlagFeedback, unsigned *Nall, int *FlagCooling, int *NumFiles, double *BoxSize, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b read_gadget_1} (T *data, std::string label, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b read_gadget_3} (T *data, std::string label, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_particle_number} (std::string filename, unsigned *id_min, unsigned *id_max, double *masses, unsigned *npart, unsigned &ntot, double &redshift, double &boxsize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template int {\b read_gadget_1< float >} (float *data, std::string label, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template int {\b read_gadget_1< unsigned >} (unsigned *data, std::string label, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template int {\b read_gadget_1< int >} (int *data, std::string label, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template int {\b read_gadget_3< float >} (float *data, std::string label, FILE *fd)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blksize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b swap_rg} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sample input file from Gadget2, modified for use with AMATEUR \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b ReadGadget.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v SKIP\:ReadGadget.c}
{\xe \v ReadGadget.c\:SKIP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SKIP\~ \{my_fread(&{\b blksize},sizeof(int),1,fd); swap_Nbyte((char*)&{\b blksize},1,sizeof(int));\}}
}\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file ReadGadget.c.}\par
{
Referenced by find_block(), read_gadget_1(), read_gadget_3(), and read_gadget_head().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v find_block\:ReadGadget.c}
{\xe \v ReadGadget.c\:find_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_block (FILE * {\i fd},   std::string {\i label})}
}\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
find a block in snapshot file {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i fd} \par
{\i label} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Definition at line 66 of file ReadGadget.c.}\par
{
References blksize, my_fread(), SKIP, swap_Nbyte(), and swap_rg.}\par
{
Referenced by read_gadget_1(), read_gadget_3(), and read_gadget_head().}\par
}
{\xe \v get_particle_number\:ReadGadget.c}
{\xe \v ReadGadget.c\:get_particle_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_particle_number (std::string {\i filename},   unsigned * {\i id_min},   unsigned * {\i id_max},   double * {\i masses},   unsigned * {\i npart},   unsigned & {\i ntot},   double & {\i redshift},   double & {\i boxsize})}
}\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 220 of file ReadGadget.c.}\par
{
References read_gadget_1(), and read_gadget_head().}\par
{
Referenced by AnalyzeSnap(), and ExtractSnap().}\par
}
{\xe \v my_fread\:ReadGadget.c}
{\xe \v ReadGadget.c\:my_fread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t my_fread (void * {\i ptr},   size_t {\i size},   size_t {\i nmemb},   FILE * {\i stream})}
}\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file ReadGadget.c.}\par
{
Referenced by find_block(), read_gadget_1(), read_gadget_3(), and read_gadget_head().}\par
}
{\xe \v read_gadget_1\:ReadGadget.c}
{\xe \v ReadGadget.c\:read_gadget_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int read_gadget_1 (T * {\i data},   std::string {\i label},   FILE * {\i fd}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read a 1D array {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
{\i label} \par
{\i fd} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Definition at line 161 of file ReadGadget.c.}\par
{
References find_block(), my_fread(), SKIP, and swap_Nbyte().}\par
{
Referenced by ExtractSnap(), get_particle_number(), and readDataBlocks().}\par
}
{\xe \v read_gadget_1< float >\:ReadGadget.c}
{\xe \v ReadGadget.c\:read_gadget_1< float >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template int read_gadget_1< float > (float * {\i data},   std::string {\i label},   FILE * {\i fd})}
}\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read_gadget_1< int >\:ReadGadget.c}
{\xe \v ReadGadget.c\:read_gadget_1< int >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template int read_gadget_1< int > (int * {\i data},   std::string {\i label},   FILE * {\i fd})}
}\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read_gadget_1< unsigned >\:ReadGadget.c}
{\xe \v ReadGadget.c\:read_gadget_1< unsigned >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template int read_gadget_1< unsigned > (unsigned * {\i data},   std::string {\i label},   FILE * {\i fd})}
}\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read_gadget_3\:ReadGadget.c}
{\xe \v ReadGadget.c\:read_gadget_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int read_gadget_3 (T * {\i data},   std::string {\i label},   FILE * {\i fd}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read a 3D array {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
{\i label} \par
{\i fd} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Definition at line 190 of file ReadGadget.c.}\par
{
References find_block(), my_fread(), SKIP, and swap_Nbyte().}\par
{
Referenced by ExtractSnap(), and readDataBlocks().}\par
}
{\xe \v read_gadget_3< float >\:ReadGadget.c}
{\xe \v ReadGadget.c\:read_gadget_3< float >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template int read_gadget_3< float > (float * {\i data},   std::string {\i label},   FILE * {\i fd})}
}\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read_gadget_head\:ReadGadget.c}
{\xe \v ReadGadget.c\:read_gadget_head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int read_gadget_head (unsigned * {\i npart},   double * {\i Massarr},   double * {\i time},   double * {\i redshift},   int * {\i FlagSfr},   int * {\i FlagFeedback},   unsigned * {\i Nall},   int * {\i FlagCooling},   int * {\i NumFiles},   double * {\i BoxSize},   FILE * {\i fd})}
}\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read gadget header info {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i npart} \par
{\i Massarr} \par
{\i time} \par
{\i redshift} \par
{\i FlagSfr} \par
{\i FlagFeedback} \par
{\i Nall} \par
{\i FlagCooling} \par
{\i NumFiles} \par
{\i BoxSize} \par
{\i fd} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid size of header block \par
}}{
Definition at line 115 of file ReadGadget.c.}\par
{
References find_block(), my_fread(), SKIP, and swap_Nbyte().}\par
{
Referenced by get_particle_number().}\par
}
{\xe \v swap_Nbyte\:ReadGadget.c}
{\xe \v ReadGadget.c\:swap_Nbyte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void swap_Nbyte (char * {\i data},   unsigned {\i n},   unsigned {\i m})}
}\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
swap endian {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
{\i n} how many entries do we have in array? \par
{\i m} how many bytes are there for a bigger number type \par
}
}{
Definition at line 47 of file ReadGadget.c.}\par
{
References swap_rg.}\par
{
Referenced by find_block(), read_gadget_1(), read_gadget_3(), and read_gadget_head().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v blksize\:ReadGadget.c}
{\xe \v ReadGadget.c\:blksize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b blksize}}
}\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file ReadGadget.c.}\par
{
Referenced by find_block().}\par
}
{\xe \v swap_rg\:ReadGadget.c}
{\xe \v ReadGadget.c\:swap_rg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b swap_rg} = 0}
}\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file ReadGadget.c.}\par
{
Referenced by find_block(), and swap_Nbyte().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ReadGadget.h File Reference\par \pard\plain 
{\tc\tcl2 \v ReadGadget.h}
{\xe \v ReadGadget.h}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b ReadGadget.c} and template instantiations. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b swap_Nbyte} (char *data, int n, int m)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b my_fread} (void *ptr, size_t size, size_t nmemb, FILE *stream)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_block} (FILE *fd, char *label)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b read_gadget_1} (T *data, std::string label, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > int {\b read_gadget_3} (T *data, std::string label, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b read_gadget_head} (int *npart, double *massarr, double *time, double *redshift, FILE *fd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_particle_number} (std::string filename, unsigned *id_min, unsigned *id_max, double *masses, unsigned *npart, unsigned &ntot, double &redshift, double &boxsize)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions from {\b ReadGadget.c} and template instantiations. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b ReadGadget.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v find_block\:ReadGadget.h}
{\xe \v ReadGadget.h\:find_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_block (FILE * {\i fd},   char * {\i label})}
}\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_particle_number\:ReadGadget.h}
{\xe \v ReadGadget.h\:get_particle_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_particle_number (std::string {\i filename},   unsigned * {\i id_min},   unsigned * {\i id_max},   double * {\i masses},   unsigned * {\i npart},   unsigned & {\i ntot},   double & {\i redshift},   double & {\i boxsize})}
}\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 220 of file ReadGadget.c.}\par
{
References read_gadget_1(), and read_gadget_head().}\par
{
Referenced by AnalyzeSnap(), and ExtractSnap().}\par
}
{\xe \v my_fread\:ReadGadget.h}
{\xe \v ReadGadget.h\:my_fread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t my_fread (void * {\i ptr},   size_t {\i size},   size_t {\i nmemb},   FILE * {\i stream})}
}\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file ReadGadget.c.}\par
{
Referenced by find_block(), read_gadget_1(), read_gadget_3(), and read_gadget_head().}\par
}
{\xe \v read_gadget_1\:ReadGadget.h}
{\xe \v ReadGadget.h\:read_gadget_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int read_gadget_1 (T * {\i data},   std::string {\i label},   FILE * {\i fd}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read a 1D array {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
{\i label} \par
{\i fd} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Definition at line 161 of file ReadGadget.c.}\par
{
References find_block(), my_fread(), SKIP, and swap_Nbyte().}\par
{
Referenced by ExtractSnap(), get_particle_number(), and readDataBlocks().}\par
}
{\xe \v read_gadget_3\:ReadGadget.h}
{\xe \v ReadGadget.h\:read_gadget_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int read_gadget_3 (T * {\i data},   std::string {\i label},   FILE * {\i fd}){\f2  [inline]}}
}\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read a 3D array {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
{\i label} \par
{\i fd} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Definition at line 190 of file ReadGadget.c.}\par
{
References find_block(), my_fread(), SKIP, and swap_Nbyte().}\par
{
Referenced by ExtractSnap(), and readDataBlocks().}\par
}
{\xe \v read_gadget_head\:ReadGadget.h}
{\xe \v ReadGadget.h\:read_gadget_head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int read_gadget_head (int * {\i npart},   double * {\i massarr},   double * {\i time},   double * {\i redshift},   FILE * {\i fd})}
}\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swap_Nbyte\:ReadGadget.h}
{\xe \v ReadGadget.h\:swap_Nbyte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void swap_Nbyte (char * {\i data},   int {\i n},   int {\i m})}
}\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ScalarField.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v ScalarField.cpp}
{\xe \v ScalarField.cpp}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phi. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ScalarField.h"}\par
{\f2 #include "Stencil.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phi. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b ScalarField.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ScalarField.h File Reference\par \pard\plain 
{\tc\tcl2 \v ScalarField.h}
{\xe \v ScalarField.h}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phi. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "Matrix33.h"}\par
{\f2 #include "Array3.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ScalarField}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phi. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b ScalarField.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Simulation.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Simulation.cpp}
{\xe \v Simulation.cpp}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cmath>}\par
{\f2 #include <cassert>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Cosmology.h"}\par
{\f2 #include "Simulation.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Simulation.h File Reference\par \pard\plain 
{\tc\tcl2 \v Simulation.h}
{\xe \v Simulation.h}
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Global.h"}\par
{\f2 #include "Cosmology.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Simulation}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Stencil.h File Reference\par \pard\plain 
{\tc\tcl2 \v Stencil.h}
{\xe \v Stencil.h}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
contains class for stencils used for TidalField }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil11_1} [11]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil11_2} [11]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil9_1} [9]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil9_2} [9]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil7_1} [7]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil7_2} [7]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil5_1} [5] = \{ 0.0833333333, -0.6666666667, 0.0, 0.6666666667, -0.0833333333 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil5_2} [5] = \{ -0.0833333333, 1.3333333333, -2.5, 1.3333333333, -0.0833333333 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil3_1} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stencil3_2} [3]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
contains class for stencils used for TidalField \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Stencil.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v stencil11_1\:Stencil.h}
{\xe \v Stencil.h\:stencil11_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil11_1}[11]}
}\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{ -7.9365079365e-04,\par
                  9.9206349206e-03,\par
                  -5.9523809524e-02,\par
                  2.3809523810e-01,\par
                  -8.3333333333e-01,\par
                  0.0,\par
                  8.3333333333e-01,\par
                  -2.3809523810e-01,\par
                  5.9523809524e-02,\par
                  -9.9206349206e-03,\par
                  7.9365079365e-04 \}\par
}
{
Definition at line 11 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil11_2\:Stencil.h}
{\xe \v Stencil.h\:stencil11_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil11_2}[11]}
}\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{ 3.1746031746e-04,\par
                  -4.9603174603e-03,\par
                  3.9682539683e-02,\par
                  -2.3809523810e-01,\par
                  1.6666666667e+00,\par
                  -2.9272222222e+00,\par
                  1.6666666667e+00,\par
                  -2.3809523810e-01,\par
                  3.9682539683e-02,\par
                  -4.9603174603e-03,\par
                  3.1746031746e-04 \}\par
}
{
Definition at line 22 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil3_1\:Stencil.h}
{\xe \v Stencil.h\:stencil3_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil3_1}[3]}
}\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{ -0.5,\par
                0.0,\par
                0.5 \}\par
}
{
Definition at line 69 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil3_2\:Stencil.h}
{\xe \v Stencil.h\:stencil3_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil3_2}[3]}
}\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{ 1.0,\par
                -2.0,\par
                1.0 \}\par
}
{
Definition at line 72 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil5_1\:Stencil.h}
{\xe \v Stencil.h\:stencil5_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil5_1}[5] = \{ 0.0833333333, -0.6666666667, 0.0, 0.6666666667, -0.0833333333 \}}
}\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil5_2\:Stencil.h}
{\xe \v Stencil.h\:stencil5_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil5_2}[5] = \{ -0.0833333333, 1.3333333333, -2.5, 1.3333333333, -0.0833333333 \}}
}\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil7_1\:Stencil.h}
{\xe \v Stencil.h\:stencil7_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil7_1}[7]}
}\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{  -0.0166666667,\par
                0.1500000000,\par
                -0.7500000000,\par
                0.0,\par
                0.7500000000,\par
                -0.1500000000,\par
                0.0166666667 \}\par
}
{
Definition at line 51 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil7_2\:Stencil.h}
{\xe \v Stencil.h\:stencil7_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil7_2}[7]}
}\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{ 0.0111111111,\par
                -0.1500000000,\par
                1.5000000000,\par
                -2.7222222222,\par
                1.5000000000,\par
                -0.1500000000,\par
                0.0111111111 \}\par
}
{
Definition at line 58 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil9_1\:Stencil.h}
{\xe \v Stencil.h\:stencil9_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil9_1}[9]}
}\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{ 3.5714285714e-03,\par
                -3.8095238095e-02,\par
                0.2000000000,\par
                -0.8000000000,\par
                0.0,\par
                0.8000000000,\par
                -0.2000000000,\par
                3.8095238095e-02,\par
                -3.5714285714e-03 \}\par
}
{
Definition at line 33 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
{\xe \v stencil9_2\:Stencil.h}
{\xe \v Stencil.h\:stencil9_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b stencil9_2}[9]}
}\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  \{ -1.7857142857e-03,\par
                2.5396825397e-02,\par
                -2.0000000000e-01,\par
                1.6000000000e+00,\par
                -2.8472222222e+00,\par
                1.6000000000e+00,\par
                -2.0000000000e-01,\par
                2.5396825397e-02,\par
                -1.7857142857e-03 \}\par
}
{
Definition at line 42 of file Stencil.h.}\par
{
Referenced by ScalarField::ChooseStencil().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SubhaloMatch.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v SubhaloMatch.cpp}
{\xe \v SubhaloMatch.cpp}
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides a wrapper to convert mtree_idx files generated by an autocorrelation run of AMIGA to give the host halo. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <map>}\par
{\f2 #include <fstream>}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetMtreeFile} (std::string filename, int dim, unsigned *hostno, unsigned *hostpop, unsigned *sharedpop, unsigned *subno, unsigned *subpop)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteMtree2File} (std::string filename, int dim, unsigned *hostno, unsigned *hostpop, unsigned *sharedpop, unsigned *subno, unsigned *subpop)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SubhaloMatch} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides a wrapper to convert mtree_idx files generated by an autocorrelation run of AMIGA to give the host halo. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b SubhaloMatch.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v GetMtreeFile\:SubhaloMatch.cpp}
{\xe \v SubhaloMatch.cpp\:GetMtreeFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetMtreeFile (std::string {\i filename},   int {\i dim},   unsigned * {\i hostno},   unsigned * {\i hostpop},   unsigned * {\i sharedpop},   unsigned * {\i subno},   unsigned * {\i subpop})}
}\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file SubhaloMatch.cpp.}\par
{
References DEBUG, donedebug(), and writedebug().}\par
{
Referenced by SubhaloMatch().}\par
}
{\xe \v SubhaloMatch\:SubhaloMatch.cpp}
{\xe \v SubhaloMatch.cpp\:SubhaloMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SubhaloMatch (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file SubhaloMatch.cpp.}\par
{
References DEBUG, donedebug(), Folder(), GetLineNumber(), GetMtreeFile(), Snaps(), writedebug(), and WriteMtree2File().}\par
{
Referenced by main().}\par
}
{\xe \v WriteMtree2File\:SubhaloMatch.cpp}
{\xe \v SubhaloMatch.cpp\:WriteMtree2File}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WriteMtree2File (std::string {\i filename},   int {\i dim},   unsigned * {\i hostno},   unsigned * {\i hostpop},   unsigned * {\i sharedpop},   unsigned * {\i subno},   unsigned * {\i subpop})}
}\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file SubhaloMatch.cpp.}\par
{
References DEBUG, donedebug(), and writedebug().}\par
{
Referenced by SubhaloMatch().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SubhaloMatch.h File Reference\par \pard\plain 
{\tc\tcl2 \v SubhaloMatch.h}
{\xe \v SubhaloMatch.h}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b SubhaloMatch.cpp}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SubhaloMatch} (unsigned isnap)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b SubhaloMatch.cpp}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b SubhaloMatch.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SubhaloMatch\:SubhaloMatch.h}
{\xe \v SubhaloMatch.h\:SubhaloMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SubhaloMatch (unsigned {\i isnap})}
}\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file SubhaloMatch.cpp.}\par
{
References DEBUG, donedebug(), Folder(), GetLineNumber(), GetMtreeFile(), Snaps(), writedebug(), and WriteMtree2File().}\par
{
Referenced by main().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TidalField.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v TidalField.cpp}
{\xe \v TidalField.cpp}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements -t option: Computation of the tidal field. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <unistd.h>}\par
{\f2 #include <sstream>}\par
{\f2 #include "TidalField.h"}\par
{\f2 #include "HDFIO.h"}\par
{\f2 #include "PoissonSolver.h"}\par
{\f2 #include "Eigensystem3.h"}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TidalField} (unsigned isnap, int N, double Radius)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TidalField} (std::string snaphdf5, unsigned N, double Radius, std::string extra, std::string tensorhdf5)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the tidal field from a given mass distribution. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StoreTensorField} (std::string filename, unsigned nPoints, const std::vector< float > &coordinates, const std::vector< {\b Matrix33} > &aTensorField, float SmoothingMassScale)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store tensor field. store tensor field to HDF5. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const float {\b G_const} = 43011.7902\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements -t option: Computation of the tidal field. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b TidalField.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v StoreTensorField\:TidalField.cpp}
{\xe \v TidalField.cpp\:StoreTensorField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StoreTensorField (std::string {\i filename},   unsigned {\i nPoints},   const std::vector< float > & {\i coordinates},   const std::vector< {\b Matrix33} > & {\i aTensorField},   float {\i SmoothingMassScale})}
}\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store tensor field. store tensor field to HDF5. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i filename,:} path to output file \par
{\i nPoints,:} number of points \par
{\i coordinates,:} evaluation points \par
{\i aTensorField,:} tensor field that should be evaluated \par
{\i SmoothingMassScale,:} smoothing scale \par
}
}{
Definition at line 217 of file TidalField.cpp.}\par
{
References Eigensystem3::getEval(), Eigensystem3::getEvec(), HDFWriteDataset2D(), and HDFWriteDatasetVector().}\par
{
Referenced by TidalField().}\par
}
{\xe \v TidalField\:TidalField.cpp}
{\xe \v TidalField.cpp\:TidalField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TidalField (std::string {\i snaphdf5},   unsigned {\i N},   double {\i Radius},   std::string {\i extra},   std::string {\i tensorhdf5})}
}\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the tidal field from a given mass distribution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i snaphdf5,:} a snapshot file, converted by AnalyzeSnap \par
{\i N,:} the length of the density mesh \par
{\i Radius,:} the length scale used for smoothing \par
{\i extra,:} file containing the -z output of the halos (used for npart, COM) \par
{\i tensorhdf5,:} output file for the tensor components \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 49 of file TidalField.cpp.}\par
{
References ScalarField::diff2atCIC(), G_const, ScalarField::get_CIC(), HDFCreateFile(), HDFReadDataset(), HDFReadGroupAttribute(), HDFReadVector(), HDFWriteDataset(), ScalarField::put_CIC(), PoissonSolver< nstencil >::solve(), StoreTensorField(), write(), writedone(), and writelndone().}\par
}
{\xe \v TidalField\:TidalField.cpp}
{\xe \v TidalField.cpp\:TidalField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TidalField (unsigned {\i isnap},   int {\i N},   double {\i Radius})}
}\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file TidalField.cpp.}\par
{
References Folder(), IntToString(), Snaps(), and TidalField().}\par
{
Referenced by main(), and TidalField().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v G_const\:TidalField.cpp}
{\xe \v TidalField.cpp\:G_const}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float {\b G_const} = 43011.7902}
}\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file TidalField.cpp.}\par
{
Referenced by TidalField().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TidalField.h File Reference\par \pard\plain 
{\tc\tcl2 \v TidalField.h}
{\xe \v TidalField.h}
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class declarations for invocation of amateur .. -t. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include "Vector3.h"}\par
{\f2 #include "Matrix33.h"}\par
{\f2 #include "Eigensystem3.h"}\par
{\f2 #include "Array3.h"}\par
{\f2 #include "GreensFunction.h"}\par
{\f2 #include "ScalarField.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EPS_ACC}\~ 1.0e-6\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TidalField} (unsigned isnap, int N, double Radius)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TidalField} (std::string snaphdf5, unsigned N, double Radius, std::string extra, std::string tensorhdf5)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the tidal field from a given mass distribution. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StoreTensorField} (std::string filename, unsigned nPoints, const std::vector< float > &coordinates, const std::vector< {\b Matrix33} > &aTensorField, float SmoothingMassScale)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store tensor field. store tensor field to HDF5. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class declarations for invocation of amateur .. -t. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b TidalField.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v EPS_ACC\:TidalField.h}
{\xe \v TidalField.h\:EPS_ACC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EPS_ACC\~ 1.0e-6}
}\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file TidalField.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v StoreTensorField\:TidalField.h}
{\xe \v TidalField.h\:StoreTensorField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void StoreTensorField (std::string {\i filename},   unsigned {\i nPoints},   const std::vector< float > & {\i coordinates},   const std::vector< {\b Matrix33} > & {\i aTensorField},   float {\i SmoothingMassScale})}
}\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store tensor field. store tensor field to HDF5. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i filename,:} path to output file \par
{\i nPoints,:} number of points \par
{\i coordinates,:} evaluation points \par
{\i aTensorField,:} tensor field that should be evaluated \par
{\i SmoothingMassScale,:} smoothing scale \par
}
}{
Definition at line 217 of file TidalField.cpp.}\par
{
References Eigensystem3::getEval(), Eigensystem3::getEvec(), HDFWriteDataset2D(), and HDFWriteDatasetVector().}\par
{
Referenced by TidalField().}\par
}
{\xe \v TidalField\:TidalField.h}
{\xe \v TidalField.h\:TidalField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TidalField (std::string {\i snaphdf5},   unsigned {\i N},   double {\i Radius},   std::string {\i extra},   std::string {\i tensorhdf5})}
}\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the tidal field from a given mass distribution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i snaphdf5,:} a snapshot file, converted by AnalyzeSnap \par
{\i N,:} the length of the density mesh \par
{\i Radius,:} the length scale used for smoothing \par
{\i extra,:} file containing the -z output of the halos (used for npart, COM) \par
{\i tensorhdf5,:} output file for the tensor components \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 49 of file TidalField.cpp.}\par
{
References ScalarField::diff2atCIC(), G_const, ScalarField::get_CIC(), HDFCreateFile(), HDFReadDataset(), HDFReadGroupAttribute(), HDFReadVector(), HDFWriteDataset(), ScalarField::put_CIC(), PoissonSolver< nstencil >::solve(), StoreTensorField(), write(), writedone(), and writelndone().}\par
}
{\xe \v TidalField\:TidalField.h}
{\xe \v TidalField.h\:TidalField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TidalField (unsigned {\i isnap},   int {\i N},   double {\i Radius})}
}\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file TidalField.cpp.}\par
{
References Folder(), IntToString(), Snaps(), and TidalField().}\par
{
Referenced by main(), and TidalField().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vector3.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Vector3.cpp}
{\xe \v Vector3.cpp}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Vector3} implementations. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include <iterator>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <list>}\par
{\f2 #include <vector>}\par
{\f2 #include <cassert>}\par
{\f2 #include <gsl/gsl_math.h>}\par
{\f2 #include <gsl/gsl_eigen.h>}\par
{\f2 #include "Global.h"}\par
{\f2 #include "Vector3.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HDF_UINT}\~ H5T_NATIVE_UINT\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MPI_UINT}\~ MPI_UNSIGNED\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HDF_FLOAT}\~ H5T_NATIVE_FLOAT\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIX}(x)\~ ({\b Identifier})(x+0.5)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned {\b Identifier}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned {\b Size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b Scalar}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b Weight}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &s, {\b Vector3} v)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Vector3} implementations. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Vector3.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v FIX\:Vector3.cpp}
{\xe \v Vector3.cpp\:FIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIX(x)\~ ({\b Identifier})(x+0.5)}
}\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Vector3.cpp.}\par
}
{\xe \v HDF_FLOAT\:Vector3.cpp}
{\xe \v Vector3.cpp\:HDF_FLOAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HDF_FLOAT\~ H5T_NATIVE_FLOAT}
}\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file Vector3.cpp.}\par
}
{\xe \v HDF_UINT\:Vector3.cpp}
{\xe \v Vector3.cpp\:HDF_UINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HDF_UINT\~ H5T_NATIVE_UINT}
}\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file Vector3.cpp.}\par
}
{\xe \v MPI_UINT\:Vector3.cpp}
{\xe \v Vector3.cpp\:MPI_UINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MPI_UINT\~ MPI_UNSIGNED}
}\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file Vector3.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v Identifier\:Vector3.cpp}
{\xe \v Vector3.cpp\:Identifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned {\b Identifier}}
}\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file Vector3.cpp.}\par
}
{\xe \v Scalar\:Vector3.cpp}
{\xe \v Vector3.cpp\:Scalar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b Scalar}}
}\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file Vector3.cpp.}\par
}
{\xe \v Size\:Vector3.cpp}
{\xe \v Vector3.cpp\:Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned {\b Size}}
}\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Vector3.cpp.}\par
}
{\xe \v Weight\:Vector3.cpp}
{\xe \v Vector3.cpp\:Weight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b Weight}}
}\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file Vector3.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator<<\:Vector3.cpp}
{\xe \v Vector3.cpp\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream& operator<< (std::ostream & {\i s},   {\b Vector3} {\i v})}
}\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 257 of file Vector3.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vector3.h File Reference\par \pard\plain 
{\tc\tcl2 \v Vector3.h}
{\xe \v Vector3.h}
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b Vector3.cpp} A three-dimensional vector (a,b,c). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <list>}\par
{\f2 #include <vector>}\par
{\f2 #include <iterator>}\par
{\f2 #include <cassert>}\par
{\f2 #include <math.h>}\par
{\f2 #include <gsl/gsl_math.h>}\par
{\f2 #include <gsl/gsl_eigen.h>}\par
{\f2 #include "Global.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Vector3}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HDF_UINT}\~ H5T_NATIVE_UINT\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MPI_UINT}\~ MPI_UNSIGNED\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HDF_FLOAT}\~ H5T_NATIVE_FLOAT\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIX}(x)\~ ({\b Identifier})(x+0.5)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned {\b Identifier}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned {\b Size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b Scalar}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b Weight}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &s, {\b Vector3} v)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All publicly known functions of {\b Vector3.cpp} A three-dimensional vector (a,b,c). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b Vector3.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v FIX\:Vector3.h}
{\xe \v Vector3.h\:FIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIX(x)\~ ({\b Identifier})(x+0.5)}
}\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file Vector3.h.}\par
}
{\xe \v HDF_FLOAT\:Vector3.h}
{\xe \v Vector3.h\:HDF_FLOAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HDF_FLOAT\~ H5T_NATIVE_FLOAT}
}\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file Vector3.h.}\par
}
{\xe \v HDF_UINT\:Vector3.h}
{\xe \v Vector3.h\:HDF_UINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HDF_UINT\~ H5T_NATIVE_UINT}
}\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file Vector3.h.}\par
}
{\xe \v MPI_UINT\:Vector3.h}
{\xe \v Vector3.h\:MPI_UINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MPI_UINT\~ MPI_UNSIGNED}
}\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file Vector3.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v Identifier\:Vector3.h}
{\xe \v Vector3.h\:Identifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned {\b Identifier}}
}\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Vector3.h.}\par
}
{\xe \v Scalar\:Vector3.h}
{\xe \v Vector3.h\:Scalar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b Scalar}}
}\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file Vector3.h.}\par
}
{\xe \v Size\:Vector3.h}
{\xe \v Vector3.h\:Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned {\b Size}}
}\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file Vector3.h.}\par
}
{\xe \v Weight\:Vector3.h}
{\xe \v Vector3.h\:Weight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b Weight}}
}\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Vector3.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator<<\:Vector3.h}
{\xe \v Vector3.h\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream& operator<< (std::ostream & {\i s},   {\b Vector3} {\i v})}
}\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 257 of file Vector3.cpp.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}