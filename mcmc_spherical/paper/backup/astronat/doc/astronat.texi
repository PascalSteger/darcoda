@c $Id: astronat.texi,v 1.7 1999/09/01 03:41:43 jbaker Exp $

\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename astronat.info
@settitle AstroNat @value{major-rel}

@set major-rel 1
@set edition 1.6
@set update-date 1999 September 1

@finalout
@c %**end of header

@ifinfo
This is a description of the AstroNat software for using BibTeX
to create LaTeX documents suitable for submission to Astronomy
journals such as the AAS journals and MNRAS.

These files are based on Patrick Daly's natbib package, which may not
be distributed in exchange for money, other than distribution costs.
They are provided `as is' and are not guaranteed in any way.

Jonathan E. Baker@*
Department of Astronomy@*
University of California, Berkeley@*
jbaker@@astro.berkeley.edu@*
@end ifinfo

@dircategory AstroNat 
@direntry
* AstroNat: (astronat)          BibTeX/natbib for Astronomy journals
@end direntry

@titlepage
@sp 10
@title AstroNat
@subtitle Package for BibTeX and Astronomy journals
@subtitle Edition @value{edition}, for AstroNat v@value{major-rel}
@subtitle @value{update-date}

@author Jonathan E.@: Baker
     
@page
@vskip 0pt plus 1filll
Jonathan E. Baker@*
University of California, Berkeley@*
jbaker@@astro.berkeley.edu@*

This is a description of the AstroNat software for using the BibTeX
to create LaTeX documents suitable for submission to Astronomy
journals such as the AAS journals and MNRAS.

These files are based on Patrick Daly's natbib package, which may not
be distributed in exchange for money, other than distribution costs.
They are provided `as is' and are not guaranteed in any way.

@end titlepage

@c ----------------------------------------------------------------------
@c ----------------------------------------------------------------------

@ifinfo
@node Top, Overview, (dir), (dir)
@comment  node-name,  next,  previous,  up
@top AstroNat

This document describes a collection of software for using BibTeX and 
Patrick Daly's very general @code{natbib} style to produce LaTeX 
documents which can be submitted electronically to Astronomy journals.  
Bibliography style files for the AAS journals (ApJ and its cousins) and 
MNRAS are included.  Natbib also supports a variety of other bibliographic
and citation styles.

This is Edition @value{edition} of the AstroNat documentation, 
@w{@value{update-date},} for version @value{major-rel}.

@menu
* Overview::
* Installation::           How to set things up.
* Usage::                  How to prepare documents.
* Problems::               Troubleshooting and bugs.
* Acknowledgements::
* Appendix::

@detailmenu
 --- The Detailed Node Listing ---

Overview

* Features::           Why this is good for you

Installation

Usage

* Bib files::          How to create your bibliographic database.
* Bib databases::      Bibliography database files.
* Abbrevs::            Defining journal abbreviations (optional).
* LaTeX document::     How to compose your LaTeX document.
* Citations::          Citation commands to use.
* Processing::         How to process LaTeX/BibTeX files.
* Submission::         How to generate a copy for e-submission.

Problems

Acknowledgements

Appendix

* MNRAS style::        Problem with \bibhang.
* Makefiles::          Automating things.
* Emacs::              Use BibTeX/RefTeX mode!

@end detailmenu
@end menu
@end ifinfo

@c ----------------------------------------------------------------------
@c ----------------------------------------------------------------------

@node Overview, Installation, Top, Top
@comment  node-name,  next,  previous,  up
@chapter Overview of AstroNat

@dfn{AstroNat}@footnote{This name is derived from the software's
reliance on the natbib package by Patrick Daly.}
is a collection of LaTeX, BibTeX and Perl software I put together
to allow the use of BibTeX to organize bibliographies when writing articles
for Astronomy journals.  The package not only produces LaTeX files which
obey the style rules for the journals, but can also make files which
follow the rules for electronic submission.  This eliminates a large
fraction of the considerable tedium involved in maintaining bibliographies 
and citations.

The basic idea is to prepare your document using the natbib citation
style and a bibliography style file for the journal.  Files for
electronic submission are then generated using a Perl script which 
inlines citations and removes the natbib dependencies.

As of AASTeX version 5.0, you no longer need the Perl script to submit
to ApJ.  But there is still no bibliography style file, so you will need
to use the one provided here.  Support for PASP conference series has
also been added.

@menu
* Features::              Why this is good for you.
@end menu

@c ----------------------------------------------------------------------

@node Features, , , Overview
@comment  node-name,  next,  previous,  up
@section Features

Here are some reasons why this is good for you.

@itemize @bullet
@item
References are stored in a bibliographic database (@code{bib}) file
in BibTeX format.  They can be easily downloaded from the Web
(for example the NASA 
@uref{http://adswww.harvard.edu/ads_abstracts.html, Astrophysics
Data System}), 
and never need to be entered into your computer more than once, 
reducing time spent hunting for typographical errors.

@item
All knowledge of the particulars of a given journal's style
for bibliographic entries is abstracted into the bibliography
style (@code{bst}) files.  This means that correct punctuation 
and formatting of the bibliography is handled for you.  It also 
means that changing from one journal's format to another 
becomes a matter of changing two or three lines of your file.

@item
Only the references which are actually cited in your work are
included from the database, so all your references can be stored
in a single place and you never have to worry about listing
references which are not cited.  Large @code{bib} files are
available on the Web for specific subject areas.

@item
Natbib has a very general and powerful citation mechanism which
can be used to produce a wide variety of author-year citations,
again without having to worry about typos or journal style.  It
also supports the traditional numbered citation style.  You can
get natbib bibliography style files for a variety of styles other
than the ones included here.

@item
References to the same authors in the same years are automatically
labeled with `a', `b', `c', etc. and sorted.

@item
RefTeX, AucTeX, and other packages provide excellent Emacs/XEmacs
interfaces (@pxref{Emacs}) to BibTeX files.
@end itemize

Of course, these advantages bring some additional complexity along
with them: you have to use the additional style files here, learn
the natbib cite commands, and use additional passes with latex and
bibtex when preparing the document (though Makefiles can do this 
automatically; an example is included).  For electronic submissions, 
an additional step is required using a Perl script to convert to 
@code{tex} and @code{bbl} files which obey the submission rules.

@c ----------------------------------------------------------------------
@c ----------------------------------------------------------------------

@node Installation, Usage, Overview, Top
@comment  node-name,  next,  previous,  up
@chapter Installation

You will need a few things in order to use this software:

@itemize @bullet
@item 
LaTeX (2e or 2.09)

@item
BibTeX (v0.99a or later)

@item
Perl

@item
Natbib (v5.3 or later; v6.8 style files included here)

@item
make (optional)
@end itemize

If you are not a local user, you will first need to download the 
latest version.  You can get it from
@uref{http://astro.berkeley.edu/~jbaker/software/bib/} and
unpack it using a command like

@example
gunzip -c astronat.tar.gz | tar xvf -
@end example

@noindent
The installation is a simple matter.  You will need the natbib
style file (@code{natbib209.sty} is the LaTeX 2.09 version);
the ones included here have not been edited from their original
forms.  You will also need
one of the @code{bst} files from the sub-directory with the
appropriate journal name (@code{apj} for AAS, @code{mnras} for Monthly
Notices).  These sub-directories also contain @code{bib} files 
which define journal abbreviations for use in your @code{bib} database,
which contains all your references.  There are only two steps:

@enumerate
@item
Put the appropriate @code{sty}, @code{bst}, and @code{bib} files 
where LaTeX/BibTeX can see them.

@item
Put the Perl script @code{nat2jour.pl} somwhere in your @code{PATH},
and make sure it is executable (@code{chmod +x nat2jour.pl}).
@end enumerate

There are two options for the first step:

@itemize @bullet
@item
Keep all the necessary files in the same directory where you are 
processing your documents.  (Or make symbolic links to them with
the UNIX command @code{ln -s}.)

@item
OR Set the environment variables @code{TEXINPUTS}, @code{BSTINPUTS}, and 
@code{BIBINPUTS}.

@itemize @bullet
@item
@code{TEXINPUTS} tells LaTeX where to find @code{sty} (style) files.
@item
@code{BSTINPUTS} tells BibTeX where to find @code{bst} 
(bibliography style) files.
@item
@code{BIBINPUTS} tells BibTeX where to look for @code{bib}
(bibliography database) files.
@end itemize
@end itemize

Local users at Berkeley should set their environment variables
to include the directory @code{~jbaker/tex/inputs/astronat//},
and do not need to copy any files, except that you will want to put
then Perl script @code{nat2jour.pl} in your @code{PATH}.

Suppose you have all the files in sub-directories of 
@code{/somewhere/tex/inputs/}.  Then the environment variables
can be set as follows.  For C-shell (put these in your 
@code{.cshrc} file):

@example
@code{setenv TEXINPUTS .:/somewhere/tex/inputs//:$TEXINPUTS}
@end example

@noindent 
and for sh, ksh, or bash (put in @code{.profile}):

@example
@code{TEXINPUTS=.:/somewhere/tex/inputs//:$TEXINPUTS}
@code{export TEXINPUTS}
@end example

@noindent
and similarly for the other two variables.  The trailing // means
recurse through any sub-directories.  Note that the directories
in the colon-separated list are searched in order, so you'll want to 
have the path to these files ahead of any directories that have any 
files of the same name (otherwise the wrong ones will be used).

If you can become root you can install the files in a standard
location where @code{TEXINPUTS} points.  Even if you are able to 
do this, you may still need to explicitly set the 
other two variables.  According to the BibTeX documentation it looks
in @code{TEXINPUTS} by default, but in practice it doesn't actually
seem to do this.

@c ----------------------------------------------------------------------
@c ----------------------------------------------------------------------

@node Usage, Problems, Installation, Top
@comment  node-name,  next,  previous,  up
@chapter Usage

This section describes how to use the software.  First make sure you
have the necessary files in the right place, or have environment
variables set appropriately (@pxref{Installation}).

@menu
* Bib files::       How to create you bibliographic database.
* LaTeX document::  How to compose your LaTeX document.
* Citations::       Citation commands to use.
* Processing::      How to process LaTeX/BibTeX files.
* Submission::      How to generate a copy for e-submission.
@end menu

@c ----------------------------------------------------------------------

@node Bib files, LaTeX document, , Usage
@comment  node-name,  next,  previous,  up
@section Bibliography Files

Now we describe how to set up your BibTeX @code{bib} files.
If you are familiar with BibTeX already you can probably skip
this section.

@menu
* Bib databases::   Bibliography database files.
* Abbrevs::         Defining journal abbreviations.
@end menu

@node Bib databases, Abbrevs, , Bib files
@comment  node-name,  next,  previous,  up
@subsection Bibliography database files

Using BibTeX, your references are stored in a @code{bib} file, 
for example @code{myrefs.bib} (the @code{.bib} suffix is important).
These need not (indeed, should not) be limited to the articles you
are citing in the document you are preparing; BibTeX picks out the
ones you actually cite and only includes those in your bibliography.

A typical entry in a @code{bib} file looks like this:

@example
@@Book@{Peebles:94,
  author =	 @{P.~J.~E.~Peebles@},
  title = 	 "Physical Cosmology",
  publisher = 	 "Princeton University Press",
  year = 	 1994,
  address =	 "Princeton, NJ"
@}
@end example

@noindent
or like this:

@example
@@Article@{1997ApJ...485....1M,
  author = @{Myers, S.~T. and Jonathan E.~Baker and Readhead, A.~C.~S. and
            Erik M.~Leitch and Herbig, T.@},
  title = "Measurements of the Sunyaev-Zeldovich Effect...",
  journal = apj,
  year = 1997,
  month = aug,
  volume = 485,
  pages = "1--8",
@}
@end example

@noindent
Other types include 
@code{@@Booklet},
@code{@@InBook}, @code{@@InCollection}, @code{@@InProceedings},
@code{@@Manual}, @code{@@MastersThesis}, @code{@@PhDThesis},
@code{@@Proceedings}, @code{@@TechReport}, and @code{@@Unpublished}.
The @code{@@Misc} type is a catch-all which allows you to do the
formatting yourself if necessary.  Most of these types should give 
correct results for the journals using the @code{bst} files included
here for AAS and MNRAS.

The first thing after the @{ is the cite key, which you use to cite
the reference in your document.  Note that author names can have
either first or last name first, and they are separated with @code{and}.
Very long lists can be truncated with @code{and others}.  Natbib's 
automatic lettering will get confused if the author last names are
not punctuated consistently (e.g., if some of them have extra braces
as in ADS style and others don't).

Emacs (@pxref{Emacs}) has a very nice set of commands for automatically
generating a bibliographic entry in a @code{bib} file.

@node Abbrevs, , Bib databases, Bib files
@comment  node-name,  next,  previous,  up
@subsection Using String Abbreviations for Journals (optional)

BibTeX will complain if it does not know the definition of a string
which is not enclosed in quotes, such as the strings @code{apj} and
@code{aug} in the example above.  References downloaded from ADS will
have @code{"\apj"} instead of @code{apj}; this tells BibTeX to write
@code{\apj} in the bibliographic entry.  This is fine for AASTeX macros,
where the @code{\apj} command is defined in the style file.  But if
you are using a style file which does not define this command, you
will get errors from LaTeX unless you define it yourself.

One way to handle this is to use the journal abbreviation @code{bib}
files such as the ones included here, @code{apj-jour.bib} or 
@code{mn-jour.bib}.  These contain commands such as

@example
@@STRING@{apj = "\apj"@}
@end example

@noindent
in @code{apj-jour.bib} and

@example
@@STRING@{apj = "ApJ"@}
@end example

@noindent
in @code{mn-jour.bib} which define the strings if you use a command like
@code{\bibliography@{apj-jour,myrefs@}} or
@code{\bibliography@{mn-jour,myrefs@}} in your document 
(@pxref{LaTeX document}) to include the @code{bib} files.  This way 
you don't have to change your @code{bib} database for different 
journals, and you don't have to define a lot of new journal 
commands in your LaTeX document.  Look at the files to see all 
the defined abbreviations.  The very short abbreviations such as 
"ApJ" for frequently cited journals are included, along with many
others following the IAU convention.

The three-letter month abbreviation strings
and strings for a few mathematics journals are defined in the
bibliography style (@code{bst}) files.

@c ----------------------------------------------------------------------

@node LaTeX document, Citations, Bib files, Usage
@comment  node-name,  next,  previous,  up
@section Preparing the LaTeX Document

First include the natbib style file.  For LaTeX 2e,

@example
\documentclass@{ ... @}
\usepackage@{ ... ,natbib@}
@end example

@noindent
or for LaTeX 2.09 (required by the journals),

@example
\documentstyle[ ... ,natbib209]@{ ... @}
@end example

@noindent
Place the natbib package last in your list of packages to make
sure it doesn't get over-written.  It works with the AASTeX styles
as well as the @code{emulateapj} style, and with the @code{mn} 
style (mostly, but @pxref{MNRAS style}).

Second, somewhere in the preamble (before @code{\begin@{document@}}),
use the command 

@example
\citestyle@{aa@}
@end example

@noindent
This simply insures that natbib gives you citations which look
like (Bester 1998) and not like (Bester, 1998).  The @code{aa}
stands for Astronomy & Astrophysics, but this citation style
is appropriate for all the journals.  (Actually, the code 
@code{nat2jour.pl}, which prepares files for electronic
submission, produces citations like this regardless of the
@code{\citestyle} command, so this does not matter for the
final output.)

Next, at the point where you want the bibliography to appear, use

@example
\bibliographystyle@{STYLE@}
\bibliography@{REFS@}
@end example

@noindent
where @code{STYLE} is the name of the bibliography style you want to
use (e.g., @code{\bibliographystyle@{apj@}} to use @code{apj.bst} --- 
leave off the @code{.bst} suffix).  @code{REFS} is a list of 
bibliography files to use (leave off the @code{.bib}).  So if you 
wanted to use the ApJ journal abbreviations (@pxref{Abbrevs})
and a database called @code{myrefs.bib}, 

@example
\bibliography@{apj-jour,myrefs@}
@end example

This loads the journal definitions from @code{apj-jour.bib}, so you can
use things like @code{journal = apj} in @code{myrefs.bib}. 

@c ----------------------------------------------------------------------

@node Citations, Processing, LaTeX document, Usage
@comment  node-name,  next,  previous,  up
@section Citation commands

The natbib package defines a number of very useful citation commands
which replace the usual @code{\cite}.  These are really necessary
in any author-year citation system, where you don't always cite a
reference using the same format for the citation.  These commands
and their output are illustrated below.  The most frequently used
are @code{\citet} (textual cite) and @code{\citep} (parenthetical cite).
@code{\cite} is equivalent to @code{\citet}, but this shouldn't be
used because it is often defined by other style files.

@table @code
@item \citet@{KEY@}
Bester et al. (1998)

@item \citep@{KEY@}
(Bester et al. 1998)
@end table

@noindent
Multiple citations work within a single cite, for example

@table @code
@item \citep@{KEY1, KEY2, KEY3, KEY4, ...@}
(Bester et al. 1998; Garibaldi et al. 1997, 1998a,b; ...)
@end table

@noindent
The lettering of the citations and references is done automatically.

You can use optional arguments to get text before and after the
citation(s):

@table @code
@item \citep[hereafter B98]@{KEY@}
(Bester et al. 1998, hereafter B98)

@item \citep[e.g.,][]@{KEY@}
(e.g., Bester et al. 1998)

@item \citep[see][p. 68]@{KEY@}
(see Bester et al. 1998, p. 68)
@end table

Any of these can have a @code{*} affixed to make a full author list
when ``et al.'' would normally be used, e.g.,

@table @code
@item \citet*@{KEY@}
Bester, Winters, & Alexander (1998)
@end table

Note that the @code{nat2jour.pl} script takes care of the bizarre 
practice of listing three names on the first citation and using 
``et al.'' thereafter, so you don't need to worry about that,
although the intermediate file will come out ``wrong''.

@table @code
@item \citeauthor@{KEY@}
Bester et al.

@item \citeyear@{KEY@}
1998

@item \citeyearpar@{KEY@}
(1998)
@end table

@code{\citealp} and @code{\citealt} are the sames as @code{\citep}
and @code{\citet}, respectively, except that they do not produce
any parentheses at all:

@table @code
@item \citealt@{KEY@}
Bester et al. 1998
@end table

Finally, @code{\citetext} can be used to place arbitrary text 
around a citation.  Look at the comments in the natbib style
files for more information.

@c ----------------------------------------------------------------------

@node Processing, Submission, Citations, Usage
@comment  node-name,  next,  previous,  up
@section Processing LaTeX/BibTeX files

When you process a document for the first time, or when you add citations
to new references, you have to go through four steps.  For a file called
@code{foo.tex} with a bibliography @code{refs.bib}:

@table @asis
@item 1. @code{latex foo}
Stores the citation keys in the @code{aux} file

@item 2. @code{bibtex foo}
Creates a bibliography (@code{.bbl}) file

@item 3. @code{latex foo}
Incorporates the @code{bbl} information

@item 4. @code{latex foo}
Gets all the citations and cross-refs right
@end table

The @code{.bbl} file is a normal-looking LaTeX file containing
the @code{\thebibliography} environment; it is inserted into the
document at the point where the @code{\bibliography} command is
issued.

If you are producing an article for electronic submission, you can
stop after step #2, run @code{nat2jour.pl} (@pxref{Submission}) and
then run LaTeX (twice) on the output.

It's not too difficult to automate this process (@pxref{Makefiles})
and speed things up.

@c ----------------------------------------------------------------------

@node Submission, , Processing, Usage
@comment  node-name,  next,  previous,  up
@section Generating a Copy for Electronic Submission

Your article looks great now, but in the shape it's in as of the
last section, you'll have to use a decidedly low-tech method
of submitting it to the journal: print it out and snail-mail it in!
This is because you cannot include complex style files like
@code{natbib.sty} with your submission, and the journals don't
provide bibliographic style files.

(As of AASTeX version 5.0, this is no longer true!  You can stop here
and simply submit your @code{tex} and @code{bbl} files.  But the 
`minor tweaks' mentioned below won't be performed, so you'll have to
do them by hand.  For instance, use the @code{\cite*} commands rather
than @code{\cite} commands the first time you cite a reference with
three authors, to get all the names.)

Fortunately, there is a Perl script, @code{nat2jour.pl}, which
comes to the rescue.  It takes the @code{tex} and @code{bbl} files
you have made (@pxref{Processing}) and makes new ones which you
can actually submit.  This is accomplished by

@itemize @bullet
@item
inlining all the citation commands properly

@item
removing all dependencies on natbib

@item
spitting out @code{\bibitem}'s with the right format
@end itemize

@noindent
A few other minor tweaks are also performed; you may notice some
small style errors in the document before processing it.
For input files @code{foo.tex} and @code{foo.bbl}, invoke
it by typing 

@example
@code{nat2jour.pl foo} 
@end example

@noindent
(make sure it is executable
and in your @code{PATH}).  By default it will make new output files 
@code{foo-aas.tex} and @code{foo-aas.bbl}, but you can name
them something different by specifying a second argument.

The new files can be processed completely independently of
the natbib @code{sty} files, the @code{bst} files, and your
@code{bib} files.  The bibliography is simply pasted in from
the @code{bbl} file, so all you need are the @code{tex} and
@code{bbl}, with the usual one or two passes with @code{latex}
to process them.

The code has two options:

@table @code
@item -inline
Inlines the bibliography so you end up with a single, stand-alone
@code{.tex} file.  The default leaves the bibliography in a separate
@code{.bbl} file.

@item -maxauth
Change the maximum number of authors before @code{et al.} is used;
default is 8.  Set to zero for no limit.

@item -references
Rather than generating the default @code{thebibliography} environment 
with @code{\bibitem}'s, generate a @code{references} environment.  This
also leaves off the @code{\markcite} or @code{\nocite} commands.  I
found it was necessary for preparing a PASP conference proceeding.
@end table

The @code{nat2jour.pl} code looks for a @code{\documentstyle} 
containing ``mn''.   If it finds it, it adds @code{\nocite} commands next 
to the inlined references; otherwise it adds the AASTeX @code{\markcite}
command (unless the @code{-references} flag is set).

The code also ensures that three-author papers are cited as
Bester, Winters, & Alexander (1998) on the first citation and
as Bester et al. (1998) thereafter.  This will not be the case
in the @strong{input} files because natbib does not do this.  In
addition, it truncates long author lists at the right point (8
authors, natbib doesn't do this).

Finally, the code may alter the appearance of the typeset
bibliography, because natbib may redefine the @code{\thebibliography}
environment in the input files.  The output files will conform to the 
other style files (such as AASTeX) you are using.

Note that the script should work on @code{bbl} files produced
with @strong{any} @code{bst} bibliography style, as long as it
produces @code{\bibitem} commands which exactly follow this format:

@example
@code{\bibitem[@{ SHORT-AUTHOR-LIST (YEAR) LONG-AUTHOR-LIST @}]}@{ @code{KEY} @}
@code{BIBLIOGRAPHIC-ENTRY-TEXT}
@end example

@noindent
The @code{LONG-AUTHOR-LIST} may be omitted when it is the same as the 
@code{SHORT-AUTHOR-LIST} (usually, <3 authors).  This is the
``extended natbib'' format used by natbib versions 5.3 and later.
The script will become confused in the unlikely event that there are 
square brackets in the author lists.  The @code{\bibitem} entries must 
be separated by blank lines.

@c ----------------------------------------------------------------------
@c ----------------------------------------------------------------------

@node Problems, Acknowledgements, Usage, Top
@chapter Problems and Troubleshooting

@noindent
1. @strong{LaTeX can't find some files}

@noindent
Check you environment variable set up, or make sure the right files
are in the directory with your document (@pxref{Installation}).

@noindent
2. @strong{nat2jour.pl produces strange results}

@noindent
Look at the diagnostic output from LaTeX or the @code{log} files.  
Make sure the @code{bst} file it
is including is coming from the correct directory (other packages
such as astrobib also have a file called @code{apj.bst}, and this
may be lurking somewhere on your system; make sure it doesn't get
found first).  The items in your input @code{bbl} file should conform
@strong{exactly} to extended natbib style (@pxref{Submission}).

@noindent
3. @strong{Some references or citations look wrong}

@noindent
This maybe a bug, but I have tested the common ones listed on the
journal web-pages so you might
be doing something exotic.  Anyway, when was the last time someone
submitted a paper with a perfect bibliography?  :)  Check your
@code{bib} file for spurious entries.  Also check the instructions 
for authors 
(@uref{http://www.journals.uchicago.edu/ApJ/, ApJ} or
@uref{http://www.blacksci.co.uk/, MNRAS}) to see that it really
is wrong.  Then you can send a bug report to 
@email{jbaker@@draco.berkeley.edu}; include the entry from the
@code{bib} file and the result in the @code{bbl} file (and @code{tex}
file, for a citation problem).  You can do the formatting by hand
by using a @code{@@Misc} entry.  Note that lettering will not work
if some the last names in the @code{bib} file are not punctuated
consistently (e.g., some have extra braces as in ADS style and
others don't).

@noindent
4. @strong{BibTeX gives warnings about entries}

@noindent
It can be somewhat persnickety about what fields are allowed for
a certain type of entry.  Make sure you're not using spurious ones.

@noindent
5. @strong{Abbreviations used for a reference (like JEB98) aren't added to the \bibitem's}

@noindent
No, they're not.  :)  You can usually get the effect by using a "note"
field in your @code{bib} entry.

@noindent
6. @strong{LaTeX crashes with mn.sty}

@noindent
There are two lines which cause trouble; use @code{mn-nat.sty}
(in the @code{mn} subdirectory) instead (@pxref{MNRAS style}).

@c ----------------------------------------------------------------------
@c ----------------------------------------------------------------------

@node Acknowledgements, Appendix, Problems, Top
@comment  node-name,  next,  previous,  up
@chapter Acknowledgements

The Perl script for inlining citations has its roots in the 
@code{2apj.pl} code by 
@uref{http://www.nhn.ou.edu/~baron/, Eddie Baron}
which was designed for ApJ and older versions of natbib.

The bibliography style files were generated using Patrick Daly's
makebst program, and then modified with some help from 
the `astrobib' package by Henry Ferguson.  (This package, available from 
@uref{http://marvel.stsci.edu/~ferguson}, is not
compatible with electronic submissions.  The journal abbreviation
bib files are are also modified versions of the files included in 
the astrobib distribution.

@c ----------------------------------------------------------------------
@c ----------------------------------------------------------------------

@node Appendix, , Acknowledgements, Top

@menu
* MNRAS style::     Problem with \bibhang.
* Makefiles::       Automating things.
* Emacs::           Use BibTeX/RefTeX mode!
@end menu

@c ----------------------------------------------------------------------

@node MNRAS style, Makefiles, , Appendix
@comment  node-name,  next,  previous,  up
@appendix MNRAS style

The two lines in @code{mn.sty} (version 1.4) involving the
@code{\bibhang} command cause fatal errors when used with
natbib.  Use @code{mn-nat.sty}
instead, which has them commented them out and works fine.  
The @code{nat2jour.pl}
program will then change @code{\documentstyle[...]@{mn-nat@}} to 
@code{\documentstyle[...]@{mn@}} for you, since natbib is no longer
needed in its output files.

@example
% Set length of hanging indentation for bibliography entries
%
%%% \newlength@{\bibhang@}
%%% \setlength@{\bibhang@}@{2em@}
@end example

@c ----------------------------------------------------------------------

@node Makefiles, Emacs, MNRAS style, Appendix
@comment  node-name,  next,  previous,  up
@appendix Makefiles

Since the processing commands 
(@code{latex}-@code{bibtex}-@code{latex}-@code{latex}, 
plus @code{nat2jour.pl}) are numerous,
it's nice to do them automatically.

In the @code{example} sub-directory there is a sample Makefile which 
does this.  Just put it
in a directory where your LaTeX files (for example, @code{foo.tex})
are, and you can use commands like @code{make foo.dvi}, or
@code{make foo.ps}, or @code{make foo.pr} (print).  They'll work
in any order, as all of the dependencies are made automatically
when they don't exist or are out-of-date.

Use @code{make foo-apj} to make the @code{tex} and @code{bbl}
file for submission.  This also works with the @code{.dvi} and
other extensions to produce printable documents.  You can change
the @code{-apj} journal suffix by editing the definition of @code{JSUF}
at the top of the Makefile.

Use @code{make clean} or @code{make realclean} when things 
get out of hand; the latter deletes most everything except for
the original @code{tex} and @code{bib} files.

@node Emacs, , Makefiles, Appendix
@comment  node-name,  next,  previous,  up
@appendix Useful Emacs modes

Emacs has a very nice RefTeX mode for editing @code{bib} files and
selecting citations.  XEmacs is particularly nice because you can easily
see most of the available commands in pull-down menus.  They allow you
to search for patterns in your database and select the reference you
want, with keystrokes for the different natbib cite commands.  You can
also automatically generate different types of entry for your @code{bib}
file, with all the appropriate fields in place.  Add the following
lines to your @code{.emacs}:

@example
(autoload 'reftex-mode "reftex" "RefTeX Minor Mode" t)
(autoload 'turn-on-reftex "reftex" "RefTeX Minor Mode" nil)
(add-hook 'LaTeX-mode-hook 'turn-on-reftex)
@end example

@noindent
This package is included in recent Emacsen, but the commands will
fail if you don't have it.

@bye
